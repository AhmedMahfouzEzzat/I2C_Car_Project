
Master node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800100  0000204c  000020e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000204c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000664  0080013e  0080013e  0000211e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000211e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002150  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000478  00000000  00000000  00002190  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004dff  00000000  00000000  00002608  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000014ac  00000000  00000000  00007407  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002e44  00000000  00000000  000088b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d14  00000000  00000000  0000b6f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000186b  00000000  00000000  0000c40c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000048ca  00000000  00000000  0000dc77  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000458  00000000  00000000  00012541  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 d3 0d 	jmp	0x1ba6	; 0x1ba6 <__vector_1>
       8:	0c 94 00 0e 	jmp	0x1c00	; 0x1c00 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__vector_10>
      2c:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__vector_11>
      30:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__vector_12>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ec e4       	ldi	r30, 0x4C	; 76
      7c:	f0 e2       	ldi	r31, 0x20	; 32
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ae 33       	cpi	r26, 0x3E	; 62
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	27 e0       	ldi	r18, 0x07	; 7
      8c:	ae e3       	ldi	r26, 0x3E	; 62
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a2 3a       	cpi	r26, 0xA2	; 162
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 2d 02 	call	0x45a	; 0x45a <main>
      9e:	0c 94 24 10 	jmp	0x2048	; 0x2048 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <INIT_ADC>:
      a6:	ec e7       	ldi	r30, 0x7C	; 124
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	80 81       	ld	r24, Z
      ac:	80 64       	ori	r24, 0x40	; 64
      ae:	80 83       	st	Z, r24
      b0:	ea e7       	ldi	r30, 0x7A	; 122
      b2:	f0 e0       	ldi	r31, 0x00	; 0
      b4:	80 81       	ld	r24, Z
      b6:	80 68       	ori	r24, 0x80	; 128
      b8:	80 83       	st	Z, r24
      ba:	80 81       	ld	r24, Z
      bc:	87 60       	ori	r24, 0x07	; 7
      be:	80 83       	st	Z, r24
      c0:	08 95       	ret

000000c2 <Analog_Read>:
      c2:	ec e7       	ldi	r30, 0x7C	; 124
      c4:	f0 e0       	ldi	r31, 0x00	; 0
      c6:	90 81       	ld	r25, Z
      c8:	89 2b       	or	r24, r25
      ca:	80 83       	st	Z, r24
      cc:	ea e7       	ldi	r30, 0x7A	; 122
      ce:	f0 e0       	ldi	r31, 0x00	; 0
      d0:	80 81       	ld	r24, Z
      d2:	80 64       	ori	r24, 0x40	; 64
      d4:	80 83       	st	Z, r24
      d6:	80 81       	ld	r24, Z
      d8:	86 fd       	sbrc	r24, 6
      da:	fd cf       	rjmp	.-6      	; 0xd6 <Analog_Read+0x14>
      dc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
      e0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
      e4:	08 95       	ret

000000e6 <__vector_12>:
int counts;
float dist;
uint16_t us_per_count;


ISR(TIMER1_COMPB_vect){
      e6:	1f 92       	push	r1
      e8:	0f 92       	push	r0
      ea:	0f b6       	in	r0, 0x3f	; 63
      ec:	0f 92       	push	r0
      ee:	11 24       	eor	r1, r1
      f0:	8f 93       	push	r24
      f2:	9f 93       	push	r25

    //Generate a 12us pulse to trigger the HR-SR04
    PORTB ^= ( 1 << PORTB1);
      f4:	95 b1       	in	r25, 0x05	; 5
      f6:	82 e0       	ldi	r24, 0x02	; 2
      f8:	98 27       	eor	r25, r24
      fa:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fc:	94 e0       	ldi	r25, 0x04	; 4
      fe:	9a 95       	dec	r25
     100:	f1 f7       	brne	.-4      	; 0xfe <__vector_12+0x18>
    _delay_us(12);
    PORTB ^= ( 1 << PORTB1);
     102:	95 b1       	in	r25, 0x05	; 5
     104:	89 27       	eor	r24, r25
     106:	85 b9       	out	0x05, r24	; 5
}
     108:	9f 91       	pop	r25
     10a:	8f 91       	pop	r24
     10c:	0f 90       	pop	r0
     10e:	0f be       	out	0x3f, r0	; 63
     110:	0f 90       	pop	r0
     112:	1f 90       	pop	r1
     114:	18 95       	reti

00000116 <__vector_10>:

ISR(TIMER1_CAPT_vect){
     116:	1f 92       	push	r1
     118:	0f 92       	push	r0
     11a:	0f b6       	in	r0, 0x3f	; 63
     11c:	0f 92       	push	r0
     11e:	11 24       	eor	r1, r1
     120:	cf 92       	push	r12
     122:	df 92       	push	r13
     124:	ef 92       	push	r14
     126:	ff 92       	push	r15
     128:	2f 93       	push	r18
     12a:	3f 93       	push	r19
     12c:	4f 93       	push	r20
     12e:	5f 93       	push	r21
     130:	6f 93       	push	r22
     132:	7f 93       	push	r23
     134:	8f 93       	push	r24
     136:	9f 93       	push	r25
     138:	af 93       	push	r26
     13a:	bf 93       	push	r27
     13c:	cf 93       	push	r28
     13e:	df 93       	push	r29
     140:	ef 93       	push	r30
     142:	ff 93       	push	r31

    if(TCCR1B & (1 << ICES1)){
     144:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     148:	86 ff       	sbrs	r24, 6
     14a:	0e c0       	rjmp	.+28     	; 0x168 <__vector_10+0x52>

        TCCR1B &= ~( 1 << ICES1);
     14c:	e1 e8       	ldi	r30, 0x81	; 129
     14e:	f0 e0       	ldi	r31, 0x00	; 0
     150:	80 81       	ld	r24, Z
     152:	8f 7b       	andi	r24, 0xBF	; 191
     154:	80 83       	st	Z, r24
        rising = ICR1;
     156:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     15a:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     15e:	90 93 97 07 	sts	0x0797, r25	; 0x800797 <rising+0x1>
     162:	80 93 96 07 	sts	0x0796, r24	; 0x800796 <rising>
     166:	42 c0       	rjmp	.+132    	; 0x1ec <__vector_10+0xd6>
    }
    else{
        TCCR1B |= (1 << ICES1);
     168:	e1 e8       	ldi	r30, 0x81	; 129
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	80 81       	ld	r24, Z
     16e:	80 64       	ori	r24, 0x40	; 64
     170:	80 83       	st	Z, r24
        falling = ICR1;
     172:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     176:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     17a:	70 93 8d 07 	sts	0x078D, r23	; 0x80078d <falling+0x1>
     17e:	60 93 8c 07 	sts	0x078C, r22	; 0x80078c <falling>
        counts = falling - rising;
     182:	80 91 96 07 	lds	r24, 0x0796	; 0x800796 <rising>
     186:	90 91 97 07 	lds	r25, 0x0797	; 0x800797 <rising+0x1>
     18a:	eb 01       	movw	r28, r22
     18c:	c8 1b       	sub	r28, r24
     18e:	d9 0b       	sbc	r29, r25
     190:	d0 93 95 07 	sts	0x0795, r29	; 0x800795 <counts+0x1>
     194:	c0 93 94 07 	sts	0x0794, r28	; 0x800794 <counts>
        dist = (float)us_per_count * counts * 10 / 580;
     198:	60 91 92 07 	lds	r22, 0x0792	; 0x800792 <us_per_count>
     19c:	70 91 93 07 	lds	r23, 0x0793	; 0x800793 <us_per_count+0x1>
     1a0:	80 e0       	ldi	r24, 0x00	; 0
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <__floatunsisf>
     1a8:	6b 01       	movw	r12, r22
     1aa:	7c 01       	movw	r14, r24
     1ac:	be 01       	movw	r22, r28
     1ae:	dd 0f       	add	r29, r29
     1b0:	88 0b       	sbc	r24, r24
     1b2:	99 0b       	sbc	r25, r25
     1b4:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__floatsisf>
     1b8:	9b 01       	movw	r18, r22
     1ba:	ac 01       	movw	r20, r24
     1bc:	c7 01       	movw	r24, r14
     1be:	b6 01       	movw	r22, r12
     1c0:	0e 94 86 0f 	call	0x1f0c	; 0x1f0c <__mulsf3>
     1c4:	20 e0       	ldi	r18, 0x00	; 0
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	40 e2       	ldi	r20, 0x20	; 32
     1ca:	51 e4       	ldi	r21, 0x41	; 65
     1cc:	0e 94 86 0f 	call	0x1f0c	; 0x1f0c <__mulsf3>
     1d0:	20 e0       	ldi	r18, 0x00	; 0
     1d2:	30 e0       	ldi	r19, 0x00	; 0
     1d4:	41 e1       	ldi	r20, 0x11	; 17
     1d6:	54 e4       	ldi	r21, 0x44	; 68
     1d8:	0e 94 50 0e 	call	0x1ca0	; 0x1ca0 <__divsf3>
     1dc:	60 93 8e 07 	sts	0x078E, r22	; 0x80078e <dist>
     1e0:	70 93 8f 07 	sts	0x078F, r23	; 0x80078f <dist+0x1>
     1e4:	80 93 90 07 	sts	0x0790, r24	; 0x800790 <dist+0x2>
     1e8:	90 93 91 07 	sts	0x0791, r25	; 0x800791 <dist+0x3>
    }
}
     1ec:	ff 91       	pop	r31
     1ee:	ef 91       	pop	r30
     1f0:	df 91       	pop	r29
     1f2:	cf 91       	pop	r28
     1f4:	bf 91       	pop	r27
     1f6:	af 91       	pop	r26
     1f8:	9f 91       	pop	r25
     1fa:	8f 91       	pop	r24
     1fc:	7f 91       	pop	r23
     1fe:	6f 91       	pop	r22
     200:	5f 91       	pop	r21
     202:	4f 91       	pop	r20
     204:	3f 91       	pop	r19
     206:	2f 91       	pop	r18
     208:	ff 90       	pop	r15
     20a:	ef 90       	pop	r14
     20c:	df 90       	pop	r13
     20e:	cf 90       	pop	r12
     210:	0f 90       	pop	r0
     212:	0f be       	out	0x3f, r0	; 63
     214:	0f 90       	pop	r0
     216:	1f 90       	pop	r1
     218:	18 95       	reti

0000021a <init_ultrasonic_sensor>:


void init_ultrasonic_sensor(){

    //PORTB2 as output (Arduino PIN 10)
    DDRB |= (1 << PORTB1);  
     21a:	21 9a       	sbi	0x04, 1	; 4

    //****TIMER1 INIT****//

    //noice reduction enable
    TCCR1B |= (1<<ICNC1); 
     21c:	e1 e8       	ldi	r30, 0x81	; 129
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	80 81       	ld	r24, Z
     222:	80 68       	ori	r24, 0x80	; 128
     224:	80 83       	st	Z, r24

    //Prescale to 64
    TCCR1B |= (1<<CS10) | (1<<CS11); 
     226:	80 81       	ld	r24, Z
     228:	83 60       	ori	r24, 0x03	; 3
     22a:	80 83       	st	Z, r24

    //select CTC mode
    TCCR1B |= (1<<WGM12); 
     22c:	80 81       	ld	r24, Z
     22e:	88 60       	ori	r24, 0x08	; 8
     230:	80 83       	st	Z, r24

    //read Int. at: rising edge, falling edge
	TIMSK1 |= (1<<ICIE1) | (1<<OCIE1B);
     232:	af e6       	ldi	r26, 0x6F	; 111
     234:	b0 e0       	ldi	r27, 0x00	; 0
     236:	8c 91       	ld	r24, X
     238:	84 62       	ori	r24, 0x24	; 36
     23a:	8c 93       	st	X, r24

    //read Int. at rising edge
	TCCR1B |= (1<<ICES1);
     23c:	80 81       	ld	r24, Z
     23e:	80 64       	ori	r24, 0x40	; 64
     240:	80 83       	st	Z, r24

    //calculate TOP (70ms runtime for one cycle): 16MHz/64 = 25000 count/sec. = 25000/1000 = 2500 count/us / 100*70 = 17500 count/70ms
    OCR1B = 17500;
     242:	8c e5       	ldi	r24, 0x5C	; 92
     244:	94 e4       	ldi	r25, 0x44	; 68
     246:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     24a:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>

    //CPU-speed / Prescale = cycles/sec. 1sec/ freq./sec. = 4 (t= 4us/cycle)
    us_per_count = 4;
     24e:	84 e0       	ldi	r24, 0x04	; 4
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	90 93 93 07 	sts	0x0793, r25	; 0x800793 <us_per_count+0x1>
     256:	80 93 92 07 	sts	0x0792, r24	; 0x800792 <us_per_count>

    //activate global interrupt
    sei();
     25a:	78 94       	sei
     25c:	08 95       	ret

0000025e <read_dist>:

}

int read_dist(){
    return (int)dist;
     25e:	60 91 8e 07 	lds	r22, 0x078E	; 0x80078e <dist>
     262:	70 91 8f 07 	lds	r23, 0x078F	; 0x80078f <dist+0x1>
     266:	80 91 90 07 	lds	r24, 0x0790	; 0x800790 <dist+0x2>
     26a:	90 91 91 07 	lds	r25, 0x0791	; 0x800791 <dist+0x3>
     26e:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <__fixsfsi>
     272:	cb 01       	movw	r24, r22
     274:	08 95       	ret

00000276 <i2c_write>:
     276:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     27a:	84 e8       	ldi	r24, 0x84	; 132
     27c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     280:	ec eb       	ldi	r30, 0xBC	; 188
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	80 81       	ld	r24, Z
     286:	88 23       	and	r24, r24
     288:	ec f7       	brge	.-6      	; 0x284 <i2c_write+0xe>
     28a:	08 95       	ret

0000028c <i2c_start>:
     28c:	84 ea       	ldi	r24, 0xA4	; 164
     28e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     292:	ec eb       	ldi	r30, 0xBC	; 188
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	80 81       	ld	r24, Z
     298:	88 23       	and	r24, r24
     29a:	ec f3       	brlt	.-6      	; 0x296 <i2c_start+0xa>
     29c:	e9 eb       	ldi	r30, 0xB9	; 185
     29e:	f0 e0       	ldi	r31, 0x00	; 0
     2a0:	80 81       	ld	r24, Z
     2a2:	88 7f       	andi	r24, 0xF8	; 248
     2a4:	88 30       	cpi	r24, 0x08	; 8
     2a6:	e1 f7       	brne	.-8      	; 0x2a0 <i2c_start+0x14>
     2a8:	08 95       	ret

000002aa <i2c_init>:
     2aa:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     2ae:	87 e4       	ldi	r24, 0x47	; 71
     2b0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     2b4:	84 e0       	ldi	r24, 0x04	; 4
     2b6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     2ba:	08 95       	ret

000002bc <ON_OFF_ISR>:
	vTaskSuspend(NULL);
}

void ON_OFF_ISR()
{
	flag = !flag;
     2bc:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <__data_end>
     2c0:	81 e0       	ldi	r24, 0x01	; 1
     2c2:	91 11       	cpse	r25, r1
     2c4:	80 e0       	ldi	r24, 0x00	; 0
     2c6:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <__data_end>
	flag |= on_off_ID;
     2ca:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <__data_end>
     2ce:	80 68       	ori	r24, 0x80	; 128
     2d0:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <__data_end>
	xQueueSendToFrontFromISR(xQueue,&flag,TICKS_TO_WAIT);
     2d4:	21 e0       	ldi	r18, 0x01	; 1
     2d6:	4a e0       	ldi	r20, 0x0A	; 10
     2d8:	50 e0       	ldi	r21, 0x00	; 0
     2da:	6e e3       	ldi	r22, 0x3E	; 62
     2dc:	71 e0       	ldi	r23, 0x01	; 1
     2de:	80 91 9e 07 	lds	r24, 0x079E	; 0x80079e <xQueue>
     2e2:	90 91 9f 07 	lds	r25, 0x079F	; 0x80079f <xQueue+0x1>
     2e6:	0e 94 97 06 	call	0xd2e	; 0xd2e <xQueueGenericSendFromISR>
	xTaskResumeFromISR(on_off_Handle);
     2ea:	80 91 98 07 	lds	r24, 0x0798	; 0x800798 <on_off_Handle>
     2ee:	90 91 99 07 	lds	r25, 0x0799	; 0x800799 <on_off_Handle+0x1>
     2f2:	0e 94 52 09 	call	0x12a4	; 0x12a4 <xTaskResumeFromISR>
     2f6:	08 95       	ret

000002f8 <ultrsonic_task>:
	for( ;; );
	return 0;
}

void ultrsonic_task()
{
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	00 d0       	rcall	.+0      	; 0x2fe <ultrsonic_task+0x6>
     2fe:	cd b7       	in	r28, 0x3d	; 61
     300:	de b7       	in	r29, 0x3e	; 62
	init_ultrasonic_sensor();
     302:	0e 94 0d 01 	call	0x21a	; 0x21a <init_ultrasonic_sensor>
	const TickType_t xDelay = 50 / portTICK_PERIOD_MS;
	int dist = 0;
     306:	1a 82       	std	Y+2, r1	; 0x02
     308:	19 82       	std	Y+1, r1	; 0x01
	for (;;)
	{
		dist=read_dist();
     30a:	0e 94 2f 01 	call	0x25e	; 0x25e <read_dist>
     30e:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <__fixsfsi>
     312:	86 2f       	mov	r24, r22
     314:	69 83       	std	Y+1, r22	; 0x01
     316:	7a 83       	std	Y+2, r23	; 0x02
		USART_send(dist);
     318:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <USART_send>
		if(dist < 20)
     31c:	89 81       	ldd	r24, Y+1	; 0x01
     31e:	9a 81       	ldd	r25, Y+2	; 0x02
     320:	84 31       	cpi	r24, 0x14	; 20
     322:	91 05       	cpc	r25, r1
     324:	7c f4       	brge	.+30     	; 0x344 <ultrsonic_task+0x4c>
		{
			dist &= ~ ID_MASK ;
     326:	8f 73       	andi	r24, 0x3F	; 63
     328:	9a 83       	std	Y+2, r25	; 0x02
     32a:	89 83       	std	Y+1, r24	; 0x01
			dist |= ultra_S_ID ; //add message id in last 2 bit 
			xQueueSendToFront(xQueue,&dist,TICKS_TO_WAIT);
     32c:	21 e0       	ldi	r18, 0x01	; 1
     32e:	4a e0       	ldi	r20, 0x0A	; 10
     330:	50 e0       	ldi	r21, 0x00	; 0
     332:	be 01       	movw	r22, r28
     334:	6f 5f       	subi	r22, 0xFF	; 255
     336:	7f 4f       	sbci	r23, 0xFF	; 255
     338:	80 91 9e 07 	lds	r24, 0x079E	; 0x80079e <xQueue>
     33c:	90 91 9f 07 	lds	r25, 0x079F	; 0x80079f <xQueue+0x1>
     340:	0e 94 f6 05 	call	0xbec	; 0xbec <xQueueGenericSend>
		}
		vTaskDelay( xDelay );
     344:	82 e3       	ldi	r24, 0x32	; 50
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	0e 94 27 0b 	call	0x164e	; 0x164e <vTaskDelay>
	}
     34c:	de cf       	rjmp	.-68     	; 0x30a <ultrsonic_task+0x12>

0000034e <task_ADC>:

}

void task_ADC()
{
     34e:	cf 93       	push	r28
     350:	df 93       	push	r29
     352:	1f 92       	push	r1
     354:	cd b7       	in	r28, 0x3d	; 61
     356:	de b7       	in	r29, 0x3e	; 62
	INIT_ADC();
     358:	0e 94 53 00 	call	0xa6	; 0xa6 <INIT_ADC>
	const TickType_t xDelay = 50 / portTICK_PERIOD_MS;  //time to wait
	for (;;)
	{
		unsigned char data = Analog_Read(0);
		data =(data*500)/1023;
     35c:	0f 2e       	mov	r0, r31
     35e:	f4 ef       	ldi	r31, 0xF4	; 244
     360:	ef 2e       	mov	r14, r31
     362:	ff 24       	eor	r15, r15
     364:	f3 94       	inc	r15
     366:	f0 2d       	mov	r31, r0
     368:	0f ef       	ldi	r16, 0xFF	; 255
     36a:	13 e0       	ldi	r17, 0x03	; 3
{
	INIT_ADC();
	const TickType_t xDelay = 50 / portTICK_PERIOD_MS;  //time to wait
	for (;;)
	{
		unsigned char data = Analog_Read(0);
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	0e 94 61 00 	call	0xc2	; 0xc2 <Analog_Read>
		data =(data*500)/1023;
     372:	28 2f       	mov	r18, r24
     374:	2e 9d       	mul	r18, r14
     376:	c0 01       	movw	r24, r0
     378:	2f 9d       	mul	r18, r15
     37a:	90 0d       	add	r25, r0
     37c:	11 24       	eor	r1, r1
     37e:	b8 01       	movw	r22, r16
     380:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <__divmodhi4>
		if(data>30)
     384:	6f 31       	cpi	r22, 0x1F	; 31
     386:	10 f4       	brcc	.+4      	; 0x38c <task_ADC+0x3e>
	INIT_ADC();
	const TickType_t xDelay = 50 / portTICK_PERIOD_MS;  //time to wait
	for (;;)
	{
		unsigned char data = Analog_Read(0);
		data =(data*500)/1023;
     388:	69 83       	std	Y+1, r22	; 0x01
     38a:	0f c0       	rjmp	.+30     	; 0x3aa <task_ADC+0x5c>
		if(data>30)
		{
			data &= ~ ID_MASK ;
			data |= tempr_ID ;  //add message id in last 2 bit  
     38c:	6f 73       	andi	r22, 0x3F	; 63
     38e:	60 64       	ori	r22, 0x40	; 64
     390:	69 83       	std	Y+1, r22	; 0x01
			xQueueSendToFront(xQueue,&data,TICKS_TO_WAIT);
     392:	21 e0       	ldi	r18, 0x01	; 1
     394:	4a e0       	ldi	r20, 0x0A	; 10
     396:	50 e0       	ldi	r21, 0x00	; 0
     398:	be 01       	movw	r22, r28
     39a:	6f 5f       	subi	r22, 0xFF	; 255
     39c:	7f 4f       	sbci	r23, 0xFF	; 255
     39e:	80 91 9e 07 	lds	r24, 0x079E	; 0x80079e <xQueue>
     3a2:	90 91 9f 07 	lds	r25, 0x079F	; 0x80079f <xQueue+0x1>
     3a6:	0e 94 f6 05 	call	0xbec	; 0xbec <xQueueGenericSend>
		}
		
		vTaskDelay( xDelay );
     3aa:	82 e3       	ldi	r24, 0x32	; 50
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	0e 94 27 0b 	call	0x164e	; 0x164e <vTaskDelay>
	}
     3b2:	dc cf       	rjmp	.-72     	; 0x36c <task_ADC+0x1e>

000003b4 <task_I2C>:
}


void task_I2C()
{
     3b4:	cf 93       	push	r28
     3b6:	df 93       	push	r29
     3b8:	1f 92       	push	r1
     3ba:	cd b7       	in	r28, 0x3d	; 61
     3bc:	de b7       	in	r29, 0x3e	; 62
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3be:	2f ef       	ldi	r18, 0xFF	; 255
     3c0:	89 e6       	ldi	r24, 0x69	; 105
     3c2:	98 e1       	ldi	r25, 0x18	; 24
     3c4:	21 50       	subi	r18, 0x01	; 1
     3c6:	80 40       	sbci	r24, 0x00	; 0
     3c8:	90 40       	sbci	r25, 0x00	; 0
     3ca:	e1 f7       	brne	.-8      	; 0x3c4 <task_I2C+0x10>
     3cc:	00 c0       	rjmp	.+0      	; 0x3ce <task_I2C+0x1a>
     3ce:	00 00       	nop
	unsigned char data;
	_delay_ms(500);//wait slave to initialize
	i2c_init();
     3d0:	0e 94 55 01 	call	0x2aa	; 0x2aa <i2c_init>
	i2c_start();
     3d4:	0e 94 46 01 	call	0x28c	; 0x28c <i2c_start>
	i2c_write(0x02); //address
     3d8:	82 e0       	ldi	r24, 0x02	; 2
     3da:	0e 94 3b 01 	call	0x276	; 0x276 <i2c_write>
	const TickType_t xDelay = 40 / portTICK_PERIOD_MS;
	for (;;)
	{
		if( uxQueueMessagesWaiting( xQueue ) != 0 )
     3de:	80 91 9e 07 	lds	r24, 0x079E	; 0x80079e <xQueue>
     3e2:	90 91 9f 07 	lds	r25, 0x079F	; 0x80079f <xQueue+0x1>
     3e6:	0e 94 92 07 	call	0xf24	; 0xf24 <uxQueueMessagesWaiting>
     3ea:	88 23       	and	r24, r24
     3ec:	79 f0       	breq	.+30     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
		{
			xQueueReceive(xQueue,&data,TICKS_TO_WAIT);
     3ee:	20 e0       	ldi	r18, 0x00	; 0
     3f0:	4a e0       	ldi	r20, 0x0A	; 10
     3f2:	50 e0       	ldi	r21, 0x00	; 0
     3f4:	be 01       	movw	r22, r28
     3f6:	6f 5f       	subi	r22, 0xFF	; 255
     3f8:	7f 4f       	sbci	r23, 0xFF	; 255
     3fa:	80 91 9e 07 	lds	r24, 0x079E	; 0x80079e <xQueue>
     3fe:	90 91 9f 07 	lds	r25, 0x079F	; 0x80079f <xQueue+0x1>
     402:	0e 94 cf 06 	call	0xd9e	; 0xd9e <xQueueGenericReceive>
			i2c_write(data); //data
     406:	89 81       	ldd	r24, Y+1	; 0x01
     408:	0e 94 3b 01 	call	0x276	; 0x276 <i2c_write>
		}
		
		vTaskDelay( xDelay );
     40c:	88 e2       	ldi	r24, 0x28	; 40
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	0e 94 27 0b 	call	0x164e	; 0x164e <vTaskDelay>
	}
     414:	e4 cf       	rjmp	.-56     	; 0x3de <task_I2C+0x2a>

00000416 <ON_OFF_task>:
	i2c_stop();
}
void ON_OFF_task()
{
	if(!flag)
     416:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <__data_end>
     41a:	81 11       	cpse	r24, r1
     41c:	0d c0       	rjmp	.+26     	; 0x438 <ON_OFF_task+0x22>
	{
		vTaskSuspend(ultr_Handle);
     41e:	80 91 a0 07 	lds	r24, 0x07A0	; 0x8007a0 <ultr_Handle>
     422:	90 91 a1 07 	lds	r25, 0x07A1	; 0x8007a1 <ultr_Handle+0x1>
     426:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <vTaskSuspend>
		vTaskSuspend(adc_Handle);
     42a:	80 91 9a 07 	lds	r24, 0x079A	; 0x80079a <adc_Handle>
     42e:	90 91 9b 07 	lds	r25, 0x079B	; 0x80079b <adc_Handle+0x1>
     432:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <vTaskSuspend>
     436:	0c c0       	rjmp	.+24     	; 0x450 <ON_OFF_task+0x3a>
	}
	else
	{
		vTaskResume(ultr_Handle);
     438:	80 91 a0 07 	lds	r24, 0x07A0	; 0x8007a0 <ultr_Handle>
     43c:	90 91 a1 07 	lds	r25, 0x07A1	; 0x8007a1 <ultr_Handle+0x1>
     440:	0e 94 03 09 	call	0x1206	; 0x1206 <vTaskResume>
		vTaskResume(adc_Handle);
     444:	80 91 9a 07 	lds	r24, 0x079A	; 0x80079a <adc_Handle>
     448:	90 91 9b 07 	lds	r25, 0x079B	; 0x80079b <adc_Handle+0x1>
     44c:	0e 94 03 09 	call	0x1206	; 0x1206 <vTaskResume>
	}
	vTaskSuspend(NULL);
     450:	80 e0       	ldi	r24, 0x00	; 0
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <vTaskSuspend>
     458:	08 95       	ret

0000045a <main>:

//SemaphoreHandle_t sem;
QueueHandle_t xQueue;
int main(void)
{ 
	cli(); 
     45a:	f8 94       	cli
	// initialization 
	USART_init();
     45c:	0e 94 2d 0e 	call	0x1c5a	; 0x1c5a <USART_init>
	//interrupt mode (trigger on low input, any change, rising edge, or falling edge)
	attachInterrupt(0, ON_OFF_ISR, 3); //faling 
     460:	43 e0       	ldi	r20, 0x03	; 3
     462:	50 e0       	ldi	r21, 0x00	; 0
     464:	6e e5       	ldi	r22, 0x5E	; 94
     466:	71 e0       	ldi	r23, 0x01	; 1
     468:	80 e0       	ldi	r24, 0x00	; 0
     46a:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <attachInterrupt>
	//sem =  xSemaphoreCreateBinary();
	xTaskCreate(task_I2C,"task_I2C",0x100,NULL,0x04,i2c_Handle);
     46e:	e0 90 9c 07 	lds	r14, 0x079C	; 0x80079c <i2c_Handle>
     472:	f0 90 9d 07 	lds	r15, 0x079D	; 0x80079d <i2c_Handle+0x1>
     476:	a1 2c       	mov	r10, r1
     478:	b1 2c       	mov	r11, r1
     47a:	c1 2c       	mov	r12, r1
     47c:	d1 2c       	mov	r13, r1
     47e:	04 e0       	ldi	r16, 0x04	; 4
     480:	20 e0       	ldi	r18, 0x00	; 0
     482:	30 e0       	ldi	r19, 0x00	; 0
     484:	40 e0       	ldi	r20, 0x00	; 0
     486:	51 e0       	ldi	r21, 0x01	; 1
     488:	64 e0       	ldi	r22, 0x04	; 4
     48a:	71 e0       	ldi	r23, 0x01	; 1
     48c:	8a ed       	ldi	r24, 0xDA	; 218
     48e:	91 e0       	ldi	r25, 0x01	; 1
     490:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <xTaskGenericCreate>
	//xTaskCreate(task_Generator,"task_Generator",0x100,NULL,0x02,NULL);
	xTaskCreate(task_ADC,"task_ADC",0x100,NULL,0x01,adc_Handle);
     494:	e0 90 9a 07 	lds	r14, 0x079A	; 0x80079a <adc_Handle>
     498:	f0 90 9b 07 	lds	r15, 0x079B	; 0x80079b <adc_Handle+0x1>
     49c:	01 e0       	ldi	r16, 0x01	; 1
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	30 e0       	ldi	r19, 0x00	; 0
     4a2:	40 e0       	ldi	r20, 0x00	; 0
     4a4:	51 e0       	ldi	r21, 0x01	; 1
     4a6:	6d e0       	ldi	r22, 0x0D	; 13
     4a8:	71 e0       	ldi	r23, 0x01	; 1
     4aa:	87 ea       	ldi	r24, 0xA7	; 167
     4ac:	91 e0       	ldi	r25, 0x01	; 1
     4ae:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <xTaskGenericCreate>
	xTaskCreate(ultrsonic_task,"task_ultra",0x100,NULL,0x00,ultr_Handle);
     4b2:	e0 90 a0 07 	lds	r14, 0x07A0	; 0x8007a0 <ultr_Handle>
     4b6:	f0 90 a1 07 	lds	r15, 0x07A1	; 0x8007a1 <ultr_Handle+0x1>
     4ba:	00 e0       	ldi	r16, 0x00	; 0
     4bc:	20 e0       	ldi	r18, 0x00	; 0
     4be:	30 e0       	ldi	r19, 0x00	; 0
     4c0:	40 e0       	ldi	r20, 0x00	; 0
     4c2:	51 e0       	ldi	r21, 0x01	; 1
     4c4:	66 e1       	ldi	r22, 0x16	; 22
     4c6:	71 e0       	ldi	r23, 0x01	; 1
     4c8:	8c e7       	ldi	r24, 0x7C	; 124
     4ca:	91 e0       	ldi	r25, 0x01	; 1
     4cc:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <xTaskGenericCreate>
	xTaskCreate(ON_OFF_task,"task_on_off",0x100,NULL,0x03,on_off_Handle);
     4d0:	e0 90 98 07 	lds	r14, 0x0798	; 0x800798 <on_off_Handle>
     4d4:	f0 90 99 07 	lds	r15, 0x0799	; 0x800799 <on_off_Handle+0x1>
     4d8:	03 e0       	ldi	r16, 0x03	; 3
     4da:	20 e0       	ldi	r18, 0x00	; 0
     4dc:	30 e0       	ldi	r19, 0x00	; 0
     4de:	40 e0       	ldi	r20, 0x00	; 0
     4e0:	51 e0       	ldi	r21, 0x01	; 1
     4e2:	61 e2       	ldi	r22, 0x21	; 33
     4e4:	71 e0       	ldi	r23, 0x01	; 1
     4e6:	8b e0       	ldi	r24, 0x0B	; 11
     4e8:	92 e0       	ldi	r25, 0x02	; 2
     4ea:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <xTaskGenericCreate>
	sei();
     4ee:	78 94       	sei
	vTaskStartScheduler();
     4f0:	0e 94 b3 09 	call	0x1366	; 0x1366 <vTaskStartScheduler>
     4f4:	ff cf       	rjmp	.-2      	; 0x4f4 <main+0x9a>

000004f6 <vListInitialise>:
     4f6:	fc 01       	movw	r30, r24
     4f8:	03 96       	adiw	r24, 0x03	; 3
     4fa:	92 83       	std	Z+2, r25	; 0x02
     4fc:	81 83       	std	Z+1, r24	; 0x01
     4fe:	2f ef       	ldi	r18, 0xFF	; 255
     500:	3f ef       	ldi	r19, 0xFF	; 255
     502:	34 83       	std	Z+4, r19	; 0x04
     504:	23 83       	std	Z+3, r18	; 0x03
     506:	96 83       	std	Z+6, r25	; 0x06
     508:	85 83       	std	Z+5, r24	; 0x05
     50a:	90 87       	std	Z+8, r25	; 0x08
     50c:	87 83       	std	Z+7, r24	; 0x07
     50e:	10 82       	st	Z, r1
     510:	08 95       	ret

00000512 <vListInitialiseItem>:
     512:	fc 01       	movw	r30, r24
     514:	11 86       	std	Z+9, r1	; 0x09
     516:	10 86       	std	Z+8, r1	; 0x08
     518:	08 95       	ret

0000051a <vListInsertEnd>:
     51a:	cf 93       	push	r28
     51c:	df 93       	push	r29
     51e:	9c 01       	movw	r18, r24
     520:	fb 01       	movw	r30, r22
     522:	dc 01       	movw	r26, r24
     524:	11 96       	adiw	r26, 0x01	; 1
     526:	cd 91       	ld	r28, X+
     528:	dc 91       	ld	r29, X
     52a:	12 97       	sbiw	r26, 0x02	; 2
     52c:	d3 83       	std	Z+3, r29	; 0x03
     52e:	c2 83       	std	Z+2, r28	; 0x02
     530:	8c 81       	ldd	r24, Y+4	; 0x04
     532:	9d 81       	ldd	r25, Y+5	; 0x05
     534:	95 83       	std	Z+5, r25	; 0x05
     536:	84 83       	std	Z+4, r24	; 0x04
     538:	8c 81       	ldd	r24, Y+4	; 0x04
     53a:	9d 81       	ldd	r25, Y+5	; 0x05
     53c:	dc 01       	movw	r26, r24
     53e:	13 96       	adiw	r26, 0x03	; 3
     540:	7c 93       	st	X, r23
     542:	6e 93       	st	-X, r22
     544:	12 97       	sbiw	r26, 0x02	; 2
     546:	7d 83       	std	Y+5, r23	; 0x05
     548:	6c 83       	std	Y+4, r22	; 0x04
     54a:	31 87       	std	Z+9, r19	; 0x09
     54c:	20 87       	std	Z+8, r18	; 0x08
     54e:	f9 01       	movw	r30, r18
     550:	80 81       	ld	r24, Z
     552:	8f 5f       	subi	r24, 0xFF	; 255
     554:	80 83       	st	Z, r24
     556:	df 91       	pop	r29
     558:	cf 91       	pop	r28
     55a:	08 95       	ret

0000055c <vListInsert>:
     55c:	cf 93       	push	r28
     55e:	df 93       	push	r29
     560:	eb 01       	movw	r28, r22
     562:	48 81       	ld	r20, Y
     564:	59 81       	ldd	r21, Y+1	; 0x01
     566:	4f 3f       	cpi	r20, 0xFF	; 255
     568:	2f ef       	ldi	r18, 0xFF	; 255
     56a:	52 07       	cpc	r21, r18
     56c:	21 f4       	brne	.+8      	; 0x576 <vListInsert+0x1a>
     56e:	fc 01       	movw	r30, r24
     570:	a7 81       	ldd	r26, Z+7	; 0x07
     572:	b0 85       	ldd	r27, Z+8	; 0x08
     574:	0d c0       	rjmp	.+26     	; 0x590 <vListInsert+0x34>
     576:	dc 01       	movw	r26, r24
     578:	13 96       	adiw	r26, 0x03	; 3
     57a:	01 c0       	rjmp	.+2      	; 0x57e <vListInsert+0x22>
     57c:	df 01       	movw	r26, r30
     57e:	12 96       	adiw	r26, 0x02	; 2
     580:	ed 91       	ld	r30, X+
     582:	fc 91       	ld	r31, X
     584:	13 97       	sbiw	r26, 0x03	; 3
     586:	20 81       	ld	r18, Z
     588:	31 81       	ldd	r19, Z+1	; 0x01
     58a:	42 17       	cp	r20, r18
     58c:	53 07       	cpc	r21, r19
     58e:	b0 f7       	brcc	.-20     	; 0x57c <vListInsert+0x20>
     590:	12 96       	adiw	r26, 0x02	; 2
     592:	ed 91       	ld	r30, X+
     594:	fc 91       	ld	r31, X
     596:	13 97       	sbiw	r26, 0x03	; 3
     598:	fb 83       	std	Y+3, r31	; 0x03
     59a:	ea 83       	std	Y+2, r30	; 0x02
     59c:	d5 83       	std	Z+5, r29	; 0x05
     59e:	c4 83       	std	Z+4, r28	; 0x04
     5a0:	bd 83       	std	Y+5, r27	; 0x05
     5a2:	ac 83       	std	Y+4, r26	; 0x04
     5a4:	13 96       	adiw	r26, 0x03	; 3
     5a6:	dc 93       	st	X, r29
     5a8:	ce 93       	st	-X, r28
     5aa:	12 97       	sbiw	r26, 0x02	; 2
     5ac:	99 87       	std	Y+9, r25	; 0x09
     5ae:	88 87       	std	Y+8, r24	; 0x08
     5b0:	fc 01       	movw	r30, r24
     5b2:	20 81       	ld	r18, Z
     5b4:	2f 5f       	subi	r18, 0xFF	; 255
     5b6:	20 83       	st	Z, r18
     5b8:	df 91       	pop	r29
     5ba:	cf 91       	pop	r28
     5bc:	08 95       	ret

000005be <uxListRemove>:
     5be:	cf 93       	push	r28
     5c0:	df 93       	push	r29
     5c2:	fc 01       	movw	r30, r24
     5c4:	a0 85       	ldd	r26, Z+8	; 0x08
     5c6:	b1 85       	ldd	r27, Z+9	; 0x09
     5c8:	c2 81       	ldd	r28, Z+2	; 0x02
     5ca:	d3 81       	ldd	r29, Z+3	; 0x03
     5cc:	84 81       	ldd	r24, Z+4	; 0x04
     5ce:	95 81       	ldd	r25, Z+5	; 0x05
     5d0:	9d 83       	std	Y+5, r25	; 0x05
     5d2:	8c 83       	std	Y+4, r24	; 0x04
     5d4:	c4 81       	ldd	r28, Z+4	; 0x04
     5d6:	d5 81       	ldd	r29, Z+5	; 0x05
     5d8:	82 81       	ldd	r24, Z+2	; 0x02
     5da:	93 81       	ldd	r25, Z+3	; 0x03
     5dc:	9b 83       	std	Y+3, r25	; 0x03
     5de:	8a 83       	std	Y+2, r24	; 0x02
     5e0:	11 96       	adiw	r26, 0x01	; 1
     5e2:	8d 91       	ld	r24, X+
     5e4:	9c 91       	ld	r25, X
     5e6:	12 97       	sbiw	r26, 0x02	; 2
     5e8:	e8 17       	cp	r30, r24
     5ea:	f9 07       	cpc	r31, r25
     5ec:	31 f4       	brne	.+12     	; 0x5fa <uxListRemove+0x3c>
     5ee:	84 81       	ldd	r24, Z+4	; 0x04
     5f0:	95 81       	ldd	r25, Z+5	; 0x05
     5f2:	12 96       	adiw	r26, 0x02	; 2
     5f4:	9c 93       	st	X, r25
     5f6:	8e 93       	st	-X, r24
     5f8:	11 97       	sbiw	r26, 0x01	; 1
     5fa:	11 86       	std	Z+9, r1	; 0x09
     5fc:	10 86       	std	Z+8, r1	; 0x08
     5fe:	8c 91       	ld	r24, X
     600:	81 50       	subi	r24, 0x01	; 1
     602:	8c 93       	st	X, r24
     604:	df 91       	pop	r29
     606:	cf 91       	pop	r28
     608:	08 95       	ret

0000060a <pxPortInitialiseStack>:
     60a:	31 e1       	ldi	r19, 0x11	; 17
     60c:	fc 01       	movw	r30, r24
     60e:	30 83       	st	Z, r19
     610:	31 97       	sbiw	r30, 0x01	; 1
     612:	22 e2       	ldi	r18, 0x22	; 34
     614:	20 83       	st	Z, r18
     616:	31 97       	sbiw	r30, 0x01	; 1
     618:	a3 e3       	ldi	r26, 0x33	; 51
     61a:	a0 83       	st	Z, r26
     61c:	31 97       	sbiw	r30, 0x01	; 1
     61e:	60 83       	st	Z, r22
     620:	31 97       	sbiw	r30, 0x01	; 1
     622:	70 83       	st	Z, r23
     624:	31 97       	sbiw	r30, 0x01	; 1
     626:	10 82       	st	Z, r1
     628:	31 97       	sbiw	r30, 0x01	; 1
     62a:	60 e8       	ldi	r22, 0x80	; 128
     62c:	60 83       	st	Z, r22
     62e:	31 97       	sbiw	r30, 0x01	; 1
     630:	10 82       	st	Z, r1
     632:	31 97       	sbiw	r30, 0x01	; 1
     634:	62 e0       	ldi	r22, 0x02	; 2
     636:	60 83       	st	Z, r22
     638:	31 97       	sbiw	r30, 0x01	; 1
     63a:	63 e0       	ldi	r22, 0x03	; 3
     63c:	60 83       	st	Z, r22
     63e:	31 97       	sbiw	r30, 0x01	; 1
     640:	64 e0       	ldi	r22, 0x04	; 4
     642:	60 83       	st	Z, r22
     644:	31 97       	sbiw	r30, 0x01	; 1
     646:	65 e0       	ldi	r22, 0x05	; 5
     648:	60 83       	st	Z, r22
     64a:	31 97       	sbiw	r30, 0x01	; 1
     64c:	66 e0       	ldi	r22, 0x06	; 6
     64e:	60 83       	st	Z, r22
     650:	31 97       	sbiw	r30, 0x01	; 1
     652:	67 e0       	ldi	r22, 0x07	; 7
     654:	60 83       	st	Z, r22
     656:	31 97       	sbiw	r30, 0x01	; 1
     658:	68 e0       	ldi	r22, 0x08	; 8
     65a:	60 83       	st	Z, r22
     65c:	31 97       	sbiw	r30, 0x01	; 1
     65e:	69 e0       	ldi	r22, 0x09	; 9
     660:	60 83       	st	Z, r22
     662:	31 97       	sbiw	r30, 0x01	; 1
     664:	60 e1       	ldi	r22, 0x10	; 16
     666:	60 83       	st	Z, r22
     668:	31 97       	sbiw	r30, 0x01	; 1
     66a:	30 83       	st	Z, r19
     66c:	31 97       	sbiw	r30, 0x01	; 1
     66e:	32 e1       	ldi	r19, 0x12	; 18
     670:	30 83       	st	Z, r19
     672:	31 97       	sbiw	r30, 0x01	; 1
     674:	33 e1       	ldi	r19, 0x13	; 19
     676:	30 83       	st	Z, r19
     678:	31 97       	sbiw	r30, 0x01	; 1
     67a:	34 e1       	ldi	r19, 0x14	; 20
     67c:	30 83       	st	Z, r19
     67e:	31 97       	sbiw	r30, 0x01	; 1
     680:	35 e1       	ldi	r19, 0x15	; 21
     682:	30 83       	st	Z, r19
     684:	31 97       	sbiw	r30, 0x01	; 1
     686:	36 e1       	ldi	r19, 0x16	; 22
     688:	30 83       	st	Z, r19
     68a:	31 97       	sbiw	r30, 0x01	; 1
     68c:	37 e1       	ldi	r19, 0x17	; 23
     68e:	30 83       	st	Z, r19
     690:	31 97       	sbiw	r30, 0x01	; 1
     692:	38 e1       	ldi	r19, 0x18	; 24
     694:	30 83       	st	Z, r19
     696:	31 97       	sbiw	r30, 0x01	; 1
     698:	39 e1       	ldi	r19, 0x19	; 25
     69a:	30 83       	st	Z, r19
     69c:	31 97       	sbiw	r30, 0x01	; 1
     69e:	30 e2       	ldi	r19, 0x20	; 32
     6a0:	30 83       	st	Z, r19
     6a2:	31 97       	sbiw	r30, 0x01	; 1
     6a4:	31 e2       	ldi	r19, 0x21	; 33
     6a6:	30 83       	st	Z, r19
     6a8:	31 97       	sbiw	r30, 0x01	; 1
     6aa:	20 83       	st	Z, r18
     6ac:	31 97       	sbiw	r30, 0x01	; 1
     6ae:	23 e2       	ldi	r18, 0x23	; 35
     6b0:	20 83       	st	Z, r18
     6b2:	31 97       	sbiw	r30, 0x01	; 1
     6b4:	40 83       	st	Z, r20
     6b6:	31 97       	sbiw	r30, 0x01	; 1
     6b8:	50 83       	st	Z, r21
     6ba:	31 97       	sbiw	r30, 0x01	; 1
     6bc:	26 e2       	ldi	r18, 0x26	; 38
     6be:	20 83       	st	Z, r18
     6c0:	31 97       	sbiw	r30, 0x01	; 1
     6c2:	27 e2       	ldi	r18, 0x27	; 39
     6c4:	20 83       	st	Z, r18
     6c6:	31 97       	sbiw	r30, 0x01	; 1
     6c8:	28 e2       	ldi	r18, 0x28	; 40
     6ca:	20 83       	st	Z, r18
     6cc:	31 97       	sbiw	r30, 0x01	; 1
     6ce:	29 e2       	ldi	r18, 0x29	; 41
     6d0:	20 83       	st	Z, r18
     6d2:	31 97       	sbiw	r30, 0x01	; 1
     6d4:	20 e3       	ldi	r18, 0x30	; 48
     6d6:	20 83       	st	Z, r18
     6d8:	31 97       	sbiw	r30, 0x01	; 1
     6da:	21 e3       	ldi	r18, 0x31	; 49
     6dc:	20 83       	st	Z, r18
     6de:	86 97       	sbiw	r24, 0x26	; 38
     6e0:	08 95       	ret

000006e2 <xPortStartScheduler>:
     6e2:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     6e6:	8c e7       	ldi	r24, 0x7C	; 124
     6e8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     6ec:	8b e0       	ldi	r24, 0x0B	; 11
     6ee:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     6f2:	ef e6       	ldi	r30, 0x6F	; 111
     6f4:	f0 e0       	ldi	r31, 0x00	; 0
     6f6:	80 81       	ld	r24, Z
     6f8:	82 60       	ori	r24, 0x02	; 2
     6fa:	80 83       	st	Z, r24
     6fc:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
     700:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     704:	cd 91       	ld	r28, X+
     706:	cd bf       	out	0x3d, r28	; 61
     708:	dd 91       	ld	r29, X+
     70a:	de bf       	out	0x3e, r29	; 62
     70c:	ff 91       	pop	r31
     70e:	ef 91       	pop	r30
     710:	df 91       	pop	r29
     712:	cf 91       	pop	r28
     714:	bf 91       	pop	r27
     716:	af 91       	pop	r26
     718:	9f 91       	pop	r25
     71a:	8f 91       	pop	r24
     71c:	7f 91       	pop	r23
     71e:	6f 91       	pop	r22
     720:	5f 91       	pop	r21
     722:	4f 91       	pop	r20
     724:	3f 91       	pop	r19
     726:	2f 91       	pop	r18
     728:	1f 91       	pop	r17
     72a:	0f 91       	pop	r16
     72c:	ff 90       	pop	r15
     72e:	ef 90       	pop	r14
     730:	df 90       	pop	r13
     732:	cf 90       	pop	r12
     734:	bf 90       	pop	r11
     736:	af 90       	pop	r10
     738:	9f 90       	pop	r9
     73a:	8f 90       	pop	r8
     73c:	7f 90       	pop	r7
     73e:	6f 90       	pop	r6
     740:	5f 90       	pop	r5
     742:	4f 90       	pop	r4
     744:	3f 90       	pop	r3
     746:	2f 90       	pop	r2
     748:	1f 90       	pop	r1
     74a:	0f 90       	pop	r0
     74c:	0f be       	out	0x3f, r0	; 63
     74e:	0f 90       	pop	r0
     750:	08 95       	ret
     752:	81 e0       	ldi	r24, 0x01	; 1
     754:	08 95       	ret

00000756 <vPortYield>:
     756:	0f 92       	push	r0
     758:	0f b6       	in	r0, 0x3f	; 63
     75a:	f8 94       	cli
     75c:	0f 92       	push	r0
     75e:	1f 92       	push	r1
     760:	11 24       	eor	r1, r1
     762:	2f 92       	push	r2
     764:	3f 92       	push	r3
     766:	4f 92       	push	r4
     768:	5f 92       	push	r5
     76a:	6f 92       	push	r6
     76c:	7f 92       	push	r7
     76e:	8f 92       	push	r8
     770:	9f 92       	push	r9
     772:	af 92       	push	r10
     774:	bf 92       	push	r11
     776:	cf 92       	push	r12
     778:	df 92       	push	r13
     77a:	ef 92       	push	r14
     77c:	ff 92       	push	r15
     77e:	0f 93       	push	r16
     780:	1f 93       	push	r17
     782:	2f 93       	push	r18
     784:	3f 93       	push	r19
     786:	4f 93       	push	r20
     788:	5f 93       	push	r21
     78a:	6f 93       	push	r22
     78c:	7f 93       	push	r23
     78e:	8f 93       	push	r24
     790:	9f 93       	push	r25
     792:	af 93       	push	r26
     794:	bf 93       	push	r27
     796:	cf 93       	push	r28
     798:	df 93       	push	r29
     79a:	ef 93       	push	r30
     79c:	ff 93       	push	r31
     79e:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
     7a2:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     7a6:	0d b6       	in	r0, 0x3d	; 61
     7a8:	0d 92       	st	X+, r0
     7aa:	0e b6       	in	r0, 0x3e	; 62
     7ac:	0d 92       	st	X+, r0
     7ae:	0e 94 84 0b 	call	0x1708	; 0x1708 <vTaskSwitchContext>
     7b2:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
     7b6:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     7ba:	cd 91       	ld	r28, X+
     7bc:	cd bf       	out	0x3d, r28	; 61
     7be:	dd 91       	ld	r29, X+
     7c0:	de bf       	out	0x3e, r29	; 62
     7c2:	ff 91       	pop	r31
     7c4:	ef 91       	pop	r30
     7c6:	df 91       	pop	r29
     7c8:	cf 91       	pop	r28
     7ca:	bf 91       	pop	r27
     7cc:	af 91       	pop	r26
     7ce:	9f 91       	pop	r25
     7d0:	8f 91       	pop	r24
     7d2:	7f 91       	pop	r23
     7d4:	6f 91       	pop	r22
     7d6:	5f 91       	pop	r21
     7d8:	4f 91       	pop	r20
     7da:	3f 91       	pop	r19
     7dc:	2f 91       	pop	r18
     7de:	1f 91       	pop	r17
     7e0:	0f 91       	pop	r16
     7e2:	ff 90       	pop	r15
     7e4:	ef 90       	pop	r14
     7e6:	df 90       	pop	r13
     7e8:	cf 90       	pop	r12
     7ea:	bf 90       	pop	r11
     7ec:	af 90       	pop	r10
     7ee:	9f 90       	pop	r9
     7f0:	8f 90       	pop	r8
     7f2:	7f 90       	pop	r7
     7f4:	6f 90       	pop	r6
     7f6:	5f 90       	pop	r5
     7f8:	4f 90       	pop	r4
     7fa:	3f 90       	pop	r3
     7fc:	2f 90       	pop	r2
     7fe:	1f 90       	pop	r1
     800:	0f 90       	pop	r0
     802:	0f be       	out	0x3f, r0	; 63
     804:	0f 90       	pop	r0
     806:	08 95       	ret

00000808 <vPortYieldFromTick>:
     808:	0f 92       	push	r0
     80a:	0f b6       	in	r0, 0x3f	; 63
     80c:	f8 94       	cli
     80e:	0f 92       	push	r0
     810:	1f 92       	push	r1
     812:	11 24       	eor	r1, r1
     814:	2f 92       	push	r2
     816:	3f 92       	push	r3
     818:	4f 92       	push	r4
     81a:	5f 92       	push	r5
     81c:	6f 92       	push	r6
     81e:	7f 92       	push	r7
     820:	8f 92       	push	r8
     822:	9f 92       	push	r9
     824:	af 92       	push	r10
     826:	bf 92       	push	r11
     828:	cf 92       	push	r12
     82a:	df 92       	push	r13
     82c:	ef 92       	push	r14
     82e:	ff 92       	push	r15
     830:	0f 93       	push	r16
     832:	1f 93       	push	r17
     834:	2f 93       	push	r18
     836:	3f 93       	push	r19
     838:	4f 93       	push	r20
     83a:	5f 93       	push	r21
     83c:	6f 93       	push	r22
     83e:	7f 93       	push	r23
     840:	8f 93       	push	r24
     842:	9f 93       	push	r25
     844:	af 93       	push	r26
     846:	bf 93       	push	r27
     848:	cf 93       	push	r28
     84a:	df 93       	push	r29
     84c:	ef 93       	push	r30
     84e:	ff 93       	push	r31
     850:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
     854:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     858:	0d b6       	in	r0, 0x3d	; 61
     85a:	0d 92       	st	X+, r0
     85c:	0e b6       	in	r0, 0x3e	; 62
     85e:	0d 92       	st	X+, r0
     860:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <xTaskIncrementTick>
     864:	81 11       	cpse	r24, r1
     866:	0e 94 84 0b 	call	0x1708	; 0x1708 <vTaskSwitchContext>
     86a:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
     86e:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     872:	cd 91       	ld	r28, X+
     874:	cd bf       	out	0x3d, r28	; 61
     876:	dd 91       	ld	r29, X+
     878:	de bf       	out	0x3e, r29	; 62
     87a:	ff 91       	pop	r31
     87c:	ef 91       	pop	r30
     87e:	df 91       	pop	r29
     880:	cf 91       	pop	r28
     882:	bf 91       	pop	r27
     884:	af 91       	pop	r26
     886:	9f 91       	pop	r25
     888:	8f 91       	pop	r24
     88a:	7f 91       	pop	r23
     88c:	6f 91       	pop	r22
     88e:	5f 91       	pop	r21
     890:	4f 91       	pop	r20
     892:	3f 91       	pop	r19
     894:	2f 91       	pop	r18
     896:	1f 91       	pop	r17
     898:	0f 91       	pop	r16
     89a:	ff 90       	pop	r15
     89c:	ef 90       	pop	r14
     89e:	df 90       	pop	r13
     8a0:	cf 90       	pop	r12
     8a2:	bf 90       	pop	r11
     8a4:	af 90       	pop	r10
     8a6:	9f 90       	pop	r9
     8a8:	8f 90       	pop	r8
     8aa:	7f 90       	pop	r7
     8ac:	6f 90       	pop	r6
     8ae:	5f 90       	pop	r5
     8b0:	4f 90       	pop	r4
     8b2:	3f 90       	pop	r3
     8b4:	2f 90       	pop	r2
     8b6:	1f 90       	pop	r1
     8b8:	0f 90       	pop	r0
     8ba:	0f be       	out	0x3f, r0	; 63
     8bc:	0f 90       	pop	r0
     8be:	08 95       	ret

000008c0 <__vector_11>:
     8c0:	0e 94 04 04 	call	0x808	; 0x808 <vPortYieldFromTick>
     8c4:	18 95       	reti

000008c6 <pvPortMalloc>:
     8c6:	0f 93       	push	r16
     8c8:	1f 93       	push	r17
     8ca:	cf 93       	push	r28
     8cc:	df 93       	push	r29
     8ce:	ec 01       	movw	r28, r24
     8d0:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <vTaskSuspendAll>
     8d4:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <xHeapHasBeenInitialised.2023>
     8d8:	81 11       	cpse	r24, r1
     8da:	1d c0       	rjmp	.+58     	; 0x916 <__stack+0x17>
     8dc:	e4 e4       	ldi	r30, 0x44	; 68
     8de:	f1 e0       	ldi	r31, 0x01	; 1
     8e0:	89 e4       	ldi	r24, 0x49	; 73
     8e2:	91 e0       	ldi	r25, 0x01	; 1
     8e4:	91 83       	std	Z+1, r25	; 0x01
     8e6:	80 83       	st	Z, r24
     8e8:	13 82       	std	Z+3, r1	; 0x03
     8ea:	12 82       	std	Z+2, r1	; 0x02
     8ec:	e0 e4       	ldi	r30, 0x40	; 64
     8ee:	f1 e0       	ldi	r31, 0x01	; 1
     8f0:	8b ed       	ldi	r24, 0xDB	; 219
     8f2:	95 e0       	ldi	r25, 0x05	; 5
     8f4:	93 83       	std	Z+3, r25	; 0x03
     8f6:	82 83       	std	Z+2, r24	; 0x02
     8f8:	11 82       	std	Z+1, r1	; 0x01
     8fa:	10 82       	st	Z, r1
     8fc:	a8 e4       	ldi	r26, 0x48	; 72
     8fe:	b1 e0       	ldi	r27, 0x01	; 1
     900:	14 96       	adiw	r26, 0x04	; 4
     902:	9c 93       	st	X, r25
     904:	8e 93       	st	-X, r24
     906:	13 97       	sbiw	r26, 0x03	; 3
     908:	12 96       	adiw	r26, 0x02	; 2
     90a:	fc 93       	st	X, r31
     90c:	ee 93       	st	-X, r30
     90e:	11 97       	sbiw	r26, 0x01	; 1
     910:	81 e0       	ldi	r24, 0x01	; 1
     912:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <xHeapHasBeenInitialised.2023>
     916:	20 97       	sbiw	r28, 0x00	; 0
     918:	09 f4       	brne	.+2      	; 0x91c <__stack+0x1d>
     91a:	5f c0       	rjmp	.+190    	; 0x9da <__stack+0xdb>
     91c:	9e 01       	movw	r18, r28
     91e:	2c 5f       	subi	r18, 0xFC	; 252
     920:	3f 4f       	sbci	r19, 0xFF	; 255
     922:	23 96       	adiw	r28, 0x03	; 3
     924:	ca 3d       	cpi	r28, 0xDA	; 218
     926:	d5 40       	sbci	r29, 0x05	; 5
     928:	08 f0       	brcs	.+2      	; 0x92c <__stack+0x2d>
     92a:	5a c0       	rjmp	.+180    	; 0x9e0 <__stack+0xe1>
     92c:	e0 91 44 01 	lds	r30, 0x0144	; 0x800144 <xStart>
     930:	f0 91 45 01 	lds	r31, 0x0145	; 0x800145 <xStart+0x1>
     934:	a4 e4       	ldi	r26, 0x44	; 68
     936:	b1 e0       	ldi	r27, 0x01	; 1
     938:	02 c0       	rjmp	.+4      	; 0x93e <__stack+0x3f>
     93a:	df 01       	movw	r26, r30
     93c:	fc 01       	movw	r30, r24
     93e:	82 81       	ldd	r24, Z+2	; 0x02
     940:	93 81       	ldd	r25, Z+3	; 0x03
     942:	82 17       	cp	r24, r18
     944:	93 07       	cpc	r25, r19
     946:	20 f4       	brcc	.+8      	; 0x950 <__stack+0x51>
     948:	80 81       	ld	r24, Z
     94a:	91 81       	ldd	r25, Z+1	; 0x01
     94c:	00 97       	sbiw	r24, 0x00	; 0
     94e:	a9 f7       	brne	.-22     	; 0x93a <__stack+0x3b>
     950:	c1 e0       	ldi	r28, 0x01	; 1
     952:	e0 34       	cpi	r30, 0x40	; 64
     954:	fc 07       	cpc	r31, r28
     956:	09 f4       	brne	.+2      	; 0x95a <__stack+0x5b>
     958:	46 c0       	rjmp	.+140    	; 0x9e6 <__stack+0xe7>
     95a:	cd 91       	ld	r28, X+
     95c:	dc 91       	ld	r29, X
     95e:	11 97       	sbiw	r26, 0x01	; 1
     960:	8e 01       	movw	r16, r28
     962:	0c 5f       	subi	r16, 0xFC	; 252
     964:	1f 4f       	sbci	r17, 0xFF	; 255
     966:	80 81       	ld	r24, Z
     968:	91 81       	ldd	r25, Z+1	; 0x01
     96a:	8d 93       	st	X+, r24
     96c:	9c 93       	st	X, r25
     96e:	82 81       	ldd	r24, Z+2	; 0x02
     970:	93 81       	ldd	r25, Z+3	; 0x03
     972:	82 1b       	sub	r24, r18
     974:	93 0b       	sbc	r25, r19
     976:	89 30       	cpi	r24, 0x09	; 9
     978:	91 05       	cpc	r25, r1
     97a:	10 f1       	brcs	.+68     	; 0x9c0 <__stack+0xc1>
     97c:	bf 01       	movw	r22, r30
     97e:	62 0f       	add	r22, r18
     980:	73 1f       	adc	r23, r19
     982:	db 01       	movw	r26, r22
     984:	13 96       	adiw	r26, 0x03	; 3
     986:	9c 93       	st	X, r25
     988:	8e 93       	st	-X, r24
     98a:	12 97       	sbiw	r26, 0x02	; 2
     98c:	33 83       	std	Z+3, r19	; 0x03
     98e:	22 83       	std	Z+2, r18	; 0x02
     990:	12 96       	adiw	r26, 0x02	; 2
     992:	4d 91       	ld	r20, X+
     994:	5c 91       	ld	r21, X
     996:	13 97       	sbiw	r26, 0x03	; 3
     998:	84 e4       	ldi	r24, 0x44	; 68
     99a:	91 e0       	ldi	r25, 0x01	; 1
     99c:	01 c0       	rjmp	.+2      	; 0x9a0 <__stack+0xa1>
     99e:	cd 01       	movw	r24, r26
     9a0:	ec 01       	movw	r28, r24
     9a2:	a8 81       	ld	r26, Y
     9a4:	b9 81       	ldd	r27, Y+1	; 0x01
     9a6:	12 96       	adiw	r26, 0x02	; 2
     9a8:	2d 91       	ld	r18, X+
     9aa:	3c 91       	ld	r19, X
     9ac:	13 97       	sbiw	r26, 0x03	; 3
     9ae:	24 17       	cp	r18, r20
     9b0:	35 07       	cpc	r19, r21
     9b2:	a8 f3       	brcs	.-22     	; 0x99e <__stack+0x9f>
     9b4:	eb 01       	movw	r28, r22
     9b6:	b9 83       	std	Y+1, r27	; 0x01
     9b8:	a8 83       	st	Y, r26
     9ba:	dc 01       	movw	r26, r24
     9bc:	6d 93       	st	X+, r22
     9be:	7c 93       	st	X, r23
     9c0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     9c4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     9c8:	22 81       	ldd	r18, Z+2	; 0x02
     9ca:	33 81       	ldd	r19, Z+3	; 0x03
     9cc:	82 1b       	sub	r24, r18
     9ce:	93 0b       	sbc	r25, r19
     9d0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     9d4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     9d8:	08 c0       	rjmp	.+16     	; 0x9ea <__stack+0xeb>
     9da:	00 e0       	ldi	r16, 0x00	; 0
     9dc:	10 e0       	ldi	r17, 0x00	; 0
     9de:	05 c0       	rjmp	.+10     	; 0x9ea <__stack+0xeb>
     9e0:	00 e0       	ldi	r16, 0x00	; 0
     9e2:	10 e0       	ldi	r17, 0x00	; 0
     9e4:	02 c0       	rjmp	.+4      	; 0x9ea <__stack+0xeb>
     9e6:	00 e0       	ldi	r16, 0x00	; 0
     9e8:	10 e0       	ldi	r17, 0x00	; 0
     9ea:	0e 94 a5 0a 	call	0x154a	; 0x154a <xTaskResumeAll>
     9ee:	c8 01       	movw	r24, r16
     9f0:	df 91       	pop	r29
     9f2:	cf 91       	pop	r28
     9f4:	1f 91       	pop	r17
     9f6:	0f 91       	pop	r16
     9f8:	08 95       	ret

000009fa <vPortFree>:
     9fa:	0f 93       	push	r16
     9fc:	1f 93       	push	r17
     9fe:	cf 93       	push	r28
     a00:	df 93       	push	r29
     a02:	00 97       	sbiw	r24, 0x00	; 0
     a04:	41 f1       	breq	.+80     	; 0xa56 <vPortFree+0x5c>
     a06:	ec 01       	movw	r28, r24
     a08:	8c 01       	movw	r16, r24
     a0a:	04 50       	subi	r16, 0x04	; 4
     a0c:	11 09       	sbc	r17, r1
     a0e:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <vTaskSuspendAll>
     a12:	f8 01       	movw	r30, r16
     a14:	42 81       	ldd	r20, Z+2	; 0x02
     a16:	53 81       	ldd	r21, Z+3	; 0x03
     a18:	a4 e4       	ldi	r26, 0x44	; 68
     a1a:	b1 e0       	ldi	r27, 0x01	; 1
     a1c:	01 c0       	rjmp	.+2      	; 0xa20 <vPortFree+0x26>
     a1e:	df 01       	movw	r26, r30
     a20:	ed 91       	ld	r30, X+
     a22:	fc 91       	ld	r31, X
     a24:	11 97       	sbiw	r26, 0x01	; 1
     a26:	22 81       	ldd	r18, Z+2	; 0x02
     a28:	33 81       	ldd	r19, Z+3	; 0x03
     a2a:	24 17       	cp	r18, r20
     a2c:	35 07       	cpc	r19, r21
     a2e:	b8 f3       	brcs	.-18     	; 0xa1e <vPortFree+0x24>
     a30:	24 97       	sbiw	r28, 0x04	; 4
     a32:	f9 83       	std	Y+1, r31	; 0x01
     a34:	e8 83       	st	Y, r30
     a36:	0d 93       	st	X+, r16
     a38:	1c 93       	st	X, r17
     a3a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     a3e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     a42:	8a 81       	ldd	r24, Y+2	; 0x02
     a44:	9b 81       	ldd	r25, Y+3	; 0x03
     a46:	82 0f       	add	r24, r18
     a48:	93 1f       	adc	r25, r19
     a4a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     a4e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     a52:	0e 94 a5 0a 	call	0x154a	; 0x154a <xTaskResumeAll>
     a56:	df 91       	pop	r29
     a58:	cf 91       	pop	r28
     a5a:	1f 91       	pop	r17
     a5c:	0f 91       	pop	r16
     a5e:	08 95       	ret

00000a60 <prvCopyDataToQueue>:
     a60:	1f 93       	push	r17
     a62:	cf 93       	push	r28
     a64:	df 93       	push	r29
     a66:	ec 01       	movw	r28, r24
     a68:	14 2f       	mov	r17, r20
     a6a:	4c 8d       	ldd	r20, Y+28	; 0x1c
     a6c:	41 11       	cpse	r20, r1
     a6e:	0c c0       	rjmp	.+24     	; 0xa88 <prvCopyDataToQueue+0x28>
     a70:	88 81       	ld	r24, Y
     a72:	99 81       	ldd	r25, Y+1	; 0x01
     a74:	89 2b       	or	r24, r25
     a76:	09 f0       	breq	.+2      	; 0xa7a <prvCopyDataToQueue+0x1a>
     a78:	45 c0       	rjmp	.+138    	; 0xb04 <prvCopyDataToQueue+0xa4>
     a7a:	8a 81       	ldd	r24, Y+2	; 0x02
     a7c:	9b 81       	ldd	r25, Y+3	; 0x03
     a7e:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <xTaskPriorityDisinherit>
     a82:	1b 82       	std	Y+3, r1	; 0x03
     a84:	1a 82       	std	Y+2, r1	; 0x02
     a86:	45 c0       	rjmp	.+138    	; 0xb12 <prvCopyDataToQueue+0xb2>
     a88:	11 11       	cpse	r17, r1
     a8a:	17 c0       	rjmp	.+46     	; 0xaba <prvCopyDataToQueue+0x5a>
     a8c:	50 e0       	ldi	r21, 0x00	; 0
     a8e:	8c 81       	ldd	r24, Y+4	; 0x04
     a90:	9d 81       	ldd	r25, Y+5	; 0x05
     a92:	0e 94 1b 10 	call	0x2036	; 0x2036 <memcpy>
     a96:	2c 8d       	ldd	r18, Y+28	; 0x1c
     a98:	8c 81       	ldd	r24, Y+4	; 0x04
     a9a:	9d 81       	ldd	r25, Y+5	; 0x05
     a9c:	82 0f       	add	r24, r18
     a9e:	91 1d       	adc	r25, r1
     aa0:	9d 83       	std	Y+5, r25	; 0x05
     aa2:	8c 83       	std	Y+4, r24	; 0x04
     aa4:	2a 81       	ldd	r18, Y+2	; 0x02
     aa6:	3b 81       	ldd	r19, Y+3	; 0x03
     aa8:	82 17       	cp	r24, r18
     aaa:	93 07       	cpc	r25, r19
     aac:	68 f1       	brcs	.+90     	; 0xb08 <prvCopyDataToQueue+0xa8>
     aae:	88 81       	ld	r24, Y
     ab0:	99 81       	ldd	r25, Y+1	; 0x01
     ab2:	9d 83       	std	Y+5, r25	; 0x05
     ab4:	8c 83       	std	Y+4, r24	; 0x04
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	2c c0       	rjmp	.+88     	; 0xb12 <prvCopyDataToQueue+0xb2>
     aba:	50 e0       	ldi	r21, 0x00	; 0
     abc:	8e 81       	ldd	r24, Y+6	; 0x06
     abe:	9f 81       	ldd	r25, Y+7	; 0x07
     ac0:	0e 94 1b 10 	call	0x2036	; 0x2036 <memcpy>
     ac4:	8c 8d       	ldd	r24, Y+28	; 0x1c
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	91 95       	neg	r25
     aca:	81 95       	neg	r24
     acc:	91 09       	sbc	r25, r1
     ace:	2e 81       	ldd	r18, Y+6	; 0x06
     ad0:	3f 81       	ldd	r19, Y+7	; 0x07
     ad2:	28 0f       	add	r18, r24
     ad4:	39 1f       	adc	r19, r25
     ad6:	3f 83       	std	Y+7, r19	; 0x07
     ad8:	2e 83       	std	Y+6, r18	; 0x06
     ada:	48 81       	ld	r20, Y
     adc:	59 81       	ldd	r21, Y+1	; 0x01
     ade:	24 17       	cp	r18, r20
     ae0:	35 07       	cpc	r19, r21
     ae2:	30 f4       	brcc	.+12     	; 0xaf0 <prvCopyDataToQueue+0x90>
     ae4:	2a 81       	ldd	r18, Y+2	; 0x02
     ae6:	3b 81       	ldd	r19, Y+3	; 0x03
     ae8:	82 0f       	add	r24, r18
     aea:	93 1f       	adc	r25, r19
     aec:	9f 83       	std	Y+7, r25	; 0x07
     aee:	8e 83       	std	Y+6, r24	; 0x06
     af0:	12 30       	cpi	r17, 0x02	; 2
     af2:	61 f4       	brne	.+24     	; 0xb0c <prvCopyDataToQueue+0xac>
     af4:	8a 8d       	ldd	r24, Y+26	; 0x1a
     af6:	88 23       	and	r24, r24
     af8:	59 f0       	breq	.+22     	; 0xb10 <prvCopyDataToQueue+0xb0>
     afa:	8a 8d       	ldd	r24, Y+26	; 0x1a
     afc:	81 50       	subi	r24, 0x01	; 1
     afe:	8a 8f       	std	Y+26, r24	; 0x1a
     b00:	80 e0       	ldi	r24, 0x00	; 0
     b02:	07 c0       	rjmp	.+14     	; 0xb12 <prvCopyDataToQueue+0xb2>
     b04:	80 e0       	ldi	r24, 0x00	; 0
     b06:	05 c0       	rjmp	.+10     	; 0xb12 <prvCopyDataToQueue+0xb2>
     b08:	80 e0       	ldi	r24, 0x00	; 0
     b0a:	03 c0       	rjmp	.+6      	; 0xb12 <prvCopyDataToQueue+0xb2>
     b0c:	80 e0       	ldi	r24, 0x00	; 0
     b0e:	01 c0       	rjmp	.+2      	; 0xb12 <prvCopyDataToQueue+0xb2>
     b10:	80 e0       	ldi	r24, 0x00	; 0
     b12:	9a 8d       	ldd	r25, Y+26	; 0x1a
     b14:	9f 5f       	subi	r25, 0xFF	; 255
     b16:	9a 8f       	std	Y+26, r25	; 0x1a
     b18:	df 91       	pop	r29
     b1a:	cf 91       	pop	r28
     b1c:	1f 91       	pop	r17
     b1e:	08 95       	ret

00000b20 <prvCopyDataFromQueue>:
     b20:	fc 01       	movw	r30, r24
     b22:	44 8d       	ldd	r20, Z+28	; 0x1c
     b24:	44 23       	and	r20, r20
     b26:	a9 f0       	breq	.+42     	; 0xb52 <prvCopyDataFromQueue+0x32>
     b28:	50 e0       	ldi	r21, 0x00	; 0
     b2a:	26 81       	ldd	r18, Z+6	; 0x06
     b2c:	37 81       	ldd	r19, Z+7	; 0x07
     b2e:	24 0f       	add	r18, r20
     b30:	35 1f       	adc	r19, r21
     b32:	37 83       	std	Z+7, r19	; 0x07
     b34:	26 83       	std	Z+6, r18	; 0x06
     b36:	82 81       	ldd	r24, Z+2	; 0x02
     b38:	93 81       	ldd	r25, Z+3	; 0x03
     b3a:	28 17       	cp	r18, r24
     b3c:	39 07       	cpc	r19, r25
     b3e:	20 f0       	brcs	.+8      	; 0xb48 <prvCopyDataFromQueue+0x28>
     b40:	80 81       	ld	r24, Z
     b42:	91 81       	ldd	r25, Z+1	; 0x01
     b44:	97 83       	std	Z+7, r25	; 0x07
     b46:	86 83       	std	Z+6, r24	; 0x06
     b48:	cb 01       	movw	r24, r22
     b4a:	66 81       	ldd	r22, Z+6	; 0x06
     b4c:	77 81       	ldd	r23, Z+7	; 0x07
     b4e:	0e 94 1b 10 	call	0x2036	; 0x2036 <memcpy>
     b52:	08 95       	ret

00000b54 <prvUnlockQueue>:
     b54:	0f 93       	push	r16
     b56:	1f 93       	push	r17
     b58:	cf 93       	push	r28
     b5a:	df 93       	push	r29
     b5c:	ec 01       	movw	r28, r24
     b5e:	0f b6       	in	r0, 0x3f	; 63
     b60:	f8 94       	cli
     b62:	0f 92       	push	r0
     b64:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b66:	18 16       	cp	r1, r24
     b68:	bc f4       	brge	.+46     	; 0xb98 <prvUnlockQueue+0x44>
     b6a:	89 89       	ldd	r24, Y+17	; 0x11
     b6c:	81 11       	cpse	r24, r1
     b6e:	05 c0       	rjmp	.+10     	; 0xb7a <prvUnlockQueue+0x26>
     b70:	13 c0       	rjmp	.+38     	; 0xb98 <prvUnlockQueue+0x44>
     b72:	89 89       	ldd	r24, Y+17	; 0x11
     b74:	81 11       	cpse	r24, r1
     b76:	04 c0       	rjmp	.+8      	; 0xb80 <prvUnlockQueue+0x2c>
     b78:	0f c0       	rjmp	.+30     	; 0xb98 <prvUnlockQueue+0x44>
     b7a:	8e 01       	movw	r16, r28
     b7c:	0f 5e       	subi	r16, 0xEF	; 239
     b7e:	1f 4f       	sbci	r17, 0xFF	; 255
     b80:	c8 01       	movw	r24, r16
     b82:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <xTaskRemoveFromEventList>
     b86:	81 11       	cpse	r24, r1
     b88:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <vTaskMissedYield>
     b8c:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b8e:	81 50       	subi	r24, 0x01	; 1
     b90:	8e 8f       	std	Y+30, r24	; 0x1e
     b92:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b94:	18 16       	cp	r1, r24
     b96:	6c f3       	brlt	.-38     	; 0xb72 <prvUnlockQueue+0x1e>
     b98:	8f ef       	ldi	r24, 0xFF	; 255
     b9a:	8e 8f       	std	Y+30, r24	; 0x1e
     b9c:	0f 90       	pop	r0
     b9e:	0f be       	out	0x3f, r0	; 63
     ba0:	0f b6       	in	r0, 0x3f	; 63
     ba2:	f8 94       	cli
     ba4:	0f 92       	push	r0
     ba6:	8d 8d       	ldd	r24, Y+29	; 0x1d
     ba8:	18 16       	cp	r1, r24
     baa:	bc f4       	brge	.+46     	; 0xbda <prvUnlockQueue+0x86>
     bac:	88 85       	ldd	r24, Y+8	; 0x08
     bae:	81 11       	cpse	r24, r1
     bb0:	05 c0       	rjmp	.+10     	; 0xbbc <prvUnlockQueue+0x68>
     bb2:	13 c0       	rjmp	.+38     	; 0xbda <prvUnlockQueue+0x86>
     bb4:	88 85       	ldd	r24, Y+8	; 0x08
     bb6:	81 11       	cpse	r24, r1
     bb8:	04 c0       	rjmp	.+8      	; 0xbc2 <prvUnlockQueue+0x6e>
     bba:	0f c0       	rjmp	.+30     	; 0xbda <prvUnlockQueue+0x86>
     bbc:	8e 01       	movw	r16, r28
     bbe:	08 5f       	subi	r16, 0xF8	; 248
     bc0:	1f 4f       	sbci	r17, 0xFF	; 255
     bc2:	c8 01       	movw	r24, r16
     bc4:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <xTaskRemoveFromEventList>
     bc8:	81 11       	cpse	r24, r1
     bca:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <vTaskMissedYield>
     bce:	8d 8d       	ldd	r24, Y+29	; 0x1d
     bd0:	81 50       	subi	r24, 0x01	; 1
     bd2:	8d 8f       	std	Y+29, r24	; 0x1d
     bd4:	8d 8d       	ldd	r24, Y+29	; 0x1d
     bd6:	18 16       	cp	r1, r24
     bd8:	6c f3       	brlt	.-38     	; 0xbb4 <prvUnlockQueue+0x60>
     bda:	8f ef       	ldi	r24, 0xFF	; 255
     bdc:	8d 8f       	std	Y+29, r24	; 0x1d
     bde:	0f 90       	pop	r0
     be0:	0f be       	out	0x3f, r0	; 63
     be2:	df 91       	pop	r29
     be4:	cf 91       	pop	r28
     be6:	1f 91       	pop	r17
     be8:	0f 91       	pop	r16
     bea:	08 95       	ret

00000bec <xQueueGenericSend>:
     bec:	9f 92       	push	r9
     bee:	af 92       	push	r10
     bf0:	bf 92       	push	r11
     bf2:	cf 92       	push	r12
     bf4:	df 92       	push	r13
     bf6:	ef 92       	push	r14
     bf8:	ff 92       	push	r15
     bfa:	0f 93       	push	r16
     bfc:	1f 93       	push	r17
     bfe:	cf 93       	push	r28
     c00:	df 93       	push	r29
     c02:	00 d0       	rcall	.+0      	; 0xc04 <xQueueGenericSend+0x18>
     c04:	00 d0       	rcall	.+0      	; 0xc06 <xQueueGenericSend+0x1a>
     c06:	1f 92       	push	r1
     c08:	cd b7       	in	r28, 0x3d	; 61
     c0a:	de b7       	in	r29, 0x3e	; 62
     c0c:	8c 01       	movw	r16, r24
     c0e:	6b 01       	movw	r12, r22
     c10:	5d 83       	std	Y+5, r21	; 0x05
     c12:	4c 83       	std	Y+4, r20	; 0x04
     c14:	a2 2e       	mov	r10, r18
     c16:	b1 2c       	mov	r11, r1
     c18:	99 24       	eor	r9, r9
     c1a:	93 94       	inc	r9
     c1c:	7c 01       	movw	r14, r24
     c1e:	88 e0       	ldi	r24, 0x08	; 8
     c20:	e8 0e       	add	r14, r24
     c22:	f1 1c       	adc	r15, r1
     c24:	0f b6       	in	r0, 0x3f	; 63
     c26:	f8 94       	cli
     c28:	0f 92       	push	r0
     c2a:	f8 01       	movw	r30, r16
     c2c:	92 8d       	ldd	r25, Z+26	; 0x1a
     c2e:	83 8d       	ldd	r24, Z+27	; 0x1b
     c30:	98 17       	cp	r25, r24
     c32:	18 f0       	brcs	.+6      	; 0xc3a <xQueueGenericSend+0x4e>
     c34:	f2 e0       	ldi	r31, 0x02	; 2
     c36:	af 12       	cpse	r10, r31
     c38:	19 c0       	rjmp	.+50     	; 0xc6c <xQueueGenericSend+0x80>
     c3a:	4a 2d       	mov	r20, r10
     c3c:	b6 01       	movw	r22, r12
     c3e:	c8 01       	movw	r24, r16
     c40:	0e 94 30 05 	call	0xa60	; 0xa60 <prvCopyDataToQueue>
     c44:	f8 01       	movw	r30, r16
     c46:	91 89       	ldd	r25, Z+17	; 0x11
     c48:	99 23       	and	r25, r25
     c4a:	49 f0       	breq	.+18     	; 0xc5e <xQueueGenericSend+0x72>
     c4c:	c8 01       	movw	r24, r16
     c4e:	41 96       	adiw	r24, 0x11	; 17
     c50:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <xTaskRemoveFromEventList>
     c54:	81 30       	cpi	r24, 0x01	; 1
     c56:	31 f4       	brne	.+12     	; 0xc64 <xQueueGenericSend+0x78>
     c58:	0e 94 ab 03 	call	0x756	; 0x756 <vPortYield>
     c5c:	03 c0       	rjmp	.+6      	; 0xc64 <xQueueGenericSend+0x78>
     c5e:	81 11       	cpse	r24, r1
     c60:	0e 94 ab 03 	call	0x756	; 0x756 <vPortYield>
     c64:	0f 90       	pop	r0
     c66:	0f be       	out	0x3f, r0	; 63
     c68:	81 e0       	ldi	r24, 0x01	; 1
     c6a:	50 c0       	rjmp	.+160    	; 0xd0c <xQueueGenericSend+0x120>
     c6c:	8c 81       	ldd	r24, Y+4	; 0x04
     c6e:	9d 81       	ldd	r25, Y+5	; 0x05
     c70:	89 2b       	or	r24, r25
     c72:	21 f4       	brne	.+8      	; 0xc7c <xQueueGenericSend+0x90>
     c74:	0f 90       	pop	r0
     c76:	0f be       	out	0x3f, r0	; 63
     c78:	80 e0       	ldi	r24, 0x00	; 0
     c7a:	48 c0       	rjmp	.+144    	; 0xd0c <xQueueGenericSend+0x120>
     c7c:	b1 10       	cpse	r11, r1
     c7e:	05 c0       	rjmp	.+10     	; 0xc8a <xQueueGenericSend+0x9e>
     c80:	ce 01       	movw	r24, r28
     c82:	01 96       	adiw	r24, 0x01	; 1
     c84:	0e 94 b4 0c 	call	0x1968	; 0x1968 <vTaskSetTimeOutState>
     c88:	b9 2c       	mov	r11, r9
     c8a:	0f 90       	pop	r0
     c8c:	0f be       	out	0x3f, r0	; 63
     c8e:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <vTaskSuspendAll>
     c92:	0f b6       	in	r0, 0x3f	; 63
     c94:	f8 94       	cli
     c96:	0f 92       	push	r0
     c98:	f8 01       	movw	r30, r16
     c9a:	85 8d       	ldd	r24, Z+29	; 0x1d
     c9c:	8f 3f       	cpi	r24, 0xFF	; 255
     c9e:	09 f4       	brne	.+2      	; 0xca2 <xQueueGenericSend+0xb6>
     ca0:	15 8e       	std	Z+29, r1	; 0x1d
     ca2:	f8 01       	movw	r30, r16
     ca4:	86 8d       	ldd	r24, Z+30	; 0x1e
     ca6:	8f 3f       	cpi	r24, 0xFF	; 255
     ca8:	09 f4       	brne	.+2      	; 0xcac <xQueueGenericSend+0xc0>
     caa:	16 8e       	std	Z+30, r1	; 0x1e
     cac:	0f 90       	pop	r0
     cae:	0f be       	out	0x3f, r0	; 63
     cb0:	be 01       	movw	r22, r28
     cb2:	6c 5f       	subi	r22, 0xFC	; 252
     cb4:	7f 4f       	sbci	r23, 0xFF	; 255
     cb6:	ce 01       	movw	r24, r28
     cb8:	01 96       	adiw	r24, 0x01	; 1
     cba:	0e 94 bf 0c 	call	0x197e	; 0x197e <xTaskCheckForTimeOut>
     cbe:	81 11       	cpse	r24, r1
     cc0:	1f c0       	rjmp	.+62     	; 0xd00 <xQueueGenericSend+0x114>
     cc2:	0f b6       	in	r0, 0x3f	; 63
     cc4:	f8 94       	cli
     cc6:	0f 92       	push	r0
     cc8:	f8 01       	movw	r30, r16
     cca:	92 8d       	ldd	r25, Z+26	; 0x1a
     ccc:	0f 90       	pop	r0
     cce:	0f be       	out	0x3f, r0	; 63
     cd0:	83 8d       	ldd	r24, Z+27	; 0x1b
     cd2:	98 13       	cpse	r25, r24
     cd4:	0f c0       	rjmp	.+30     	; 0xcf4 <xQueueGenericSend+0x108>
     cd6:	6c 81       	ldd	r22, Y+4	; 0x04
     cd8:	7d 81       	ldd	r23, Y+5	; 0x05
     cda:	c7 01       	movw	r24, r14
     cdc:	0e 94 40 0c 	call	0x1880	; 0x1880 <vTaskPlaceOnEventList>
     ce0:	c8 01       	movw	r24, r16
     ce2:	0e 94 aa 05 	call	0xb54	; 0xb54 <prvUnlockQueue>
     ce6:	0e 94 a5 0a 	call	0x154a	; 0x154a <xTaskResumeAll>
     cea:	81 11       	cpse	r24, r1
     cec:	9b cf       	rjmp	.-202    	; 0xc24 <xQueueGenericSend+0x38>
     cee:	0e 94 ab 03 	call	0x756	; 0x756 <vPortYield>
     cf2:	98 cf       	rjmp	.-208    	; 0xc24 <xQueueGenericSend+0x38>
     cf4:	c8 01       	movw	r24, r16
     cf6:	0e 94 aa 05 	call	0xb54	; 0xb54 <prvUnlockQueue>
     cfa:	0e 94 a5 0a 	call	0x154a	; 0x154a <xTaskResumeAll>
     cfe:	92 cf       	rjmp	.-220    	; 0xc24 <xQueueGenericSend+0x38>
     d00:	c8 01       	movw	r24, r16
     d02:	0e 94 aa 05 	call	0xb54	; 0xb54 <prvUnlockQueue>
     d06:	0e 94 a5 0a 	call	0x154a	; 0x154a <xTaskResumeAll>
     d0a:	80 e0       	ldi	r24, 0x00	; 0
     d0c:	0f 90       	pop	r0
     d0e:	0f 90       	pop	r0
     d10:	0f 90       	pop	r0
     d12:	0f 90       	pop	r0
     d14:	0f 90       	pop	r0
     d16:	df 91       	pop	r29
     d18:	cf 91       	pop	r28
     d1a:	1f 91       	pop	r17
     d1c:	0f 91       	pop	r16
     d1e:	ff 90       	pop	r15
     d20:	ef 90       	pop	r14
     d22:	df 90       	pop	r13
     d24:	cf 90       	pop	r12
     d26:	bf 90       	pop	r11
     d28:	af 90       	pop	r10
     d2a:	9f 90       	pop	r9
     d2c:	08 95       	ret

00000d2e <xQueueGenericSendFromISR>:
     d2e:	0f 93       	push	r16
     d30:	1f 93       	push	r17
     d32:	cf 93       	push	r28
     d34:	df 93       	push	r29
     d36:	fa 01       	movw	r30, r20
     d38:	dc 01       	movw	r26, r24
     d3a:	5a 96       	adiw	r26, 0x1a	; 26
     d3c:	5c 91       	ld	r21, X
     d3e:	5a 97       	sbiw	r26, 0x1a	; 26
     d40:	5b 96       	adiw	r26, 0x1b	; 27
     d42:	3c 91       	ld	r19, X
     d44:	53 17       	cp	r21, r19
     d46:	10 f0       	brcs	.+4      	; 0xd4c <xQueueGenericSendFromISR+0x1e>
     d48:	22 30       	cpi	r18, 0x02	; 2
     d4a:	e9 f4       	brne	.+58     	; 0xd86 <xQueueGenericSendFromISR+0x58>
     d4c:	42 2f       	mov	r20, r18
     d4e:	8f 01       	movw	r16, r30
     d50:	ec 01       	movw	r28, r24
     d52:	0e 94 30 05 	call	0xa60	; 0xa60 <prvCopyDataToQueue>
     d56:	8e 8d       	ldd	r24, Y+30	; 0x1e
     d58:	8f 3f       	cpi	r24, 0xFF	; 255
     d5a:	81 f4       	brne	.+32     	; 0xd7c <xQueueGenericSendFromISR+0x4e>
     d5c:	89 89       	ldd	r24, Y+17	; 0x11
     d5e:	88 23       	and	r24, r24
     d60:	a1 f0       	breq	.+40     	; 0xd8a <xQueueGenericSendFromISR+0x5c>
     d62:	ce 01       	movw	r24, r28
     d64:	41 96       	adiw	r24, 0x11	; 17
     d66:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <xTaskRemoveFromEventList>
     d6a:	88 23       	and	r24, r24
     d6c:	81 f0       	breq	.+32     	; 0xd8e <xQueueGenericSendFromISR+0x60>
     d6e:	01 15       	cp	r16, r1
     d70:	11 05       	cpc	r17, r1
     d72:	79 f0       	breq	.+30     	; 0xd92 <xQueueGenericSendFromISR+0x64>
     d74:	81 e0       	ldi	r24, 0x01	; 1
     d76:	f8 01       	movw	r30, r16
     d78:	80 83       	st	Z, r24
     d7a:	0c c0       	rjmp	.+24     	; 0xd94 <xQueueGenericSendFromISR+0x66>
     d7c:	8e 8d       	ldd	r24, Y+30	; 0x1e
     d7e:	8f 5f       	subi	r24, 0xFF	; 255
     d80:	8e 8f       	std	Y+30, r24	; 0x1e
     d82:	81 e0       	ldi	r24, 0x01	; 1
     d84:	07 c0       	rjmp	.+14     	; 0xd94 <xQueueGenericSendFromISR+0x66>
     d86:	80 e0       	ldi	r24, 0x00	; 0
     d88:	05 c0       	rjmp	.+10     	; 0xd94 <xQueueGenericSendFromISR+0x66>
     d8a:	81 e0       	ldi	r24, 0x01	; 1
     d8c:	03 c0       	rjmp	.+6      	; 0xd94 <xQueueGenericSendFromISR+0x66>
     d8e:	81 e0       	ldi	r24, 0x01	; 1
     d90:	01 c0       	rjmp	.+2      	; 0xd94 <xQueueGenericSendFromISR+0x66>
     d92:	81 e0       	ldi	r24, 0x01	; 1
     d94:	df 91       	pop	r29
     d96:	cf 91       	pop	r28
     d98:	1f 91       	pop	r17
     d9a:	0f 91       	pop	r16
     d9c:	08 95       	ret

00000d9e <xQueueGenericReceive>:
     d9e:	9f 92       	push	r9
     da0:	af 92       	push	r10
     da2:	bf 92       	push	r11
     da4:	cf 92       	push	r12
     da6:	df 92       	push	r13
     da8:	ef 92       	push	r14
     daa:	ff 92       	push	r15
     dac:	0f 93       	push	r16
     dae:	1f 93       	push	r17
     db0:	cf 93       	push	r28
     db2:	df 93       	push	r29
     db4:	00 d0       	rcall	.+0      	; 0xdb6 <xQueueGenericReceive+0x18>
     db6:	00 d0       	rcall	.+0      	; 0xdb8 <xQueueGenericReceive+0x1a>
     db8:	1f 92       	push	r1
     dba:	cd b7       	in	r28, 0x3d	; 61
     dbc:	de b7       	in	r29, 0x3e	; 62
     dbe:	8c 01       	movw	r16, r24
     dc0:	6b 01       	movw	r12, r22
     dc2:	5d 83       	std	Y+5, r21	; 0x05
     dc4:	4c 83       	std	Y+4, r20	; 0x04
     dc6:	92 2e       	mov	r9, r18
     dc8:	b1 2c       	mov	r11, r1
     dca:	aa 24       	eor	r10, r10
     dcc:	a3 94       	inc	r10
     dce:	7c 01       	movw	r14, r24
     dd0:	81 e1       	ldi	r24, 0x11	; 17
     dd2:	e8 0e       	add	r14, r24
     dd4:	f1 1c       	adc	r15, r1
     dd6:	0f b6       	in	r0, 0x3f	; 63
     dd8:	f8 94       	cli
     dda:	0f 92       	push	r0
     ddc:	f8 01       	movw	r30, r16
     dde:	82 8d       	ldd	r24, Z+26	; 0x1a
     de0:	88 23       	and	r24, r24
     de2:	99 f1       	breq	.+102    	; 0xe4a <xQueueGenericReceive+0xac>
     de4:	e6 80       	ldd	r14, Z+6	; 0x06
     de6:	f7 80       	ldd	r15, Z+7	; 0x07
     de8:	b6 01       	movw	r22, r12
     dea:	c8 01       	movw	r24, r16
     dec:	0e 94 90 05 	call	0xb20	; 0xb20 <prvCopyDataFromQueue>
     df0:	91 10       	cpse	r9, r1
     df2:	1a c0       	rjmp	.+52     	; 0xe28 <xQueueGenericReceive+0x8a>
     df4:	f8 01       	movw	r30, r16
     df6:	82 8d       	ldd	r24, Z+26	; 0x1a
     df8:	81 50       	subi	r24, 0x01	; 1
     dfa:	82 8f       	std	Z+26, r24	; 0x1a
     dfc:	80 81       	ld	r24, Z
     dfe:	91 81       	ldd	r25, Z+1	; 0x01
     e00:	89 2b       	or	r24, r25
     e02:	29 f4       	brne	.+10     	; 0xe0e <xQueueGenericReceive+0x70>
     e04:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <pvTaskIncrementMutexHeldCount>
     e08:	f8 01       	movw	r30, r16
     e0a:	93 83       	std	Z+3, r25	; 0x03
     e0c:	82 83       	std	Z+2, r24	; 0x02
     e0e:	f8 01       	movw	r30, r16
     e10:	80 85       	ldd	r24, Z+8	; 0x08
     e12:	88 23       	and	r24, r24
     e14:	b1 f0       	breq	.+44     	; 0xe42 <xQueueGenericReceive+0xa4>
     e16:	c8 01       	movw	r24, r16
     e18:	08 96       	adiw	r24, 0x08	; 8
     e1a:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <xTaskRemoveFromEventList>
     e1e:	81 30       	cpi	r24, 0x01	; 1
     e20:	81 f4       	brne	.+32     	; 0xe42 <xQueueGenericReceive+0xa4>
     e22:	0e 94 ab 03 	call	0x756	; 0x756 <vPortYield>
     e26:	0d c0       	rjmp	.+26     	; 0xe42 <xQueueGenericReceive+0xa4>
     e28:	f8 01       	movw	r30, r16
     e2a:	f7 82       	std	Z+7, r15	; 0x07
     e2c:	e6 82       	std	Z+6, r14	; 0x06
     e2e:	81 89       	ldd	r24, Z+17	; 0x11
     e30:	88 23       	and	r24, r24
     e32:	39 f0       	breq	.+14     	; 0xe42 <xQueueGenericReceive+0xa4>
     e34:	c8 01       	movw	r24, r16
     e36:	41 96       	adiw	r24, 0x11	; 17
     e38:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <xTaskRemoveFromEventList>
     e3c:	81 11       	cpse	r24, r1
     e3e:	0e 94 ab 03 	call	0x756	; 0x756 <vPortYield>
     e42:	0f 90       	pop	r0
     e44:	0f be       	out	0x3f, r0	; 63
     e46:	81 e0       	ldi	r24, 0x01	; 1
     e48:	5c c0       	rjmp	.+184    	; 0xf02 <xQueueGenericReceive+0x164>
     e4a:	8c 81       	ldd	r24, Y+4	; 0x04
     e4c:	9d 81       	ldd	r25, Y+5	; 0x05
     e4e:	89 2b       	or	r24, r25
     e50:	21 f4       	brne	.+8      	; 0xe5a <xQueueGenericReceive+0xbc>
     e52:	0f 90       	pop	r0
     e54:	0f be       	out	0x3f, r0	; 63
     e56:	80 e0       	ldi	r24, 0x00	; 0
     e58:	54 c0       	rjmp	.+168    	; 0xf02 <xQueueGenericReceive+0x164>
     e5a:	b1 10       	cpse	r11, r1
     e5c:	05 c0       	rjmp	.+10     	; 0xe68 <xQueueGenericReceive+0xca>
     e5e:	ce 01       	movw	r24, r28
     e60:	01 96       	adiw	r24, 0x01	; 1
     e62:	0e 94 b4 0c 	call	0x1968	; 0x1968 <vTaskSetTimeOutState>
     e66:	ba 2c       	mov	r11, r10
     e68:	0f 90       	pop	r0
     e6a:	0f be       	out	0x3f, r0	; 63
     e6c:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <vTaskSuspendAll>
     e70:	0f b6       	in	r0, 0x3f	; 63
     e72:	f8 94       	cli
     e74:	0f 92       	push	r0
     e76:	f8 01       	movw	r30, r16
     e78:	85 8d       	ldd	r24, Z+29	; 0x1d
     e7a:	8f 3f       	cpi	r24, 0xFF	; 255
     e7c:	09 f4       	brne	.+2      	; 0xe80 <xQueueGenericReceive+0xe2>
     e7e:	15 8e       	std	Z+29, r1	; 0x1d
     e80:	f8 01       	movw	r30, r16
     e82:	86 8d       	ldd	r24, Z+30	; 0x1e
     e84:	8f 3f       	cpi	r24, 0xFF	; 255
     e86:	09 f4       	brne	.+2      	; 0xe8a <xQueueGenericReceive+0xec>
     e88:	16 8e       	std	Z+30, r1	; 0x1e
     e8a:	0f 90       	pop	r0
     e8c:	0f be       	out	0x3f, r0	; 63
     e8e:	be 01       	movw	r22, r28
     e90:	6c 5f       	subi	r22, 0xFC	; 252
     e92:	7f 4f       	sbci	r23, 0xFF	; 255
     e94:	ce 01       	movw	r24, r28
     e96:	01 96       	adiw	r24, 0x01	; 1
     e98:	0e 94 bf 0c 	call	0x197e	; 0x197e <xTaskCheckForTimeOut>
     e9c:	81 11       	cpse	r24, r1
     e9e:	2b c0       	rjmp	.+86     	; 0xef6 <xQueueGenericReceive+0x158>
     ea0:	0f b6       	in	r0, 0x3f	; 63
     ea2:	f8 94       	cli
     ea4:	0f 92       	push	r0
     ea6:	f8 01       	movw	r30, r16
     ea8:	82 8d       	ldd	r24, Z+26	; 0x1a
     eaa:	0f 90       	pop	r0
     eac:	0f be       	out	0x3f, r0	; 63
     eae:	81 11       	cpse	r24, r1
     eb0:	1c c0       	rjmp	.+56     	; 0xeea <xQueueGenericReceive+0x14c>
     eb2:	80 81       	ld	r24, Z
     eb4:	91 81       	ldd	r25, Z+1	; 0x01
     eb6:	89 2b       	or	r24, r25
     eb8:	49 f4       	brne	.+18     	; 0xecc <xQueueGenericReceive+0x12e>
     eba:	0f b6       	in	r0, 0x3f	; 63
     ebc:	f8 94       	cli
     ebe:	0f 92       	push	r0
     ec0:	82 81       	ldd	r24, Z+2	; 0x02
     ec2:	93 81       	ldd	r25, Z+3	; 0x03
     ec4:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <vTaskPriorityInherit>
     ec8:	0f 90       	pop	r0
     eca:	0f be       	out	0x3f, r0	; 63
     ecc:	6c 81       	ldd	r22, Y+4	; 0x04
     ece:	7d 81       	ldd	r23, Y+5	; 0x05
     ed0:	c7 01       	movw	r24, r14
     ed2:	0e 94 40 0c 	call	0x1880	; 0x1880 <vTaskPlaceOnEventList>
     ed6:	c8 01       	movw	r24, r16
     ed8:	0e 94 aa 05 	call	0xb54	; 0xb54 <prvUnlockQueue>
     edc:	0e 94 a5 0a 	call	0x154a	; 0x154a <xTaskResumeAll>
     ee0:	81 11       	cpse	r24, r1
     ee2:	79 cf       	rjmp	.-270    	; 0xdd6 <xQueueGenericReceive+0x38>
     ee4:	0e 94 ab 03 	call	0x756	; 0x756 <vPortYield>
     ee8:	76 cf       	rjmp	.-276    	; 0xdd6 <xQueueGenericReceive+0x38>
     eea:	c8 01       	movw	r24, r16
     eec:	0e 94 aa 05 	call	0xb54	; 0xb54 <prvUnlockQueue>
     ef0:	0e 94 a5 0a 	call	0x154a	; 0x154a <xTaskResumeAll>
     ef4:	70 cf       	rjmp	.-288    	; 0xdd6 <xQueueGenericReceive+0x38>
     ef6:	c8 01       	movw	r24, r16
     ef8:	0e 94 aa 05 	call	0xb54	; 0xb54 <prvUnlockQueue>
     efc:	0e 94 a5 0a 	call	0x154a	; 0x154a <xTaskResumeAll>
     f00:	80 e0       	ldi	r24, 0x00	; 0
     f02:	0f 90       	pop	r0
     f04:	0f 90       	pop	r0
     f06:	0f 90       	pop	r0
     f08:	0f 90       	pop	r0
     f0a:	0f 90       	pop	r0
     f0c:	df 91       	pop	r29
     f0e:	cf 91       	pop	r28
     f10:	1f 91       	pop	r17
     f12:	0f 91       	pop	r16
     f14:	ff 90       	pop	r15
     f16:	ef 90       	pop	r14
     f18:	df 90       	pop	r13
     f1a:	cf 90       	pop	r12
     f1c:	bf 90       	pop	r11
     f1e:	af 90       	pop	r10
     f20:	9f 90       	pop	r9
     f22:	08 95       	ret

00000f24 <uxQueueMessagesWaiting>:
     f24:	0f b6       	in	r0, 0x3f	; 63
     f26:	f8 94       	cli
     f28:	0f 92       	push	r0
     f2a:	fc 01       	movw	r30, r24
     f2c:	82 8d       	ldd	r24, Z+26	; 0x1a
     f2e:	0f 90       	pop	r0
     f30:	0f be       	out	0x3f, r0	; 63
     f32:	08 95       	ret

00000f34 <prvResetNextTaskUnblockTime>:
     f34:	e0 91 4e 07 	lds	r30, 0x074E	; 0x80074e <pxDelayedTaskList>
     f38:	f0 91 4f 07 	lds	r31, 0x074F	; 0x80074f <pxDelayedTaskList+0x1>
     f3c:	80 81       	ld	r24, Z
     f3e:	81 11       	cpse	r24, r1
     f40:	07 c0       	rjmp	.+14     	; 0xf50 <prvResetNextTaskUnblockTime+0x1c>
     f42:	8f ef       	ldi	r24, 0xFF	; 255
     f44:	9f ef       	ldi	r25, 0xFF	; 255
     f46:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
     f4a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
     f4e:	08 95       	ret
     f50:	e0 91 4e 07 	lds	r30, 0x074E	; 0x80074e <pxDelayedTaskList>
     f54:	f0 91 4f 07 	lds	r31, 0x074F	; 0x80074f <pxDelayedTaskList+0x1>
     f58:	05 80       	ldd	r0, Z+5	; 0x05
     f5a:	f6 81       	ldd	r31, Z+6	; 0x06
     f5c:	e0 2d       	mov	r30, r0
     f5e:	06 80       	ldd	r0, Z+6	; 0x06
     f60:	f7 81       	ldd	r31, Z+7	; 0x07
     f62:	e0 2d       	mov	r30, r0
     f64:	82 81       	ldd	r24, Z+2	; 0x02
     f66:	93 81       	ldd	r25, Z+3	; 0x03
     f68:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
     f6c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
     f70:	08 95       	ret

00000f72 <prvAddCurrentTaskToDelayedList>:
     f72:	cf 93       	push	r28
     f74:	df 93       	push	r29
     f76:	ec 01       	movw	r28, r24
     f78:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
     f7c:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     f80:	93 83       	std	Z+3, r25	; 0x03
     f82:	82 83       	std	Z+2, r24	; 0x02
     f84:	80 91 2b 07 	lds	r24, 0x072B	; 0x80072b <xTickCount>
     f88:	90 91 2c 07 	lds	r25, 0x072C	; 0x80072c <xTickCount+0x1>
     f8c:	c8 17       	cp	r28, r24
     f8e:	d9 07       	cpc	r29, r25
     f90:	68 f4       	brcc	.+26     	; 0xfac <prvAddCurrentTaskToDelayedList+0x3a>
     f92:	60 91 86 07 	lds	r22, 0x0786	; 0x800786 <pxCurrentTCB>
     f96:	70 91 87 07 	lds	r23, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     f9a:	80 91 4c 07 	lds	r24, 0x074C	; 0x80074c <pxOverflowDelayedTaskList>
     f9e:	90 91 4d 07 	lds	r25, 0x074D	; 0x80074d <pxOverflowDelayedTaskList+0x1>
     fa2:	6e 5f       	subi	r22, 0xFE	; 254
     fa4:	7f 4f       	sbci	r23, 0xFF	; 255
     fa6:	0e 94 ae 02 	call	0x55c	; 0x55c <vListInsert>
     faa:	17 c0       	rjmp	.+46     	; 0xfda <prvAddCurrentTaskToDelayedList+0x68>
     fac:	60 91 86 07 	lds	r22, 0x0786	; 0x800786 <pxCurrentTCB>
     fb0:	70 91 87 07 	lds	r23, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     fb4:	80 91 4e 07 	lds	r24, 0x074E	; 0x80074e <pxDelayedTaskList>
     fb8:	90 91 4f 07 	lds	r25, 0x074F	; 0x80074f <pxDelayedTaskList+0x1>
     fbc:	6e 5f       	subi	r22, 0xFE	; 254
     fbe:	7f 4f       	sbci	r23, 0xFF	; 255
     fc0:	0e 94 ae 02 	call	0x55c	; 0x55c <vListInsert>
     fc4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <xNextTaskUnblockTime>
     fc8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <xNextTaskUnblockTime+0x1>
     fcc:	c8 17       	cp	r28, r24
     fce:	d9 07       	cpc	r29, r25
     fd0:	20 f4       	brcc	.+8      	; 0xfda <prvAddCurrentTaskToDelayedList+0x68>
     fd2:	d0 93 03 01 	sts	0x0103, r29	; 0x800103 <xNextTaskUnblockTime+0x1>
     fd6:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <xNextTaskUnblockTime>
     fda:	df 91       	pop	r29
     fdc:	cf 91       	pop	r28
     fde:	08 95       	ret

00000fe0 <xTaskGenericCreate>:
     fe0:	4f 92       	push	r4
     fe2:	5f 92       	push	r5
     fe4:	6f 92       	push	r6
     fe6:	7f 92       	push	r7
     fe8:	8f 92       	push	r8
     fea:	9f 92       	push	r9
     fec:	af 92       	push	r10
     fee:	bf 92       	push	r11
     ff0:	cf 92       	push	r12
     ff2:	df 92       	push	r13
     ff4:	ef 92       	push	r14
     ff6:	ff 92       	push	r15
     ff8:	0f 93       	push	r16
     ffa:	1f 93       	push	r17
     ffc:	cf 93       	push	r28
     ffe:	df 93       	push	r29
    1000:	4c 01       	movw	r8, r24
    1002:	eb 01       	movw	r28, r22
    1004:	5a 01       	movw	r10, r20
    1006:	29 01       	movw	r4, r18
    1008:	c1 14       	cp	r12, r1
    100a:	d1 04       	cpc	r13, r1
    100c:	39 f4       	brne	.+14     	; 0x101c <xTaskGenericCreate+0x3c>
    100e:	ca 01       	movw	r24, r20
    1010:	0e 94 63 04 	call	0x8c6	; 0x8c6 <pvPortMalloc>
    1014:	6c 01       	movw	r12, r24
    1016:	89 2b       	or	r24, r25
    1018:	09 f4       	brne	.+2      	; 0x101c <xTaskGenericCreate+0x3c>
    101a:	e3 c0       	rjmp	.+454    	; 0x11e2 <xTaskGenericCreate+0x202>
    101c:	88 e2       	ldi	r24, 0x28	; 40
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	0e 94 63 04 	call	0x8c6	; 0x8c6 <pvPortMalloc>
    1024:	3c 01       	movw	r6, r24
    1026:	00 97       	sbiw	r24, 0x00	; 0
    1028:	79 f0       	breq	.+30     	; 0x1048 <xTaskGenericCreate+0x68>
    102a:	fc 01       	movw	r30, r24
    102c:	d0 8e       	std	Z+24, r13	; 0x18
    102e:	c7 8a       	std	Z+23, r12	; 0x17
    1030:	f1 e0       	ldi	r31, 0x01	; 1
    1032:	af 1a       	sub	r10, r31
    1034:	b1 08       	sbc	r11, r1
    1036:	ca 0c       	add	r12, r10
    1038:	db 1c       	adc	r13, r11
    103a:	88 81       	ld	r24, Y
    103c:	f3 01       	movw	r30, r6
    103e:	81 8f       	std	Z+25, r24	; 0x19
    1040:	88 81       	ld	r24, Y
    1042:	81 11       	cpse	r24, r1
    1044:	05 c0       	rjmp	.+10     	; 0x1050 <xTaskGenericCreate+0x70>
    1046:	14 c0       	rjmp	.+40     	; 0x1070 <xTaskGenericCreate+0x90>
    1048:	c6 01       	movw	r24, r12
    104a:	0e 94 fd 04 	call	0x9fa	; 0x9fa <vPortFree>
    104e:	c9 c0       	rjmp	.+402    	; 0x11e2 <xTaskGenericCreate+0x202>
    1050:	d3 01       	movw	r26, r6
    1052:	5a 96       	adiw	r26, 0x1a	; 26
    1054:	fe 01       	movw	r30, r28
    1056:	31 96       	adiw	r30, 0x01	; 1
    1058:	9e 01       	movw	r18, r28
    105a:	28 5f       	subi	r18, 0xF8	; 248
    105c:	3f 4f       	sbci	r19, 0xFF	; 255
    105e:	ef 01       	movw	r28, r30
    1060:	81 91       	ld	r24, Z+
    1062:	8d 93       	st	X+, r24
    1064:	88 81       	ld	r24, Y
    1066:	88 23       	and	r24, r24
    1068:	19 f0       	breq	.+6      	; 0x1070 <xTaskGenericCreate+0x90>
    106a:	e2 17       	cp	r30, r18
    106c:	f3 07       	cpc	r31, r19
    106e:	b9 f7       	brne	.-18     	; 0x105e <xTaskGenericCreate+0x7e>
    1070:	f3 01       	movw	r30, r6
    1072:	10 a2       	std	Z+32, r1	; 0x20
    1074:	10 2f       	mov	r17, r16
    1076:	04 30       	cpi	r16, 0x04	; 4
    1078:	08 f0       	brcs	.+2      	; 0x107c <xTaskGenericCreate+0x9c>
    107a:	13 e0       	ldi	r17, 0x03	; 3
    107c:	f3 01       	movw	r30, r6
    107e:	16 8b       	std	Z+22, r17	; 0x16
    1080:	11 a3       	std	Z+33, r17	; 0x21
    1082:	12 a2       	std	Z+34, r1	; 0x22
    1084:	e3 01       	movw	r28, r6
    1086:	22 96       	adiw	r28, 0x02	; 2
    1088:	ce 01       	movw	r24, r28
    108a:	0e 94 89 02 	call	0x512	; 0x512 <vListInitialiseItem>
    108e:	c3 01       	movw	r24, r6
    1090:	0c 96       	adiw	r24, 0x0c	; 12
    1092:	0e 94 89 02 	call	0x512	; 0x512 <vListInitialiseItem>
    1096:	f3 01       	movw	r30, r6
    1098:	71 86       	std	Z+9, r7	; 0x09
    109a:	60 86       	std	Z+8, r6	; 0x08
    109c:	84 e0       	ldi	r24, 0x04	; 4
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	81 1b       	sub	r24, r17
    10a2:	91 09       	sbc	r25, r1
    10a4:	95 87       	std	Z+13, r25	; 0x0d
    10a6:	84 87       	std	Z+12, r24	; 0x0c
    10a8:	73 8a       	std	Z+19, r7	; 0x13
    10aa:	62 8a       	std	Z+18, r6	; 0x12
    10ac:	13 a2       	std	Z+35, r1	; 0x23
    10ae:	14 a2       	std	Z+36, r1	; 0x24
    10b0:	15 a2       	std	Z+37, r1	; 0x25
    10b2:	16 a2       	std	Z+38, r1	; 0x26
    10b4:	17 a2       	std	Z+39, r1	; 0x27
    10b6:	a2 01       	movw	r20, r4
    10b8:	b4 01       	movw	r22, r8
    10ba:	c6 01       	movw	r24, r12
    10bc:	0e 94 05 03 	call	0x60a	; 0x60a <pxPortInitialiseStack>
    10c0:	f3 01       	movw	r30, r6
    10c2:	91 83       	std	Z+1, r25	; 0x01
    10c4:	80 83       	st	Z, r24
    10c6:	e1 14       	cp	r14, r1
    10c8:	f1 04       	cpc	r15, r1
    10ca:	19 f0       	breq	.+6      	; 0x10d2 <xTaskGenericCreate+0xf2>
    10cc:	f7 01       	movw	r30, r14
    10ce:	71 82       	std	Z+1, r7	; 0x01
    10d0:	60 82       	st	Z, r6
    10d2:	0f b6       	in	r0, 0x3f	; 63
    10d4:	f8 94       	cli
    10d6:	0f 92       	push	r0
    10d8:	80 91 2d 07 	lds	r24, 0x072D	; 0x80072d <uxCurrentNumberOfTasks>
    10dc:	8f 5f       	subi	r24, 0xFF	; 255
    10de:	80 93 2d 07 	sts	0x072D, r24	; 0x80072d <uxCurrentNumberOfTasks>
    10e2:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <pxCurrentTCB>
    10e6:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    10ea:	89 2b       	or	r24, r25
    10ec:	d1 f5       	brne	.+116    	; 0x1162 <xTaskGenericCreate+0x182>
    10ee:	70 92 87 07 	sts	0x0787, r7	; 0x800787 <pxCurrentTCB+0x1>
    10f2:	60 92 86 07 	sts	0x0786, r6	; 0x800786 <pxCurrentTCB>
    10f6:	80 91 2d 07 	lds	r24, 0x072D	; 0x80072d <uxCurrentNumberOfTasks>
    10fa:	81 30       	cpi	r24, 0x01	; 1
    10fc:	09 f0       	breq	.+2      	; 0x1100 <xTaskGenericCreate+0x120>
    10fe:	40 c0       	rjmp	.+128    	; 0x1180 <xTaskGenericCreate+0x1a0>
    1100:	82 e6       	ldi	r24, 0x62	; 98
    1102:	97 e0       	ldi	r25, 0x07	; 7
    1104:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <vListInitialise>
    1108:	8b e6       	ldi	r24, 0x6B	; 107
    110a:	97 e0       	ldi	r25, 0x07	; 7
    110c:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <vListInitialise>
    1110:	84 e7       	ldi	r24, 0x74	; 116
    1112:	97 e0       	ldi	r25, 0x07	; 7
    1114:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <vListInitialise>
    1118:	8d e7       	ldi	r24, 0x7D	; 125
    111a:	97 e0       	ldi	r25, 0x07	; 7
    111c:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <vListInitialise>
    1120:	89 e5       	ldi	r24, 0x59	; 89
    1122:	97 e0       	ldi	r25, 0x07	; 7
    1124:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <vListInitialise>
    1128:	80 e5       	ldi	r24, 0x50	; 80
    112a:	97 e0       	ldi	r25, 0x07	; 7
    112c:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <vListInitialise>
    1130:	83 e4       	ldi	r24, 0x43	; 67
    1132:	97 e0       	ldi	r25, 0x07	; 7
    1134:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <vListInitialise>
    1138:	8a e3       	ldi	r24, 0x3A	; 58
    113a:	97 e0       	ldi	r25, 0x07	; 7
    113c:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <vListInitialise>
    1140:	80 e3       	ldi	r24, 0x30	; 48
    1142:	97 e0       	ldi	r25, 0x07	; 7
    1144:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <vListInitialise>
    1148:	89 e5       	ldi	r24, 0x59	; 89
    114a:	97 e0       	ldi	r25, 0x07	; 7
    114c:	90 93 4f 07 	sts	0x074F, r25	; 0x80074f <pxDelayedTaskList+0x1>
    1150:	80 93 4e 07 	sts	0x074E, r24	; 0x80074e <pxDelayedTaskList>
    1154:	80 e5       	ldi	r24, 0x50	; 80
    1156:	97 e0       	ldi	r25, 0x07	; 7
    1158:	90 93 4d 07 	sts	0x074D, r25	; 0x80074d <pxOverflowDelayedTaskList+0x1>
    115c:	80 93 4c 07 	sts	0x074C, r24	; 0x80074c <pxOverflowDelayedTaskList>
    1160:	0f c0       	rjmp	.+30     	; 0x1180 <xTaskGenericCreate+0x1a0>
    1162:	80 91 29 07 	lds	r24, 0x0729	; 0x800729 <xSchedulerRunning>
    1166:	81 11       	cpse	r24, r1
    1168:	0b c0       	rjmp	.+22     	; 0x1180 <xTaskGenericCreate+0x1a0>
    116a:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    116e:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1172:	86 89       	ldd	r24, Z+22	; 0x16
    1174:	08 17       	cp	r16, r24
    1176:	20 f0       	brcs	.+8      	; 0x1180 <xTaskGenericCreate+0x1a0>
    1178:	70 92 87 07 	sts	0x0787, r7	; 0x800787 <pxCurrentTCB+0x1>
    117c:	60 92 86 07 	sts	0x0786, r6	; 0x800786 <pxCurrentTCB>
    1180:	80 91 25 07 	lds	r24, 0x0725	; 0x800725 <uxTaskNumber>
    1184:	8f 5f       	subi	r24, 0xFF	; 255
    1186:	80 93 25 07 	sts	0x0725, r24	; 0x800725 <uxTaskNumber>
    118a:	f3 01       	movw	r30, r6
    118c:	86 89       	ldd	r24, Z+22	; 0x16
    118e:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    1192:	98 17       	cp	r25, r24
    1194:	10 f4       	brcc	.+4      	; 0x119a <xTaskGenericCreate+0x1ba>
    1196:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	9c 01       	movw	r18, r24
    119e:	22 0f       	add	r18, r18
    11a0:	33 1f       	adc	r19, r19
    11a2:	22 0f       	add	r18, r18
    11a4:	33 1f       	adc	r19, r19
    11a6:	22 0f       	add	r18, r18
    11a8:	33 1f       	adc	r19, r19
    11aa:	82 0f       	add	r24, r18
    11ac:	93 1f       	adc	r25, r19
    11ae:	be 01       	movw	r22, r28
    11b0:	8e 59       	subi	r24, 0x9E	; 158
    11b2:	98 4f       	sbci	r25, 0xF8	; 248
    11b4:	0e 94 8d 02 	call	0x51a	; 0x51a <vListInsertEnd>
    11b8:	0f 90       	pop	r0
    11ba:	0f be       	out	0x3f, r0	; 63
    11bc:	80 91 29 07 	lds	r24, 0x0729	; 0x800729 <xSchedulerRunning>
    11c0:	88 23       	and	r24, r24
    11c2:	59 f0       	breq	.+22     	; 0x11da <xTaskGenericCreate+0x1fa>
    11c4:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    11c8:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    11cc:	86 89       	ldd	r24, Z+22	; 0x16
    11ce:	80 17       	cp	r24, r16
    11d0:	30 f4       	brcc	.+12     	; 0x11de <xTaskGenericCreate+0x1fe>
    11d2:	0e 94 ab 03 	call	0x756	; 0x756 <vPortYield>
    11d6:	81 e0       	ldi	r24, 0x01	; 1
    11d8:	05 c0       	rjmp	.+10     	; 0x11e4 <xTaskGenericCreate+0x204>
    11da:	81 e0       	ldi	r24, 0x01	; 1
    11dc:	03 c0       	rjmp	.+6      	; 0x11e4 <xTaskGenericCreate+0x204>
    11de:	81 e0       	ldi	r24, 0x01	; 1
    11e0:	01 c0       	rjmp	.+2      	; 0x11e4 <xTaskGenericCreate+0x204>
    11e2:	8f ef       	ldi	r24, 0xFF	; 255
    11e4:	df 91       	pop	r29
    11e6:	cf 91       	pop	r28
    11e8:	1f 91       	pop	r17
    11ea:	0f 91       	pop	r16
    11ec:	ff 90       	pop	r15
    11ee:	ef 90       	pop	r14
    11f0:	df 90       	pop	r13
    11f2:	cf 90       	pop	r12
    11f4:	bf 90       	pop	r11
    11f6:	af 90       	pop	r10
    11f8:	9f 90       	pop	r9
    11fa:	8f 90       	pop	r8
    11fc:	7f 90       	pop	r7
    11fe:	6f 90       	pop	r6
    1200:	5f 90       	pop	r5
    1202:	4f 90       	pop	r4
    1204:	08 95       	ret

00001206 <vTaskResume>:
    1206:	0f 93       	push	r16
    1208:	1f 93       	push	r17
    120a:	cf 93       	push	r28
    120c:	df 93       	push	r29
    120e:	00 97       	sbiw	r24, 0x00	; 0
    1210:	09 f4       	brne	.+2      	; 0x1214 <vTaskResume+0xe>
    1212:	43 c0       	rjmp	.+134    	; 0x129a <vTaskResume+0x94>
    1214:	20 91 86 07 	lds	r18, 0x0786	; 0x800786 <pxCurrentTCB>
    1218:	30 91 87 07 	lds	r19, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    121c:	82 17       	cp	r24, r18
    121e:	93 07       	cpc	r25, r19
    1220:	09 f4       	brne	.+2      	; 0x1224 <vTaskResume+0x1e>
    1222:	3b c0       	rjmp	.+118    	; 0x129a <vTaskResume+0x94>
    1224:	0f b6       	in	r0, 0x3f	; 63
    1226:	f8 94       	cli
    1228:	0f 92       	push	r0
    122a:	fc 01       	movw	r30, r24
    122c:	22 85       	ldd	r18, Z+10	; 0x0a
    122e:	33 85       	ldd	r19, Z+11	; 0x0b
    1230:	20 53       	subi	r18, 0x30	; 48
    1232:	37 40       	sbci	r19, 0x07	; 7
    1234:	81 f5       	brne	.+96     	; 0x1296 <vTaskResume+0x90>
    1236:	fc 01       	movw	r30, r24
    1238:	24 89       	ldd	r18, Z+20	; 0x14
    123a:	35 89       	ldd	r19, Z+21	; 0x15
    123c:	f7 e0       	ldi	r31, 0x07	; 7
    123e:	23 34       	cpi	r18, 0x43	; 67
    1240:	3f 07       	cpc	r19, r31
    1242:	49 f1       	breq	.+82     	; 0x1296 <vTaskResume+0x90>
    1244:	23 2b       	or	r18, r19
    1246:	39 f5       	brne	.+78     	; 0x1296 <vTaskResume+0x90>
    1248:	ec 01       	movw	r28, r24
    124a:	8c 01       	movw	r16, r24
    124c:	0e 5f       	subi	r16, 0xFE	; 254
    124e:	1f 4f       	sbci	r17, 0xFF	; 255
    1250:	c8 01       	movw	r24, r16
    1252:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    1256:	8e 89       	ldd	r24, Y+22	; 0x16
    1258:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    125c:	98 17       	cp	r25, r24
    125e:	10 f4       	brcc	.+4      	; 0x1264 <vTaskResume+0x5e>
    1260:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	9c 01       	movw	r18, r24
    1268:	22 0f       	add	r18, r18
    126a:	33 1f       	adc	r19, r19
    126c:	22 0f       	add	r18, r18
    126e:	33 1f       	adc	r19, r19
    1270:	22 0f       	add	r18, r18
    1272:	33 1f       	adc	r19, r19
    1274:	82 0f       	add	r24, r18
    1276:	93 1f       	adc	r25, r19
    1278:	b8 01       	movw	r22, r16
    127a:	8e 59       	subi	r24, 0x9E	; 158
    127c:	98 4f       	sbci	r25, 0xF8	; 248
    127e:	0e 94 8d 02 	call	0x51a	; 0x51a <vListInsertEnd>
    1282:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    1286:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    128a:	9e 89       	ldd	r25, Y+22	; 0x16
    128c:	86 89       	ldd	r24, Z+22	; 0x16
    128e:	98 17       	cp	r25, r24
    1290:	10 f0       	brcs	.+4      	; 0x1296 <vTaskResume+0x90>
    1292:	0e 94 ab 03 	call	0x756	; 0x756 <vPortYield>
    1296:	0f 90       	pop	r0
    1298:	0f be       	out	0x3f, r0	; 63
    129a:	df 91       	pop	r29
    129c:	cf 91       	pop	r28
    129e:	1f 91       	pop	r17
    12a0:	0f 91       	pop	r16
    12a2:	08 95       	ret

000012a4 <xTaskResumeFromISR>:
    12a4:	ef 92       	push	r14
    12a6:	ff 92       	push	r15
    12a8:	1f 93       	push	r17
    12aa:	cf 93       	push	r28
    12ac:	df 93       	push	r29
    12ae:	fc 01       	movw	r30, r24
    12b0:	22 85       	ldd	r18, Z+10	; 0x0a
    12b2:	33 85       	ldd	r19, Z+11	; 0x0b
    12b4:	20 53       	subi	r18, 0x30	; 48
    12b6:	37 40       	sbci	r19, 0x07	; 7
    12b8:	09 f0       	breq	.+2      	; 0x12bc <xTaskResumeFromISR+0x18>
    12ba:	49 c0       	rjmp	.+146    	; 0x134e <xTaskResumeFromISR+0xaa>
    12bc:	fc 01       	movw	r30, r24
    12be:	24 89       	ldd	r18, Z+20	; 0x14
    12c0:	35 89       	ldd	r19, Z+21	; 0x15
    12c2:	f7 e0       	ldi	r31, 0x07	; 7
    12c4:	23 34       	cpi	r18, 0x43	; 67
    12c6:	3f 07       	cpc	r19, r31
    12c8:	09 f4       	brne	.+2      	; 0x12cc <xTaskResumeFromISR+0x28>
    12ca:	43 c0       	rjmp	.+134    	; 0x1352 <xTaskResumeFromISR+0xae>
    12cc:	23 2b       	or	r18, r19
    12ce:	09 f0       	breq	.+2      	; 0x12d2 <xTaskResumeFromISR+0x2e>
    12d0:	42 c0       	rjmp	.+132    	; 0x1356 <xTaskResumeFromISR+0xb2>
    12d2:	ec 01       	movw	r28, r24
    12d4:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    12d8:	81 11       	cpse	r24, r1
    12da:	2c c0       	rjmp	.+88     	; 0x1334 <xTaskResumeFromISR+0x90>
    12dc:	8d e2       	ldi	r24, 0x2D	; 45
    12de:	91 e0       	ldi	r25, 0x01	; 1
    12e0:	0e 94 41 0e 	call	0x1c82	; 0x1c82 <USART_sendstr>
    12e4:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    12e8:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    12ec:	11 e0       	ldi	r17, 0x01	; 1
    12ee:	9e 89       	ldd	r25, Y+22	; 0x16
    12f0:	86 89       	ldd	r24, Z+22	; 0x16
    12f2:	98 17       	cp	r25, r24
    12f4:	08 f4       	brcc	.+2      	; 0x12f8 <xTaskResumeFromISR+0x54>
    12f6:	10 e0       	ldi	r17, 0x00	; 0
    12f8:	7e 01       	movw	r14, r28
    12fa:	42 e0       	ldi	r20, 0x02	; 2
    12fc:	e4 0e       	add	r14, r20
    12fe:	f1 1c       	adc	r15, r1
    1300:	c7 01       	movw	r24, r14
    1302:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    1306:	8e 89       	ldd	r24, Y+22	; 0x16
    1308:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    130c:	98 17       	cp	r25, r24
    130e:	10 f4       	brcc	.+4      	; 0x1314 <xTaskResumeFromISR+0x70>
    1310:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	9c 01       	movw	r18, r24
    1318:	22 0f       	add	r18, r18
    131a:	33 1f       	adc	r19, r19
    131c:	22 0f       	add	r18, r18
    131e:	33 1f       	adc	r19, r19
    1320:	22 0f       	add	r18, r18
    1322:	33 1f       	adc	r19, r19
    1324:	82 0f       	add	r24, r18
    1326:	93 1f       	adc	r25, r19
    1328:	b7 01       	movw	r22, r14
    132a:	8e 59       	subi	r24, 0x9E	; 158
    132c:	98 4f       	sbci	r25, 0xF8	; 248
    132e:	0e 94 8d 02 	call	0x51a	; 0x51a <vListInsertEnd>
    1332:	12 c0       	rjmp	.+36     	; 0x1358 <xTaskResumeFromISR+0xb4>
    1334:	82 e3       	ldi	r24, 0x32	; 50
    1336:	91 e0       	ldi	r25, 0x01	; 1
    1338:	0e 94 41 0e 	call	0x1c82	; 0x1c82 <USART_sendstr>
    133c:	be 01       	movw	r22, r28
    133e:	64 5f       	subi	r22, 0xF4	; 244
    1340:	7f 4f       	sbci	r23, 0xFF	; 255
    1342:	83 e4       	ldi	r24, 0x43	; 67
    1344:	97 e0       	ldi	r25, 0x07	; 7
    1346:	0e 94 8d 02 	call	0x51a	; 0x51a <vListInsertEnd>
    134a:	10 e0       	ldi	r17, 0x00	; 0
    134c:	05 c0       	rjmp	.+10     	; 0x1358 <xTaskResumeFromISR+0xb4>
    134e:	10 e0       	ldi	r17, 0x00	; 0
    1350:	03 c0       	rjmp	.+6      	; 0x1358 <xTaskResumeFromISR+0xb4>
    1352:	10 e0       	ldi	r17, 0x00	; 0
    1354:	01 c0       	rjmp	.+2      	; 0x1358 <xTaskResumeFromISR+0xb4>
    1356:	10 e0       	ldi	r17, 0x00	; 0
    1358:	81 2f       	mov	r24, r17
    135a:	df 91       	pop	r29
    135c:	cf 91       	pop	r28
    135e:	1f 91       	pop	r17
    1360:	ff 90       	pop	r15
    1362:	ef 90       	pop	r14
    1364:	08 95       	ret

00001366 <vTaskStartScheduler>:
    1366:	af 92       	push	r10
    1368:	bf 92       	push	r11
    136a:	cf 92       	push	r12
    136c:	df 92       	push	r13
    136e:	ef 92       	push	r14
    1370:	ff 92       	push	r15
    1372:	0f 93       	push	r16
    1374:	a1 2c       	mov	r10, r1
    1376:	b1 2c       	mov	r11, r1
    1378:	c1 2c       	mov	r12, r1
    137a:	d1 2c       	mov	r13, r1
    137c:	0f 2e       	mov	r0, r31
    137e:	fe e2       	ldi	r31, 0x2E	; 46
    1380:	ef 2e       	mov	r14, r31
    1382:	f7 e0       	ldi	r31, 0x07	; 7
    1384:	ff 2e       	mov	r15, r31
    1386:	f0 2d       	mov	r31, r0
    1388:	00 e0       	ldi	r16, 0x00	; 0
    138a:	20 e0       	ldi	r18, 0x00	; 0
    138c:	30 e0       	ldi	r19, 0x00	; 0
    138e:	45 e5       	ldi	r20, 0x55	; 85
    1390:	50 e0       	ldi	r21, 0x00	; 0
    1392:	68 e3       	ldi	r22, 0x38	; 56
    1394:	71 e0       	ldi	r23, 0x01	; 1
    1396:	87 e4       	ldi	r24, 0x47	; 71
    1398:	9b e0       	ldi	r25, 0x0B	; 11
    139a:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <xTaskGenericCreate>
    139e:	81 30       	cpi	r24, 0x01	; 1
    13a0:	49 f4       	brne	.+18     	; 0x13b4 <vTaskStartScheduler+0x4e>
    13a2:	f8 94       	cli
    13a4:	80 93 29 07 	sts	0x0729, r24	; 0x800729 <xSchedulerRunning>
    13a8:	10 92 2c 07 	sts	0x072C, r1	; 0x80072c <xTickCount+0x1>
    13ac:	10 92 2b 07 	sts	0x072B, r1	; 0x80072b <xTickCount>
    13b0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <xPortStartScheduler>
    13b4:	0f 91       	pop	r16
    13b6:	ff 90       	pop	r15
    13b8:	ef 90       	pop	r14
    13ba:	df 90       	pop	r13
    13bc:	cf 90       	pop	r12
    13be:	bf 90       	pop	r11
    13c0:	af 90       	pop	r10
    13c2:	08 95       	ret

000013c4 <vTaskSuspendAll>:
    13c4:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    13c8:	8f 5f       	subi	r24, 0xFF	; 255
    13ca:	80 93 24 07 	sts	0x0724, r24	; 0x800724 <uxSchedulerSuspended>
    13ce:	08 95       	ret

000013d0 <xTaskIncrementTick>:
    13d0:	cf 92       	push	r12
    13d2:	df 92       	push	r13
    13d4:	ef 92       	push	r14
    13d6:	ff 92       	push	r15
    13d8:	0f 93       	push	r16
    13da:	1f 93       	push	r17
    13dc:	cf 93       	push	r28
    13de:	df 93       	push	r29
    13e0:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    13e4:	81 11       	cpse	r24, r1
    13e6:	9b c0       	rjmp	.+310    	; 0x151e <xTaskIncrementTick+0x14e>
    13e8:	80 91 2b 07 	lds	r24, 0x072B	; 0x80072b <xTickCount>
    13ec:	90 91 2c 07 	lds	r25, 0x072C	; 0x80072c <xTickCount+0x1>
    13f0:	01 96       	adiw	r24, 0x01	; 1
    13f2:	90 93 2c 07 	sts	0x072C, r25	; 0x80072c <xTickCount+0x1>
    13f6:	80 93 2b 07 	sts	0x072B, r24	; 0x80072b <xTickCount>
    13fa:	e0 90 2b 07 	lds	r14, 0x072B	; 0x80072b <xTickCount>
    13fe:	f0 90 2c 07 	lds	r15, 0x072C	; 0x80072c <xTickCount+0x1>
    1402:	e1 14       	cp	r14, r1
    1404:	f1 04       	cpc	r15, r1
    1406:	b9 f4       	brne	.+46     	; 0x1436 <xTaskIncrementTick+0x66>
    1408:	80 91 4e 07 	lds	r24, 0x074E	; 0x80074e <pxDelayedTaskList>
    140c:	90 91 4f 07 	lds	r25, 0x074F	; 0x80074f <pxDelayedTaskList+0x1>
    1410:	20 91 4c 07 	lds	r18, 0x074C	; 0x80074c <pxOverflowDelayedTaskList>
    1414:	30 91 4d 07 	lds	r19, 0x074D	; 0x80074d <pxOverflowDelayedTaskList+0x1>
    1418:	30 93 4f 07 	sts	0x074F, r19	; 0x80074f <pxDelayedTaskList+0x1>
    141c:	20 93 4e 07 	sts	0x074E, r18	; 0x80074e <pxDelayedTaskList>
    1420:	90 93 4d 07 	sts	0x074D, r25	; 0x80074d <pxOverflowDelayedTaskList+0x1>
    1424:	80 93 4c 07 	sts	0x074C, r24	; 0x80074c <pxOverflowDelayedTaskList>
    1428:	80 91 26 07 	lds	r24, 0x0726	; 0x800726 <xNumOfOverflows>
    142c:	8f 5f       	subi	r24, 0xFF	; 255
    142e:	80 93 26 07 	sts	0x0726, r24	; 0x800726 <xNumOfOverflows>
    1432:	0e 94 9a 07 	call	0xf34	; 0xf34 <prvResetNextTaskUnblockTime>
    1436:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <xNextTaskUnblockTime>
    143a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <xNextTaskUnblockTime+0x1>
    143e:	e8 16       	cp	r14, r24
    1440:	f9 06       	cpc	r15, r25
    1442:	10 f4       	brcc	.+4      	; 0x1448 <xTaskIncrementTick+0x78>
    1444:	d1 2c       	mov	r13, r1
    1446:	53 c0       	rjmp	.+166    	; 0x14ee <xTaskIncrementTick+0x11e>
    1448:	d1 2c       	mov	r13, r1
    144a:	cc 24       	eor	r12, r12
    144c:	c3 94       	inc	r12
    144e:	e0 91 4e 07 	lds	r30, 0x074E	; 0x80074e <pxDelayedTaskList>
    1452:	f0 91 4f 07 	lds	r31, 0x074F	; 0x80074f <pxDelayedTaskList+0x1>
    1456:	80 81       	ld	r24, Z
    1458:	81 11       	cpse	r24, r1
    145a:	07 c0       	rjmp	.+14     	; 0x146a <xTaskIncrementTick+0x9a>
    145c:	8f ef       	ldi	r24, 0xFF	; 255
    145e:	9f ef       	ldi	r25, 0xFF	; 255
    1460:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    1464:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    1468:	42 c0       	rjmp	.+132    	; 0x14ee <xTaskIncrementTick+0x11e>
    146a:	e0 91 4e 07 	lds	r30, 0x074E	; 0x80074e <pxDelayedTaskList>
    146e:	f0 91 4f 07 	lds	r31, 0x074F	; 0x80074f <pxDelayedTaskList+0x1>
    1472:	05 80       	ldd	r0, Z+5	; 0x05
    1474:	f6 81       	ldd	r31, Z+6	; 0x06
    1476:	e0 2d       	mov	r30, r0
    1478:	c6 81       	ldd	r28, Z+6	; 0x06
    147a:	d7 81       	ldd	r29, Z+7	; 0x07
    147c:	8a 81       	ldd	r24, Y+2	; 0x02
    147e:	9b 81       	ldd	r25, Y+3	; 0x03
    1480:	e8 16       	cp	r14, r24
    1482:	f9 06       	cpc	r15, r25
    1484:	28 f4       	brcc	.+10     	; 0x1490 <xTaskIncrementTick+0xc0>
    1486:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    148a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    148e:	2f c0       	rjmp	.+94     	; 0x14ee <xTaskIncrementTick+0x11e>
    1490:	8e 01       	movw	r16, r28
    1492:	0e 5f       	subi	r16, 0xFE	; 254
    1494:	1f 4f       	sbci	r17, 0xFF	; 255
    1496:	c8 01       	movw	r24, r16
    1498:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    149c:	8c 89       	ldd	r24, Y+20	; 0x14
    149e:	9d 89       	ldd	r25, Y+21	; 0x15
    14a0:	89 2b       	or	r24, r25
    14a2:	21 f0       	breq	.+8      	; 0x14ac <xTaskIncrementTick+0xdc>
    14a4:	ce 01       	movw	r24, r28
    14a6:	0c 96       	adiw	r24, 0x0c	; 12
    14a8:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    14ac:	8e 89       	ldd	r24, Y+22	; 0x16
    14ae:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    14b2:	98 17       	cp	r25, r24
    14b4:	10 f4       	brcc	.+4      	; 0x14ba <xTaskIncrementTick+0xea>
    14b6:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    14ba:	90 e0       	ldi	r25, 0x00	; 0
    14bc:	9c 01       	movw	r18, r24
    14be:	22 0f       	add	r18, r18
    14c0:	33 1f       	adc	r19, r19
    14c2:	22 0f       	add	r18, r18
    14c4:	33 1f       	adc	r19, r19
    14c6:	22 0f       	add	r18, r18
    14c8:	33 1f       	adc	r19, r19
    14ca:	82 0f       	add	r24, r18
    14cc:	93 1f       	adc	r25, r19
    14ce:	b8 01       	movw	r22, r16
    14d0:	8e 59       	subi	r24, 0x9E	; 158
    14d2:	98 4f       	sbci	r25, 0xF8	; 248
    14d4:	0e 94 8d 02 	call	0x51a	; 0x51a <vListInsertEnd>
    14d8:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    14dc:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    14e0:	9e 89       	ldd	r25, Y+22	; 0x16
    14e2:	86 89       	ldd	r24, Z+22	; 0x16
    14e4:	98 17       	cp	r25, r24
    14e6:	08 f4       	brcc	.+2      	; 0x14ea <xTaskIncrementTick+0x11a>
    14e8:	b2 cf       	rjmp	.-156    	; 0x144e <xTaskIncrementTick+0x7e>
    14ea:	dc 2c       	mov	r13, r12
    14ec:	b0 cf       	rjmp	.-160    	; 0x144e <xTaskIncrementTick+0x7e>
    14ee:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    14f2:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    14f6:	86 89       	ldd	r24, Z+22	; 0x16
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	fc 01       	movw	r30, r24
    14fc:	ee 0f       	add	r30, r30
    14fe:	ff 1f       	adc	r31, r31
    1500:	ee 0f       	add	r30, r30
    1502:	ff 1f       	adc	r31, r31
    1504:	ee 0f       	add	r30, r30
    1506:	ff 1f       	adc	r31, r31
    1508:	8e 0f       	add	r24, r30
    150a:	9f 1f       	adc	r25, r31
    150c:	fc 01       	movw	r30, r24
    150e:	ee 59       	subi	r30, 0x9E	; 158
    1510:	f8 4f       	sbci	r31, 0xF8	; 248
    1512:	80 81       	ld	r24, Z
    1514:	82 30       	cpi	r24, 0x02	; 2
    1516:	48 f0       	brcs	.+18     	; 0x152a <xTaskIncrementTick+0x15a>
    1518:	dd 24       	eor	r13, r13
    151a:	d3 94       	inc	r13
    151c:	06 c0       	rjmp	.+12     	; 0x152a <xTaskIncrementTick+0x15a>
    151e:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <uxPendedTicks>
    1522:	8f 5f       	subi	r24, 0xFF	; 255
    1524:	80 93 28 07 	sts	0x0728, r24	; 0x800728 <uxPendedTicks>
    1528:	d1 2c       	mov	r13, r1
    152a:	80 91 27 07 	lds	r24, 0x0727	; 0x800727 <xYieldPending>
    152e:	88 23       	and	r24, r24
    1530:	11 f0       	breq	.+4      	; 0x1536 <xTaskIncrementTick+0x166>
    1532:	dd 24       	eor	r13, r13
    1534:	d3 94       	inc	r13
    1536:	8d 2d       	mov	r24, r13
    1538:	df 91       	pop	r29
    153a:	cf 91       	pop	r28
    153c:	1f 91       	pop	r17
    153e:	0f 91       	pop	r16
    1540:	ff 90       	pop	r15
    1542:	ef 90       	pop	r14
    1544:	df 90       	pop	r13
    1546:	cf 90       	pop	r12
    1548:	08 95       	ret

0000154a <xTaskResumeAll>:
    154a:	df 92       	push	r13
    154c:	ef 92       	push	r14
    154e:	ff 92       	push	r15
    1550:	0f 93       	push	r16
    1552:	1f 93       	push	r17
    1554:	cf 93       	push	r28
    1556:	df 93       	push	r29
    1558:	0f b6       	in	r0, 0x3f	; 63
    155a:	f8 94       	cli
    155c:	0f 92       	push	r0
    155e:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    1562:	81 50       	subi	r24, 0x01	; 1
    1564:	80 93 24 07 	sts	0x0724, r24	; 0x800724 <uxSchedulerSuspended>
    1568:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    156c:	81 11       	cpse	r24, r1
    156e:	62 c0       	rjmp	.+196    	; 0x1634 <xTaskResumeAll+0xea>
    1570:	80 91 2d 07 	lds	r24, 0x072D	; 0x80072d <uxCurrentNumberOfTasks>
    1574:	81 11       	cpse	r24, r1
    1576:	33 c0       	rjmp	.+102    	; 0x15de <xTaskResumeAll+0x94>
    1578:	60 c0       	rjmp	.+192    	; 0x163a <xTaskResumeAll+0xf0>
    157a:	d7 01       	movw	r26, r14
    157c:	15 96       	adiw	r26, 0x05	; 5
    157e:	ed 91       	ld	r30, X+
    1580:	fc 91       	ld	r31, X
    1582:	16 97       	sbiw	r26, 0x06	; 6
    1584:	c6 81       	ldd	r28, Z+6	; 0x06
    1586:	d7 81       	ldd	r29, Z+7	; 0x07
    1588:	ce 01       	movw	r24, r28
    158a:	0c 96       	adiw	r24, 0x0c	; 12
    158c:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    1590:	8e 01       	movw	r16, r28
    1592:	0e 5f       	subi	r16, 0xFE	; 254
    1594:	1f 4f       	sbci	r17, 0xFF	; 255
    1596:	c8 01       	movw	r24, r16
    1598:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    159c:	8e 89       	ldd	r24, Y+22	; 0x16
    159e:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    15a2:	98 17       	cp	r25, r24
    15a4:	10 f4       	brcc	.+4      	; 0x15aa <xTaskResumeAll+0x60>
    15a6:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	9c 01       	movw	r18, r24
    15ae:	22 0f       	add	r18, r18
    15b0:	33 1f       	adc	r19, r19
    15b2:	22 0f       	add	r18, r18
    15b4:	33 1f       	adc	r19, r19
    15b6:	22 0f       	add	r18, r18
    15b8:	33 1f       	adc	r19, r19
    15ba:	82 0f       	add	r24, r18
    15bc:	93 1f       	adc	r25, r19
    15be:	b8 01       	movw	r22, r16
    15c0:	8e 59       	subi	r24, 0x9E	; 158
    15c2:	98 4f       	sbci	r25, 0xF8	; 248
    15c4:	0e 94 8d 02 	call	0x51a	; 0x51a <vListInsertEnd>
    15c8:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    15cc:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    15d0:	9e 89       	ldd	r25, Y+22	; 0x16
    15d2:	86 89       	ldd	r24, Z+22	; 0x16
    15d4:	98 17       	cp	r25, r24
    15d6:	58 f0       	brcs	.+22     	; 0x15ee <xTaskResumeAll+0xa4>
    15d8:	d0 92 27 07 	sts	0x0727, r13	; 0x800727 <xYieldPending>
    15dc:	08 c0       	rjmp	.+16     	; 0x15ee <xTaskResumeAll+0xa4>
    15de:	0f 2e       	mov	r0, r31
    15e0:	f3 e4       	ldi	r31, 0x43	; 67
    15e2:	ef 2e       	mov	r14, r31
    15e4:	f7 e0       	ldi	r31, 0x07	; 7
    15e6:	ff 2e       	mov	r15, r31
    15e8:	f0 2d       	mov	r31, r0
    15ea:	dd 24       	eor	r13, r13
    15ec:	d3 94       	inc	r13
    15ee:	f7 01       	movw	r30, r14
    15f0:	80 81       	ld	r24, Z
    15f2:	81 11       	cpse	r24, r1
    15f4:	c2 cf       	rjmp	.-124    	; 0x157a <xTaskResumeAll+0x30>
    15f6:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <uxPendedTicks>
    15fa:	88 23       	and	r24, r24
    15fc:	99 f0       	breq	.+38     	; 0x1624 <xTaskResumeAll+0xda>
    15fe:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <uxPendedTicks>
    1602:	88 23       	and	r24, r24
    1604:	79 f0       	breq	.+30     	; 0x1624 <xTaskResumeAll+0xda>
    1606:	c1 e0       	ldi	r28, 0x01	; 1
    1608:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <xTaskIncrementTick>
    160c:	81 11       	cpse	r24, r1
    160e:	c0 93 27 07 	sts	0x0727, r28	; 0x800727 <xYieldPending>
    1612:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <uxPendedTicks>
    1616:	81 50       	subi	r24, 0x01	; 1
    1618:	80 93 28 07 	sts	0x0728, r24	; 0x800728 <uxPendedTicks>
    161c:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <uxPendedTicks>
    1620:	81 11       	cpse	r24, r1
    1622:	f2 cf       	rjmp	.-28     	; 0x1608 <xTaskResumeAll+0xbe>
    1624:	80 91 27 07 	lds	r24, 0x0727	; 0x800727 <xYieldPending>
    1628:	81 30       	cpi	r24, 0x01	; 1
    162a:	31 f4       	brne	.+12     	; 0x1638 <xTaskResumeAll+0xee>
    162c:	0e 94 ab 03 	call	0x756	; 0x756 <vPortYield>
    1630:	81 e0       	ldi	r24, 0x01	; 1
    1632:	03 c0       	rjmp	.+6      	; 0x163a <xTaskResumeAll+0xf0>
    1634:	80 e0       	ldi	r24, 0x00	; 0
    1636:	01 c0       	rjmp	.+2      	; 0x163a <xTaskResumeAll+0xf0>
    1638:	80 e0       	ldi	r24, 0x00	; 0
    163a:	0f 90       	pop	r0
    163c:	0f be       	out	0x3f, r0	; 63
    163e:	df 91       	pop	r29
    1640:	cf 91       	pop	r28
    1642:	1f 91       	pop	r17
    1644:	0f 91       	pop	r16
    1646:	ff 90       	pop	r15
    1648:	ef 90       	pop	r14
    164a:	df 90       	pop	r13
    164c:	08 95       	ret

0000164e <vTaskDelay>:
    164e:	cf 93       	push	r28
    1650:	df 93       	push	r29
    1652:	ec 01       	movw	r28, r24
    1654:	89 2b       	or	r24, r25
    1656:	b1 f0       	breq	.+44     	; 0x1684 <vTaskDelay+0x36>
    1658:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <vTaskSuspendAll>
    165c:	80 91 2b 07 	lds	r24, 0x072B	; 0x80072b <xTickCount>
    1660:	90 91 2c 07 	lds	r25, 0x072C	; 0x80072c <xTickCount+0x1>
    1664:	c8 0f       	add	r28, r24
    1666:	d9 1f       	adc	r29, r25
    1668:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <pxCurrentTCB>
    166c:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1670:	02 96       	adiw	r24, 0x02	; 2
    1672:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    1676:	ce 01       	movw	r24, r28
    1678:	0e 94 b9 07 	call	0xf72	; 0xf72 <prvAddCurrentTaskToDelayedList>
    167c:	0e 94 a5 0a 	call	0x154a	; 0x154a <xTaskResumeAll>
    1680:	81 11       	cpse	r24, r1
    1682:	02 c0       	rjmp	.+4      	; 0x1688 <vTaskDelay+0x3a>
    1684:	0e 94 ab 03 	call	0x756	; 0x756 <vPortYield>
    1688:	df 91       	pop	r29
    168a:	cf 91       	pop	r28
    168c:	08 95       	ret

0000168e <prvIdleTask>:
    168e:	0a e3       	ldi	r16, 0x3A	; 58
    1690:	17 e0       	ldi	r17, 0x07	; 7
    1692:	0f 2e       	mov	r0, r31
    1694:	f2 e6       	ldi	r31, 0x62	; 98
    1696:	ef 2e       	mov	r14, r31
    1698:	f7 e0       	ldi	r31, 0x07	; 7
    169a:	ff 2e       	mov	r15, r31
    169c:	f0 2d       	mov	r31, r0
    169e:	29 c0       	rjmp	.+82     	; 0x16f2 <prvIdleTask+0x64>
    16a0:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <vTaskSuspendAll>
    16a4:	d8 01       	movw	r26, r16
    16a6:	cc 91       	ld	r28, X
    16a8:	0e 94 a5 0a 	call	0x154a	; 0x154a <xTaskResumeAll>
    16ac:	cc 23       	and	r28, r28
    16ae:	09 f1       	breq	.+66     	; 0x16f2 <prvIdleTask+0x64>
    16b0:	0f b6       	in	r0, 0x3f	; 63
    16b2:	f8 94       	cli
    16b4:	0f 92       	push	r0
    16b6:	d8 01       	movw	r26, r16
    16b8:	15 96       	adiw	r26, 0x05	; 5
    16ba:	ed 91       	ld	r30, X+
    16bc:	fc 91       	ld	r31, X
    16be:	16 97       	sbiw	r26, 0x06	; 6
    16c0:	c6 81       	ldd	r28, Z+6	; 0x06
    16c2:	d7 81       	ldd	r29, Z+7	; 0x07
    16c4:	ce 01       	movw	r24, r28
    16c6:	02 96       	adiw	r24, 0x02	; 2
    16c8:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    16cc:	80 91 2d 07 	lds	r24, 0x072D	; 0x80072d <uxCurrentNumberOfTasks>
    16d0:	81 50       	subi	r24, 0x01	; 1
    16d2:	80 93 2d 07 	sts	0x072D, r24	; 0x80072d <uxCurrentNumberOfTasks>
    16d6:	80 91 39 07 	lds	r24, 0x0739	; 0x800739 <uxTasksDeleted>
    16da:	81 50       	subi	r24, 0x01	; 1
    16dc:	80 93 39 07 	sts	0x0739, r24	; 0x800739 <uxTasksDeleted>
    16e0:	0f 90       	pop	r0
    16e2:	0f be       	out	0x3f, r0	; 63
    16e4:	8f 89       	ldd	r24, Y+23	; 0x17
    16e6:	98 8d       	ldd	r25, Y+24	; 0x18
    16e8:	0e 94 fd 04 	call	0x9fa	; 0x9fa <vPortFree>
    16ec:	ce 01       	movw	r24, r28
    16ee:	0e 94 fd 04 	call	0x9fa	; 0x9fa <vPortFree>
    16f2:	80 91 39 07 	lds	r24, 0x0739	; 0x800739 <uxTasksDeleted>
    16f6:	81 11       	cpse	r24, r1
    16f8:	d3 cf       	rjmp	.-90     	; 0x16a0 <prvIdleTask+0x12>
    16fa:	f7 01       	movw	r30, r14
    16fc:	80 81       	ld	r24, Z
    16fe:	82 30       	cpi	r24, 0x02	; 2
    1700:	c0 f3       	brcs	.-16     	; 0x16f2 <prvIdleTask+0x64>
    1702:	0e 94 ab 03 	call	0x756	; 0x756 <vPortYield>
    1706:	f5 cf       	rjmp	.-22     	; 0x16f2 <prvIdleTask+0x64>

00001708 <vTaskSwitchContext>:
    1708:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    170c:	88 23       	and	r24, r24
    170e:	21 f0       	breq	.+8      	; 0x1718 <vTaskSwitchContext+0x10>
    1710:	81 e0       	ldi	r24, 0x01	; 1
    1712:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <xYieldPending>
    1716:	08 95       	ret
    1718:	10 92 27 07 	sts	0x0727, r1	; 0x800727 <xYieldPending>
    171c:	80 91 2a 07 	lds	r24, 0x072A	; 0x80072a <uxTopReadyPriority>
    1720:	90 e0       	ldi	r25, 0x00	; 0
    1722:	fc 01       	movw	r30, r24
    1724:	ee 0f       	add	r30, r30
    1726:	ff 1f       	adc	r31, r31
    1728:	ee 0f       	add	r30, r30
    172a:	ff 1f       	adc	r31, r31
    172c:	ee 0f       	add	r30, r30
    172e:	ff 1f       	adc	r31, r31
    1730:	8e 0f       	add	r24, r30
    1732:	9f 1f       	adc	r25, r31
    1734:	fc 01       	movw	r30, r24
    1736:	ee 59       	subi	r30, 0x9E	; 158
    1738:	f8 4f       	sbci	r31, 0xF8	; 248
    173a:	80 81       	ld	r24, Z
    173c:	81 11       	cpse	r24, r1
    173e:	17 c0       	rjmp	.+46     	; 0x176e <vTaskSwitchContext+0x66>
    1740:	80 91 2a 07 	lds	r24, 0x072A	; 0x80072a <uxTopReadyPriority>
    1744:	81 50       	subi	r24, 0x01	; 1
    1746:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    174a:	80 91 2a 07 	lds	r24, 0x072A	; 0x80072a <uxTopReadyPriority>
    174e:	90 e0       	ldi	r25, 0x00	; 0
    1750:	fc 01       	movw	r30, r24
    1752:	ee 0f       	add	r30, r30
    1754:	ff 1f       	adc	r31, r31
    1756:	ee 0f       	add	r30, r30
    1758:	ff 1f       	adc	r31, r31
    175a:	ee 0f       	add	r30, r30
    175c:	ff 1f       	adc	r31, r31
    175e:	8e 0f       	add	r24, r30
    1760:	9f 1f       	adc	r25, r31
    1762:	fc 01       	movw	r30, r24
    1764:	ee 59       	subi	r30, 0x9E	; 158
    1766:	f8 4f       	sbci	r31, 0xF8	; 248
    1768:	80 81       	ld	r24, Z
    176a:	88 23       	and	r24, r24
    176c:	49 f3       	breq	.-46     	; 0x1740 <vTaskSwitchContext+0x38>
    176e:	80 91 2a 07 	lds	r24, 0x072A	; 0x80072a <uxTopReadyPriority>
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	9c 01       	movw	r18, r24
    1776:	22 0f       	add	r18, r18
    1778:	33 1f       	adc	r19, r19
    177a:	22 0f       	add	r18, r18
    177c:	33 1f       	adc	r19, r19
    177e:	22 0f       	add	r18, r18
    1780:	33 1f       	adc	r19, r19
    1782:	28 0f       	add	r18, r24
    1784:	39 1f       	adc	r19, r25
    1786:	d9 01       	movw	r26, r18
    1788:	ae 59       	subi	r26, 0x9E	; 158
    178a:	b8 4f       	sbci	r27, 0xF8	; 248
    178c:	11 96       	adiw	r26, 0x01	; 1
    178e:	ed 91       	ld	r30, X+
    1790:	fc 91       	ld	r31, X
    1792:	12 97       	sbiw	r26, 0x02	; 2
    1794:	02 80       	ldd	r0, Z+2	; 0x02
    1796:	f3 81       	ldd	r31, Z+3	; 0x03
    1798:	e0 2d       	mov	r30, r0
    179a:	12 96       	adiw	r26, 0x02	; 2
    179c:	fc 93       	st	X, r31
    179e:	ee 93       	st	-X, r30
    17a0:	11 97       	sbiw	r26, 0x01	; 1
    17a2:	2b 59       	subi	r18, 0x9B	; 155
    17a4:	38 4f       	sbci	r19, 0xF8	; 248
    17a6:	e2 17       	cp	r30, r18
    17a8:	f3 07       	cpc	r31, r19
    17aa:	29 f4       	brne	.+10     	; 0x17b6 <vTaskSwitchContext+0xae>
    17ac:	22 81       	ldd	r18, Z+2	; 0x02
    17ae:	33 81       	ldd	r19, Z+3	; 0x03
    17b0:	fd 01       	movw	r30, r26
    17b2:	32 83       	std	Z+2, r19	; 0x02
    17b4:	21 83       	std	Z+1, r18	; 0x01
    17b6:	fc 01       	movw	r30, r24
    17b8:	ee 0f       	add	r30, r30
    17ba:	ff 1f       	adc	r31, r31
    17bc:	ee 0f       	add	r30, r30
    17be:	ff 1f       	adc	r31, r31
    17c0:	ee 0f       	add	r30, r30
    17c2:	ff 1f       	adc	r31, r31
    17c4:	8e 0f       	add	r24, r30
    17c6:	9f 1f       	adc	r25, r31
    17c8:	fc 01       	movw	r30, r24
    17ca:	ee 59       	subi	r30, 0x9E	; 158
    17cc:	f8 4f       	sbci	r31, 0xF8	; 248
    17ce:	01 80       	ldd	r0, Z+1	; 0x01
    17d0:	f2 81       	ldd	r31, Z+2	; 0x02
    17d2:	e0 2d       	mov	r30, r0
    17d4:	86 81       	ldd	r24, Z+6	; 0x06
    17d6:	97 81       	ldd	r25, Z+7	; 0x07
    17d8:	90 93 87 07 	sts	0x0787, r25	; 0x800787 <pxCurrentTCB+0x1>
    17dc:	80 93 86 07 	sts	0x0786, r24	; 0x800786 <pxCurrentTCB>
    17e0:	08 95       	ret

000017e2 <vTaskSuspend>:
    17e2:	0f 93       	push	r16
    17e4:	1f 93       	push	r17
    17e6:	cf 93       	push	r28
    17e8:	df 93       	push	r29
    17ea:	ec 01       	movw	r28, r24
    17ec:	0f b6       	in	r0, 0x3f	; 63
    17ee:	f8 94       	cli
    17f0:	0f 92       	push	r0
    17f2:	89 2b       	or	r24, r25
    17f4:	21 f4       	brne	.+8      	; 0x17fe <vTaskSuspend+0x1c>
    17f6:	c0 91 86 07 	lds	r28, 0x0786	; 0x800786 <pxCurrentTCB>
    17fa:	d0 91 87 07 	lds	r29, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    17fe:	8e 01       	movw	r16, r28
    1800:	0e 5f       	subi	r16, 0xFE	; 254
    1802:	1f 4f       	sbci	r17, 0xFF	; 255
    1804:	c8 01       	movw	r24, r16
    1806:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    180a:	8c 89       	ldd	r24, Y+20	; 0x14
    180c:	9d 89       	ldd	r25, Y+21	; 0x15
    180e:	89 2b       	or	r24, r25
    1810:	21 f0       	breq	.+8      	; 0x181a <vTaskSuspend+0x38>
    1812:	ce 01       	movw	r24, r28
    1814:	0c 96       	adiw	r24, 0x0c	; 12
    1816:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    181a:	b8 01       	movw	r22, r16
    181c:	80 e3       	ldi	r24, 0x30	; 48
    181e:	97 e0       	ldi	r25, 0x07	; 7
    1820:	0e 94 8d 02 	call	0x51a	; 0x51a <vListInsertEnd>
    1824:	0f 90       	pop	r0
    1826:	0f be       	out	0x3f, r0	; 63
    1828:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <pxCurrentTCB>
    182c:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1830:	c8 17       	cp	r28, r24
    1832:	d9 07       	cpc	r29, r25
    1834:	a9 f4       	brne	.+42     	; 0x1860 <vTaskSuspend+0x7e>
    1836:	80 91 29 07 	lds	r24, 0x0729	; 0x800729 <xSchedulerRunning>
    183a:	88 23       	and	r24, r24
    183c:	19 f0       	breq	.+6      	; 0x1844 <vTaskSuspend+0x62>
    183e:	0e 94 ab 03 	call	0x756	; 0x756 <vPortYield>
    1842:	19 c0       	rjmp	.+50     	; 0x1876 <vTaskSuspend+0x94>
    1844:	80 91 2d 07 	lds	r24, 0x072D	; 0x80072d <uxCurrentNumberOfTasks>
    1848:	90 91 30 07 	lds	r25, 0x0730	; 0x800730 <xSuspendedTaskList>
    184c:	98 13       	cpse	r25, r24
    184e:	05 c0       	rjmp	.+10     	; 0x185a <vTaskSuspend+0x78>
    1850:	10 92 87 07 	sts	0x0787, r1	; 0x800787 <pxCurrentTCB+0x1>
    1854:	10 92 86 07 	sts	0x0786, r1	; 0x800786 <pxCurrentTCB>
    1858:	0e c0       	rjmp	.+28     	; 0x1876 <vTaskSuspend+0x94>
    185a:	0e 94 84 0b 	call	0x1708	; 0x1708 <vTaskSwitchContext>
    185e:	0b c0       	rjmp	.+22     	; 0x1876 <vTaskSuspend+0x94>
    1860:	80 91 29 07 	lds	r24, 0x0729	; 0x800729 <xSchedulerRunning>
    1864:	88 23       	and	r24, r24
    1866:	39 f0       	breq	.+14     	; 0x1876 <vTaskSuspend+0x94>
    1868:	0f b6       	in	r0, 0x3f	; 63
    186a:	f8 94       	cli
    186c:	0f 92       	push	r0
    186e:	0e 94 9a 07 	call	0xf34	; 0xf34 <prvResetNextTaskUnblockTime>
    1872:	0f 90       	pop	r0
    1874:	0f be       	out	0x3f, r0	; 63
    1876:	df 91       	pop	r29
    1878:	cf 91       	pop	r28
    187a:	1f 91       	pop	r17
    187c:	0f 91       	pop	r16
    187e:	08 95       	ret

00001880 <vTaskPlaceOnEventList>:
    1880:	cf 93       	push	r28
    1882:	df 93       	push	r29
    1884:	eb 01       	movw	r28, r22
    1886:	60 91 86 07 	lds	r22, 0x0786	; 0x800786 <pxCurrentTCB>
    188a:	70 91 87 07 	lds	r23, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    188e:	64 5f       	subi	r22, 0xF4	; 244
    1890:	7f 4f       	sbci	r23, 0xFF	; 255
    1892:	0e 94 ae 02 	call	0x55c	; 0x55c <vListInsert>
    1896:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <pxCurrentTCB>
    189a:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    189e:	02 96       	adiw	r24, 0x02	; 2
    18a0:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    18a4:	cf 3f       	cpi	r28, 0xFF	; 255
    18a6:	8f ef       	ldi	r24, 0xFF	; 255
    18a8:	d8 07       	cpc	r29, r24
    18aa:	59 f4       	brne	.+22     	; 0x18c2 <vTaskPlaceOnEventList+0x42>
    18ac:	60 91 86 07 	lds	r22, 0x0786	; 0x800786 <pxCurrentTCB>
    18b0:	70 91 87 07 	lds	r23, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    18b4:	6e 5f       	subi	r22, 0xFE	; 254
    18b6:	7f 4f       	sbci	r23, 0xFF	; 255
    18b8:	80 e3       	ldi	r24, 0x30	; 48
    18ba:	97 e0       	ldi	r25, 0x07	; 7
    18bc:	0e 94 8d 02 	call	0x51a	; 0x51a <vListInsertEnd>
    18c0:	08 c0       	rjmp	.+16     	; 0x18d2 <vTaskPlaceOnEventList+0x52>
    18c2:	80 91 2b 07 	lds	r24, 0x072B	; 0x80072b <xTickCount>
    18c6:	90 91 2c 07 	lds	r25, 0x072C	; 0x80072c <xTickCount+0x1>
    18ca:	8c 0f       	add	r24, r28
    18cc:	9d 1f       	adc	r25, r29
    18ce:	0e 94 b9 07 	call	0xf72	; 0xf72 <prvAddCurrentTaskToDelayedList>
    18d2:	df 91       	pop	r29
    18d4:	cf 91       	pop	r28
    18d6:	08 95       	ret

000018d8 <xTaskRemoveFromEventList>:
    18d8:	0f 93       	push	r16
    18da:	1f 93       	push	r17
    18dc:	cf 93       	push	r28
    18de:	df 93       	push	r29
    18e0:	dc 01       	movw	r26, r24
    18e2:	15 96       	adiw	r26, 0x05	; 5
    18e4:	ed 91       	ld	r30, X+
    18e6:	fc 91       	ld	r31, X
    18e8:	16 97       	sbiw	r26, 0x06	; 6
    18ea:	c6 81       	ldd	r28, Z+6	; 0x06
    18ec:	d7 81       	ldd	r29, Z+7	; 0x07
    18ee:	8e 01       	movw	r16, r28
    18f0:	04 5f       	subi	r16, 0xF4	; 244
    18f2:	1f 4f       	sbci	r17, 0xFF	; 255
    18f4:	c8 01       	movw	r24, r16
    18f6:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    18fa:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    18fe:	81 11       	cpse	r24, r1
    1900:	1c c0       	rjmp	.+56     	; 0x193a <xTaskRemoveFromEventList+0x62>
    1902:	0a 50       	subi	r16, 0x0A	; 10
    1904:	11 09       	sbc	r17, r1
    1906:	c8 01       	movw	r24, r16
    1908:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    190c:	8e 89       	ldd	r24, Y+22	; 0x16
    190e:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    1912:	98 17       	cp	r25, r24
    1914:	10 f4       	brcc	.+4      	; 0x191a <xTaskRemoveFromEventList+0x42>
    1916:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    191a:	90 e0       	ldi	r25, 0x00	; 0
    191c:	9c 01       	movw	r18, r24
    191e:	22 0f       	add	r18, r18
    1920:	33 1f       	adc	r19, r19
    1922:	22 0f       	add	r18, r18
    1924:	33 1f       	adc	r19, r19
    1926:	22 0f       	add	r18, r18
    1928:	33 1f       	adc	r19, r19
    192a:	82 0f       	add	r24, r18
    192c:	93 1f       	adc	r25, r19
    192e:	b8 01       	movw	r22, r16
    1930:	8e 59       	subi	r24, 0x9E	; 158
    1932:	98 4f       	sbci	r25, 0xF8	; 248
    1934:	0e 94 8d 02 	call	0x51a	; 0x51a <vListInsertEnd>
    1938:	05 c0       	rjmp	.+10     	; 0x1944 <xTaskRemoveFromEventList+0x6c>
    193a:	b8 01       	movw	r22, r16
    193c:	83 e4       	ldi	r24, 0x43	; 67
    193e:	97 e0       	ldi	r25, 0x07	; 7
    1940:	0e 94 8d 02 	call	0x51a	; 0x51a <vListInsertEnd>
    1944:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    1948:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    194c:	9e 89       	ldd	r25, Y+22	; 0x16
    194e:	86 89       	ldd	r24, Z+22	; 0x16
    1950:	89 17       	cp	r24, r25
    1952:	20 f4       	brcc	.+8      	; 0x195c <xTaskRemoveFromEventList+0x84>
    1954:	81 e0       	ldi	r24, 0x01	; 1
    1956:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <xYieldPending>
    195a:	01 c0       	rjmp	.+2      	; 0x195e <xTaskRemoveFromEventList+0x86>
    195c:	80 e0       	ldi	r24, 0x00	; 0
    195e:	df 91       	pop	r29
    1960:	cf 91       	pop	r28
    1962:	1f 91       	pop	r17
    1964:	0f 91       	pop	r16
    1966:	08 95       	ret

00001968 <vTaskSetTimeOutState>:
    1968:	20 91 26 07 	lds	r18, 0x0726	; 0x800726 <xNumOfOverflows>
    196c:	fc 01       	movw	r30, r24
    196e:	20 83       	st	Z, r18
    1970:	20 91 2b 07 	lds	r18, 0x072B	; 0x80072b <xTickCount>
    1974:	30 91 2c 07 	lds	r19, 0x072C	; 0x80072c <xTickCount+0x1>
    1978:	32 83       	std	Z+2, r19	; 0x02
    197a:	21 83       	std	Z+1, r18	; 0x01
    197c:	08 95       	ret

0000197e <xTaskCheckForTimeOut>:
    197e:	0f b6       	in	r0, 0x3f	; 63
    1980:	f8 94       	cli
    1982:	0f 92       	push	r0
    1984:	40 91 2b 07 	lds	r20, 0x072B	; 0x80072b <xTickCount>
    1988:	50 91 2c 07 	lds	r21, 0x072C	; 0x80072c <xTickCount+0x1>
    198c:	db 01       	movw	r26, r22
    198e:	2d 91       	ld	r18, X+
    1990:	3c 91       	ld	r19, X
    1992:	2f 3f       	cpi	r18, 0xFF	; 255
    1994:	bf ef       	ldi	r27, 0xFF	; 255
    1996:	3b 07       	cpc	r19, r27
    1998:	19 f1       	breq	.+70     	; 0x19e0 <xTaskCheckForTimeOut+0x62>
    199a:	e0 91 26 07 	lds	r30, 0x0726	; 0x800726 <xNumOfOverflows>
    199e:	dc 01       	movw	r26, r24
    19a0:	fc 91       	ld	r31, X
    19a2:	fe 17       	cp	r31, r30
    19a4:	39 f0       	breq	.+14     	; 0x19b4 <xTaskCheckForTimeOut+0x36>
    19a6:	11 96       	adiw	r26, 0x01	; 1
    19a8:	ed 91       	ld	r30, X+
    19aa:	fc 91       	ld	r31, X
    19ac:	12 97       	sbiw	r26, 0x02	; 2
    19ae:	4e 17       	cp	r20, r30
    19b0:	5f 07       	cpc	r21, r31
    19b2:	c0 f4       	brcc	.+48     	; 0x19e4 <xTaskCheckForTimeOut+0x66>
    19b4:	dc 01       	movw	r26, r24
    19b6:	11 96       	adiw	r26, 0x01	; 1
    19b8:	ed 91       	ld	r30, X+
    19ba:	fc 91       	ld	r31, X
    19bc:	12 97       	sbiw	r26, 0x02	; 2
    19be:	da 01       	movw	r26, r20
    19c0:	ae 1b       	sub	r26, r30
    19c2:	bf 0b       	sbc	r27, r31
    19c4:	a2 17       	cp	r26, r18
    19c6:	b3 07       	cpc	r27, r19
    19c8:	78 f4       	brcc	.+30     	; 0x19e8 <xTaskCheckForTimeOut+0x6a>
    19ca:	db 01       	movw	r26, r22
    19cc:	e4 1b       	sub	r30, r20
    19ce:	f5 0b       	sbc	r31, r21
    19d0:	2e 0f       	add	r18, r30
    19d2:	3f 1f       	adc	r19, r31
    19d4:	2d 93       	st	X+, r18
    19d6:	3c 93       	st	X, r19
    19d8:	0e 94 b4 0c 	call	0x1968	; 0x1968 <vTaskSetTimeOutState>
    19dc:	80 e0       	ldi	r24, 0x00	; 0
    19de:	05 c0       	rjmp	.+10     	; 0x19ea <xTaskCheckForTimeOut+0x6c>
    19e0:	80 e0       	ldi	r24, 0x00	; 0
    19e2:	03 c0       	rjmp	.+6      	; 0x19ea <xTaskCheckForTimeOut+0x6c>
    19e4:	81 e0       	ldi	r24, 0x01	; 1
    19e6:	01 c0       	rjmp	.+2      	; 0x19ea <xTaskCheckForTimeOut+0x6c>
    19e8:	81 e0       	ldi	r24, 0x01	; 1
    19ea:	0f 90       	pop	r0
    19ec:	0f be       	out	0x3f, r0	; 63
    19ee:	08 95       	ret

000019f0 <vTaskMissedYield>:
    19f0:	81 e0       	ldi	r24, 0x01	; 1
    19f2:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <xYieldPending>
    19f6:	08 95       	ret

000019f8 <vTaskPriorityInherit>:
    19f8:	0f 93       	push	r16
    19fa:	1f 93       	push	r17
    19fc:	cf 93       	push	r28
    19fe:	df 93       	push	r29
    1a00:	fc 01       	movw	r30, r24
    1a02:	89 2b       	or	r24, r25
    1a04:	09 f4       	brne	.+2      	; 0x1a08 <vTaskPriorityInherit+0x10>
    1a06:	55 c0       	rjmp	.+170    	; 0x1ab2 <vTaskPriorityInherit+0xba>
    1a08:	26 89       	ldd	r18, Z+22	; 0x16
    1a0a:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
    1a0e:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1a12:	56 96       	adiw	r26, 0x16	; 22
    1a14:	8c 91       	ld	r24, X
    1a16:	28 17       	cp	r18, r24
    1a18:	08 f0       	brcs	.+2      	; 0x1a1c <vTaskPriorityInherit+0x24>
    1a1a:	4b c0       	rjmp	.+150    	; 0x1ab2 <vTaskPriorityInherit+0xba>
    1a1c:	84 85       	ldd	r24, Z+12	; 0x0c
    1a1e:	95 85       	ldd	r25, Z+13	; 0x0d
    1a20:	99 23       	and	r25, r25
    1a22:	64 f0       	brlt	.+24     	; 0x1a3c <vTaskPriorityInherit+0x44>
    1a24:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
    1a28:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1a2c:	56 96       	adiw	r26, 0x16	; 22
    1a2e:	3c 91       	ld	r19, X
    1a30:	84 e0       	ldi	r24, 0x04	; 4
    1a32:	90 e0       	ldi	r25, 0x00	; 0
    1a34:	83 1b       	sub	r24, r19
    1a36:	91 09       	sbc	r25, r1
    1a38:	95 87       	std	Z+13, r25	; 0x0d
    1a3a:	84 87       	std	Z+12, r24	; 0x0c
    1a3c:	30 e0       	ldi	r19, 0x00	; 0
    1a3e:	c9 01       	movw	r24, r18
    1a40:	88 0f       	add	r24, r24
    1a42:	99 1f       	adc	r25, r25
    1a44:	88 0f       	add	r24, r24
    1a46:	99 1f       	adc	r25, r25
    1a48:	88 0f       	add	r24, r24
    1a4a:	99 1f       	adc	r25, r25
    1a4c:	28 0f       	add	r18, r24
    1a4e:	39 1f       	adc	r19, r25
    1a50:	2e 59       	subi	r18, 0x9E	; 158
    1a52:	38 4f       	sbci	r19, 0xF8	; 248
    1a54:	82 85       	ldd	r24, Z+10	; 0x0a
    1a56:	93 85       	ldd	r25, Z+11	; 0x0b
    1a58:	82 17       	cp	r24, r18
    1a5a:	93 07       	cpc	r25, r19
    1a5c:	19 f5       	brne	.+70     	; 0x1aa4 <vTaskPriorityInherit+0xac>
    1a5e:	8f 01       	movw	r16, r30
    1a60:	ef 01       	movw	r28, r30
    1a62:	22 96       	adiw	r28, 0x02	; 2
    1a64:	ce 01       	movw	r24, r28
    1a66:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    1a6a:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    1a6e:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1a72:	86 89       	ldd	r24, Z+22	; 0x16
    1a74:	f8 01       	movw	r30, r16
    1a76:	86 8b       	std	Z+22, r24	; 0x16
    1a78:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    1a7c:	98 17       	cp	r25, r24
    1a7e:	10 f4       	brcc	.+4      	; 0x1a84 <vTaskPriorityInherit+0x8c>
    1a80:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    1a84:	90 e0       	ldi	r25, 0x00	; 0
    1a86:	9c 01       	movw	r18, r24
    1a88:	22 0f       	add	r18, r18
    1a8a:	33 1f       	adc	r19, r19
    1a8c:	22 0f       	add	r18, r18
    1a8e:	33 1f       	adc	r19, r19
    1a90:	22 0f       	add	r18, r18
    1a92:	33 1f       	adc	r19, r19
    1a94:	82 0f       	add	r24, r18
    1a96:	93 1f       	adc	r25, r19
    1a98:	be 01       	movw	r22, r28
    1a9a:	8e 59       	subi	r24, 0x9E	; 158
    1a9c:	98 4f       	sbci	r25, 0xF8	; 248
    1a9e:	0e 94 8d 02 	call	0x51a	; 0x51a <vListInsertEnd>
    1aa2:	07 c0       	rjmp	.+14     	; 0x1ab2 <vTaskPriorityInherit+0xba>
    1aa4:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
    1aa8:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1aac:	56 96       	adiw	r26, 0x16	; 22
    1aae:	8c 91       	ld	r24, X
    1ab0:	86 8b       	std	Z+22, r24	; 0x16
    1ab2:	df 91       	pop	r29
    1ab4:	cf 91       	pop	r28
    1ab6:	1f 91       	pop	r17
    1ab8:	0f 91       	pop	r16
    1aba:	08 95       	ret

00001abc <xTaskPriorityDisinherit>:
    1abc:	0f 93       	push	r16
    1abe:	1f 93       	push	r17
    1ac0:	cf 93       	push	r28
    1ac2:	df 93       	push	r29
    1ac4:	fc 01       	movw	r30, r24
    1ac6:	89 2b       	or	r24, r25
    1ac8:	79 f1       	breq	.+94     	; 0x1b28 <xTaskPriorityDisinherit+0x6c>
    1aca:	82 a1       	ldd	r24, Z+34	; 0x22
    1acc:	81 50       	subi	r24, 0x01	; 1
    1ace:	82 a3       	std	Z+34, r24	; 0x22
    1ad0:	26 89       	ldd	r18, Z+22	; 0x16
    1ad2:	91 a1       	ldd	r25, Z+33	; 0x21
    1ad4:	29 17       	cp	r18, r25
    1ad6:	51 f1       	breq	.+84     	; 0x1b2c <xTaskPriorityDisinherit+0x70>
    1ad8:	81 11       	cpse	r24, r1
    1ada:	2a c0       	rjmp	.+84     	; 0x1b30 <xTaskPriorityDisinherit+0x74>
    1adc:	ef 01       	movw	r28, r30
    1ade:	8f 01       	movw	r16, r30
    1ae0:	0e 5f       	subi	r16, 0xFE	; 254
    1ae2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ae4:	c8 01       	movw	r24, r16
    1ae6:	0e 94 df 02 	call	0x5be	; 0x5be <uxListRemove>
    1aea:	89 a1       	ldd	r24, Y+33	; 0x21
    1aec:	8e 8b       	std	Y+22, r24	; 0x16
    1aee:	24 e0       	ldi	r18, 0x04	; 4
    1af0:	30 e0       	ldi	r19, 0x00	; 0
    1af2:	28 1b       	sub	r18, r24
    1af4:	31 09       	sbc	r19, r1
    1af6:	3d 87       	std	Y+13, r19	; 0x0d
    1af8:	2c 87       	std	Y+12, r18	; 0x0c
    1afa:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    1afe:	98 17       	cp	r25, r24
    1b00:	10 f4       	brcc	.+4      	; 0x1b06 <xTaskPriorityDisinherit+0x4a>
    1b02:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	9c 01       	movw	r18, r24
    1b0a:	22 0f       	add	r18, r18
    1b0c:	33 1f       	adc	r19, r19
    1b0e:	22 0f       	add	r18, r18
    1b10:	33 1f       	adc	r19, r19
    1b12:	22 0f       	add	r18, r18
    1b14:	33 1f       	adc	r19, r19
    1b16:	82 0f       	add	r24, r18
    1b18:	93 1f       	adc	r25, r19
    1b1a:	b8 01       	movw	r22, r16
    1b1c:	8e 59       	subi	r24, 0x9E	; 158
    1b1e:	98 4f       	sbci	r25, 0xF8	; 248
    1b20:	0e 94 8d 02 	call	0x51a	; 0x51a <vListInsertEnd>
    1b24:	81 e0       	ldi	r24, 0x01	; 1
    1b26:	05 c0       	rjmp	.+10     	; 0x1b32 <xTaskPriorityDisinherit+0x76>
    1b28:	80 e0       	ldi	r24, 0x00	; 0
    1b2a:	03 c0       	rjmp	.+6      	; 0x1b32 <xTaskPriorityDisinherit+0x76>
    1b2c:	80 e0       	ldi	r24, 0x00	; 0
    1b2e:	01 c0       	rjmp	.+2      	; 0x1b32 <xTaskPriorityDisinherit+0x76>
    1b30:	80 e0       	ldi	r24, 0x00	; 0
    1b32:	df 91       	pop	r29
    1b34:	cf 91       	pop	r28
    1b36:	1f 91       	pop	r17
    1b38:	0f 91       	pop	r16
    1b3a:	08 95       	ret

00001b3c <pvTaskIncrementMutexHeldCount>:
    1b3c:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <pxCurrentTCB>
    1b40:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1b44:	89 2b       	or	r24, r25
    1b46:	39 f0       	breq	.+14     	; 0x1b56 <pvTaskIncrementMutexHeldCount+0x1a>
    1b48:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    1b4c:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1b50:	82 a1       	ldd	r24, Z+34	; 0x22
    1b52:	8f 5f       	subi	r24, 0xFF	; 255
    1b54:	82 a3       	std	Z+34, r24	; 0x22
    1b56:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <pxCurrentTCB>
    1b5a:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1b5e:	08 95       	ret

00001b60 <attachInterrupt>:
    1b60:	82 30       	cpi	r24, 0x02	; 2
    1b62:	00 f5       	brcc	.+64     	; 0x1ba4 <attachInterrupt+0x44>
    1b64:	e8 2f       	mov	r30, r24
    1b66:	f0 e0       	ldi	r31, 0x00	; 0
    1b68:	ee 0f       	add	r30, r30
    1b6a:	ff 1f       	adc	r31, r31
    1b6c:	e8 57       	subi	r30, 0x78	; 120
    1b6e:	f8 4f       	sbci	r31, 0xF8	; 248
    1b70:	71 83       	std	Z+1, r23	; 0x01
    1b72:	60 83       	st	Z, r22
    1b74:	88 23       	and	r24, r24
    1b76:	19 f0       	breq	.+6      	; 0x1b7e <attachInterrupt+0x1e>
    1b78:	81 30       	cpi	r24, 0x01	; 1
    1b7a:	49 f0       	breq	.+18     	; 0x1b8e <attachInterrupt+0x2e>
    1b7c:	08 95       	ret
    1b7e:	e9 e6       	ldi	r30, 0x69	; 105
    1b80:	f0 e0       	ldi	r31, 0x00	; 0
    1b82:	80 81       	ld	r24, Z
    1b84:	8c 7f       	andi	r24, 0xFC	; 252
    1b86:	48 2b       	or	r20, r24
    1b88:	40 83       	st	Z, r20
    1b8a:	e8 9a       	sbi	0x1d, 0	; 29
    1b8c:	08 95       	ret
    1b8e:	e9 e6       	ldi	r30, 0x69	; 105
    1b90:	f0 e0       	ldi	r31, 0x00	; 0
    1b92:	80 81       	ld	r24, Z
    1b94:	83 7f       	andi	r24, 0xF3	; 243
    1b96:	44 0f       	add	r20, r20
    1b98:	55 1f       	adc	r21, r21
    1b9a:	44 0f       	add	r20, r20
    1b9c:	55 1f       	adc	r21, r21
    1b9e:	48 2b       	or	r20, r24
    1ba0:	40 83       	st	Z, r20
    1ba2:	e9 9a       	sbi	0x1d, 1	; 29
    1ba4:	08 95       	ret

00001ba6 <__vector_1>:
    1ba6:	1f 92       	push	r1
    1ba8:	0f 92       	push	r0
    1baa:	0f b6       	in	r0, 0x3f	; 63
    1bac:	0f 92       	push	r0
    1bae:	11 24       	eor	r1, r1
    1bb0:	2f 93       	push	r18
    1bb2:	3f 93       	push	r19
    1bb4:	4f 93       	push	r20
    1bb6:	5f 93       	push	r21
    1bb8:	6f 93       	push	r22
    1bba:	7f 93       	push	r23
    1bbc:	8f 93       	push	r24
    1bbe:	9f 93       	push	r25
    1bc0:	af 93       	push	r26
    1bc2:	bf 93       	push	r27
    1bc4:	ef 93       	push	r30
    1bc6:	ff 93       	push	r31
    1bc8:	80 91 88 07 	lds	r24, 0x0788	; 0x800788 <intFunc>
    1bcc:	90 91 89 07 	lds	r25, 0x0789	; 0x800789 <intFunc+0x1>
    1bd0:	89 2b       	or	r24, r25
    1bd2:	29 f0       	breq	.+10     	; 0x1bde <__vector_1+0x38>
    1bd4:	e0 91 88 07 	lds	r30, 0x0788	; 0x800788 <intFunc>
    1bd8:	f0 91 89 07 	lds	r31, 0x0789	; 0x800789 <intFunc+0x1>
    1bdc:	09 95       	icall
    1bde:	ff 91       	pop	r31
    1be0:	ef 91       	pop	r30
    1be2:	bf 91       	pop	r27
    1be4:	af 91       	pop	r26
    1be6:	9f 91       	pop	r25
    1be8:	8f 91       	pop	r24
    1bea:	7f 91       	pop	r23
    1bec:	6f 91       	pop	r22
    1bee:	5f 91       	pop	r21
    1bf0:	4f 91       	pop	r20
    1bf2:	3f 91       	pop	r19
    1bf4:	2f 91       	pop	r18
    1bf6:	0f 90       	pop	r0
    1bf8:	0f be       	out	0x3f, r0	; 63
    1bfa:	0f 90       	pop	r0
    1bfc:	1f 90       	pop	r1
    1bfe:	18 95       	reti

00001c00 <__vector_2>:
    1c00:	1f 92       	push	r1
    1c02:	0f 92       	push	r0
    1c04:	0f b6       	in	r0, 0x3f	; 63
    1c06:	0f 92       	push	r0
    1c08:	11 24       	eor	r1, r1
    1c0a:	2f 93       	push	r18
    1c0c:	3f 93       	push	r19
    1c0e:	4f 93       	push	r20
    1c10:	5f 93       	push	r21
    1c12:	6f 93       	push	r22
    1c14:	7f 93       	push	r23
    1c16:	8f 93       	push	r24
    1c18:	9f 93       	push	r25
    1c1a:	af 93       	push	r26
    1c1c:	bf 93       	push	r27
    1c1e:	ef 93       	push	r30
    1c20:	ff 93       	push	r31
    1c22:	80 91 8a 07 	lds	r24, 0x078A	; 0x80078a <intFunc+0x2>
    1c26:	90 91 8b 07 	lds	r25, 0x078B	; 0x80078b <intFunc+0x3>
    1c2a:	89 2b       	or	r24, r25
    1c2c:	29 f0       	breq	.+10     	; 0x1c38 <__vector_2+0x38>
    1c2e:	e0 91 8a 07 	lds	r30, 0x078A	; 0x80078a <intFunc+0x2>
    1c32:	f0 91 8b 07 	lds	r31, 0x078B	; 0x80078b <intFunc+0x3>
    1c36:	09 95       	icall
    1c38:	ff 91       	pop	r31
    1c3a:	ef 91       	pop	r30
    1c3c:	bf 91       	pop	r27
    1c3e:	af 91       	pop	r26
    1c40:	9f 91       	pop	r25
    1c42:	8f 91       	pop	r24
    1c44:	7f 91       	pop	r23
    1c46:	6f 91       	pop	r22
    1c48:	5f 91       	pop	r21
    1c4a:	4f 91       	pop	r20
    1c4c:	3f 91       	pop	r19
    1c4e:	2f 91       	pop	r18
    1c50:	0f 90       	pop	r0
    1c52:	0f be       	out	0x3f, r0	; 63
    1c54:	0f 90       	pop	r0
    1c56:	1f 90       	pop	r1
    1c58:	18 95       	reti

00001c5a <USART_init>:
    1c5a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    1c5e:	87 e6       	ldi	r24, 0x67	; 103
    1c60:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    1c64:	8c e1       	ldi	r24, 0x1C	; 28
    1c66:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1c6a:	86 e0       	ldi	r24, 0x06	; 6
    1c6c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    1c70:	08 95       	ret

00001c72 <USART_send>:
    1c72:	e0 ec       	ldi	r30, 0xC0	; 192
    1c74:	f0 e0       	ldi	r31, 0x00	; 0
    1c76:	90 81       	ld	r25, Z
    1c78:	95 ff       	sbrs	r25, 5
    1c7a:	fd cf       	rjmp	.-6      	; 0x1c76 <USART_send+0x4>
    1c7c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    1c80:	08 95       	ret

00001c82 <USART_sendstr>:
    1c82:	cf 93       	push	r28
    1c84:	df 93       	push	r29
    1c86:	ec 01       	movw	r28, r24
    1c88:	88 81       	ld	r24, Y
    1c8a:	88 23       	and	r24, r24
    1c8c:	31 f0       	breq	.+12     	; 0x1c9a <USART_sendstr+0x18>
    1c8e:	21 96       	adiw	r28, 0x01	; 1
    1c90:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <USART_send>
    1c94:	89 91       	ld	r24, Y+
    1c96:	81 11       	cpse	r24, r1
    1c98:	fb cf       	rjmp	.-10     	; 0x1c90 <USART_sendstr+0xe>
    1c9a:	df 91       	pop	r29
    1c9c:	cf 91       	pop	r28
    1c9e:	08 95       	ret

00001ca0 <__divsf3>:
    1ca0:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <__divsf3x>
    1ca4:	0c 94 4c 0f 	jmp	0x1e98	; 0x1e98 <__fp_round>
    1ca8:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <__fp_pscB>
    1cac:	58 f0       	brcs	.+22     	; 0x1cc4 <__divsf3+0x24>
    1cae:	0e 94 3e 0f 	call	0x1e7c	; 0x1e7c <__fp_pscA>
    1cb2:	40 f0       	brcs	.+16     	; 0x1cc4 <__divsf3+0x24>
    1cb4:	29 f4       	brne	.+10     	; 0x1cc0 <__divsf3+0x20>
    1cb6:	5f 3f       	cpi	r21, 0xFF	; 255
    1cb8:	29 f0       	breq	.+10     	; 0x1cc4 <__divsf3+0x24>
    1cba:	0c 94 35 0f 	jmp	0x1e6a	; 0x1e6a <__fp_inf>
    1cbe:	51 11       	cpse	r21, r1
    1cc0:	0c 94 80 0f 	jmp	0x1f00	; 0x1f00 <__fp_szero>
    1cc4:	0c 94 3b 0f 	jmp	0x1e76	; 0x1e76 <__fp_nan>

00001cc8 <__divsf3x>:
    1cc8:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <__fp_split3>
    1ccc:	68 f3       	brcs	.-38     	; 0x1ca8 <__divsf3+0x8>

00001cce <__divsf3_pse>:
    1cce:	99 23       	and	r25, r25
    1cd0:	b1 f3       	breq	.-20     	; 0x1cbe <__divsf3+0x1e>
    1cd2:	55 23       	and	r21, r21
    1cd4:	91 f3       	breq	.-28     	; 0x1cba <__divsf3+0x1a>
    1cd6:	95 1b       	sub	r25, r21
    1cd8:	55 0b       	sbc	r21, r21
    1cda:	bb 27       	eor	r27, r27
    1cdc:	aa 27       	eor	r26, r26
    1cde:	62 17       	cp	r22, r18
    1ce0:	73 07       	cpc	r23, r19
    1ce2:	84 07       	cpc	r24, r20
    1ce4:	38 f0       	brcs	.+14     	; 0x1cf4 <__divsf3_pse+0x26>
    1ce6:	9f 5f       	subi	r25, 0xFF	; 255
    1ce8:	5f 4f       	sbci	r21, 0xFF	; 255
    1cea:	22 0f       	add	r18, r18
    1cec:	33 1f       	adc	r19, r19
    1cee:	44 1f       	adc	r20, r20
    1cf0:	aa 1f       	adc	r26, r26
    1cf2:	a9 f3       	breq	.-22     	; 0x1cde <__divsf3_pse+0x10>
    1cf4:	35 d0       	rcall	.+106    	; 0x1d60 <__divsf3_pse+0x92>
    1cf6:	0e 2e       	mov	r0, r30
    1cf8:	3a f0       	brmi	.+14     	; 0x1d08 <__divsf3_pse+0x3a>
    1cfa:	e0 e8       	ldi	r30, 0x80	; 128
    1cfc:	32 d0       	rcall	.+100    	; 0x1d62 <__divsf3_pse+0x94>
    1cfe:	91 50       	subi	r25, 0x01	; 1
    1d00:	50 40       	sbci	r21, 0x00	; 0
    1d02:	e6 95       	lsr	r30
    1d04:	00 1c       	adc	r0, r0
    1d06:	ca f7       	brpl	.-14     	; 0x1cfa <__divsf3_pse+0x2c>
    1d08:	2b d0       	rcall	.+86     	; 0x1d60 <__divsf3_pse+0x92>
    1d0a:	fe 2f       	mov	r31, r30
    1d0c:	29 d0       	rcall	.+82     	; 0x1d60 <__divsf3_pse+0x92>
    1d0e:	66 0f       	add	r22, r22
    1d10:	77 1f       	adc	r23, r23
    1d12:	88 1f       	adc	r24, r24
    1d14:	bb 1f       	adc	r27, r27
    1d16:	26 17       	cp	r18, r22
    1d18:	37 07       	cpc	r19, r23
    1d1a:	48 07       	cpc	r20, r24
    1d1c:	ab 07       	cpc	r26, r27
    1d1e:	b0 e8       	ldi	r27, 0x80	; 128
    1d20:	09 f0       	breq	.+2      	; 0x1d24 <__divsf3_pse+0x56>
    1d22:	bb 0b       	sbc	r27, r27
    1d24:	80 2d       	mov	r24, r0
    1d26:	bf 01       	movw	r22, r30
    1d28:	ff 27       	eor	r31, r31
    1d2a:	93 58       	subi	r25, 0x83	; 131
    1d2c:	5f 4f       	sbci	r21, 0xFF	; 255
    1d2e:	3a f0       	brmi	.+14     	; 0x1d3e <__divsf3_pse+0x70>
    1d30:	9e 3f       	cpi	r25, 0xFE	; 254
    1d32:	51 05       	cpc	r21, r1
    1d34:	78 f0       	brcs	.+30     	; 0x1d54 <__divsf3_pse+0x86>
    1d36:	0c 94 35 0f 	jmp	0x1e6a	; 0x1e6a <__fp_inf>
    1d3a:	0c 94 80 0f 	jmp	0x1f00	; 0x1f00 <__fp_szero>
    1d3e:	5f 3f       	cpi	r21, 0xFF	; 255
    1d40:	e4 f3       	brlt	.-8      	; 0x1d3a <__divsf3_pse+0x6c>
    1d42:	98 3e       	cpi	r25, 0xE8	; 232
    1d44:	d4 f3       	brlt	.-12     	; 0x1d3a <__divsf3_pse+0x6c>
    1d46:	86 95       	lsr	r24
    1d48:	77 95       	ror	r23
    1d4a:	67 95       	ror	r22
    1d4c:	b7 95       	ror	r27
    1d4e:	f7 95       	ror	r31
    1d50:	9f 5f       	subi	r25, 0xFF	; 255
    1d52:	c9 f7       	brne	.-14     	; 0x1d46 <__divsf3_pse+0x78>
    1d54:	88 0f       	add	r24, r24
    1d56:	91 1d       	adc	r25, r1
    1d58:	96 95       	lsr	r25
    1d5a:	87 95       	ror	r24
    1d5c:	97 f9       	bld	r25, 7
    1d5e:	08 95       	ret
    1d60:	e1 e0       	ldi	r30, 0x01	; 1
    1d62:	66 0f       	add	r22, r22
    1d64:	77 1f       	adc	r23, r23
    1d66:	88 1f       	adc	r24, r24
    1d68:	bb 1f       	adc	r27, r27
    1d6a:	62 17       	cp	r22, r18
    1d6c:	73 07       	cpc	r23, r19
    1d6e:	84 07       	cpc	r24, r20
    1d70:	ba 07       	cpc	r27, r26
    1d72:	20 f0       	brcs	.+8      	; 0x1d7c <__divsf3_pse+0xae>
    1d74:	62 1b       	sub	r22, r18
    1d76:	73 0b       	sbc	r23, r19
    1d78:	84 0b       	sbc	r24, r20
    1d7a:	ba 0b       	sbc	r27, r26
    1d7c:	ee 1f       	adc	r30, r30
    1d7e:	88 f7       	brcc	.-30     	; 0x1d62 <__divsf3_pse+0x94>
    1d80:	e0 95       	com	r30
    1d82:	08 95       	ret

00001d84 <__fixsfsi>:
    1d84:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <__fixunssfsi>
    1d88:	68 94       	set
    1d8a:	b1 11       	cpse	r27, r1
    1d8c:	0c 94 80 0f 	jmp	0x1f00	; 0x1f00 <__fp_szero>
    1d90:	08 95       	ret

00001d92 <__fixunssfsi>:
    1d92:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__fp_splitA>
    1d96:	88 f0       	brcs	.+34     	; 0x1dba <__fixunssfsi+0x28>
    1d98:	9f 57       	subi	r25, 0x7F	; 127
    1d9a:	98 f0       	brcs	.+38     	; 0x1dc2 <__fixunssfsi+0x30>
    1d9c:	b9 2f       	mov	r27, r25
    1d9e:	99 27       	eor	r25, r25
    1da0:	b7 51       	subi	r27, 0x17	; 23
    1da2:	b0 f0       	brcs	.+44     	; 0x1dd0 <__fixunssfsi+0x3e>
    1da4:	e1 f0       	breq	.+56     	; 0x1dde <__fixunssfsi+0x4c>
    1da6:	66 0f       	add	r22, r22
    1da8:	77 1f       	adc	r23, r23
    1daa:	88 1f       	adc	r24, r24
    1dac:	99 1f       	adc	r25, r25
    1dae:	1a f0       	brmi	.+6      	; 0x1db6 <__fixunssfsi+0x24>
    1db0:	ba 95       	dec	r27
    1db2:	c9 f7       	brne	.-14     	; 0x1da6 <__fixunssfsi+0x14>
    1db4:	14 c0       	rjmp	.+40     	; 0x1dde <__fixunssfsi+0x4c>
    1db6:	b1 30       	cpi	r27, 0x01	; 1
    1db8:	91 f0       	breq	.+36     	; 0x1dde <__fixunssfsi+0x4c>
    1dba:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__fp_zero>
    1dbe:	b1 e0       	ldi	r27, 0x01	; 1
    1dc0:	08 95       	ret
    1dc2:	0c 94 7f 0f 	jmp	0x1efe	; 0x1efe <__fp_zero>
    1dc6:	67 2f       	mov	r22, r23
    1dc8:	78 2f       	mov	r23, r24
    1dca:	88 27       	eor	r24, r24
    1dcc:	b8 5f       	subi	r27, 0xF8	; 248
    1dce:	39 f0       	breq	.+14     	; 0x1dde <__fixunssfsi+0x4c>
    1dd0:	b9 3f       	cpi	r27, 0xF9	; 249
    1dd2:	cc f3       	brlt	.-14     	; 0x1dc6 <__fixunssfsi+0x34>
    1dd4:	86 95       	lsr	r24
    1dd6:	77 95       	ror	r23
    1dd8:	67 95       	ror	r22
    1dda:	b3 95       	inc	r27
    1ddc:	d9 f7       	brne	.-10     	; 0x1dd4 <__fixunssfsi+0x42>
    1dde:	3e f4       	brtc	.+14     	; 0x1dee <__fixunssfsi+0x5c>
    1de0:	90 95       	com	r25
    1de2:	80 95       	com	r24
    1de4:	70 95       	com	r23
    1de6:	61 95       	neg	r22
    1de8:	7f 4f       	sbci	r23, 0xFF	; 255
    1dea:	8f 4f       	sbci	r24, 0xFF	; 255
    1dec:	9f 4f       	sbci	r25, 0xFF	; 255
    1dee:	08 95       	ret

00001df0 <__floatunsisf>:
    1df0:	e8 94       	clt
    1df2:	09 c0       	rjmp	.+18     	; 0x1e06 <__floatsisf+0x12>

00001df4 <__floatsisf>:
    1df4:	97 fb       	bst	r25, 7
    1df6:	3e f4       	brtc	.+14     	; 0x1e06 <__floatsisf+0x12>
    1df8:	90 95       	com	r25
    1dfa:	80 95       	com	r24
    1dfc:	70 95       	com	r23
    1dfe:	61 95       	neg	r22
    1e00:	7f 4f       	sbci	r23, 0xFF	; 255
    1e02:	8f 4f       	sbci	r24, 0xFF	; 255
    1e04:	9f 4f       	sbci	r25, 0xFF	; 255
    1e06:	99 23       	and	r25, r25
    1e08:	a9 f0       	breq	.+42     	; 0x1e34 <__floatsisf+0x40>
    1e0a:	f9 2f       	mov	r31, r25
    1e0c:	96 e9       	ldi	r25, 0x96	; 150
    1e0e:	bb 27       	eor	r27, r27
    1e10:	93 95       	inc	r25
    1e12:	f6 95       	lsr	r31
    1e14:	87 95       	ror	r24
    1e16:	77 95       	ror	r23
    1e18:	67 95       	ror	r22
    1e1a:	b7 95       	ror	r27
    1e1c:	f1 11       	cpse	r31, r1
    1e1e:	f8 cf       	rjmp	.-16     	; 0x1e10 <__floatsisf+0x1c>
    1e20:	fa f4       	brpl	.+62     	; 0x1e60 <__floatsisf+0x6c>
    1e22:	bb 0f       	add	r27, r27
    1e24:	11 f4       	brne	.+4      	; 0x1e2a <__floatsisf+0x36>
    1e26:	60 ff       	sbrs	r22, 0
    1e28:	1b c0       	rjmp	.+54     	; 0x1e60 <__floatsisf+0x6c>
    1e2a:	6f 5f       	subi	r22, 0xFF	; 255
    1e2c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e2e:	8f 4f       	sbci	r24, 0xFF	; 255
    1e30:	9f 4f       	sbci	r25, 0xFF	; 255
    1e32:	16 c0       	rjmp	.+44     	; 0x1e60 <__floatsisf+0x6c>
    1e34:	88 23       	and	r24, r24
    1e36:	11 f0       	breq	.+4      	; 0x1e3c <__floatsisf+0x48>
    1e38:	96 e9       	ldi	r25, 0x96	; 150
    1e3a:	11 c0       	rjmp	.+34     	; 0x1e5e <__floatsisf+0x6a>
    1e3c:	77 23       	and	r23, r23
    1e3e:	21 f0       	breq	.+8      	; 0x1e48 <__floatsisf+0x54>
    1e40:	9e e8       	ldi	r25, 0x8E	; 142
    1e42:	87 2f       	mov	r24, r23
    1e44:	76 2f       	mov	r23, r22
    1e46:	05 c0       	rjmp	.+10     	; 0x1e52 <__floatsisf+0x5e>
    1e48:	66 23       	and	r22, r22
    1e4a:	71 f0       	breq	.+28     	; 0x1e68 <__floatsisf+0x74>
    1e4c:	96 e8       	ldi	r25, 0x86	; 134
    1e4e:	86 2f       	mov	r24, r22
    1e50:	70 e0       	ldi	r23, 0x00	; 0
    1e52:	60 e0       	ldi	r22, 0x00	; 0
    1e54:	2a f0       	brmi	.+10     	; 0x1e60 <__floatsisf+0x6c>
    1e56:	9a 95       	dec	r25
    1e58:	66 0f       	add	r22, r22
    1e5a:	77 1f       	adc	r23, r23
    1e5c:	88 1f       	adc	r24, r24
    1e5e:	da f7       	brpl	.-10     	; 0x1e56 <__floatsisf+0x62>
    1e60:	88 0f       	add	r24, r24
    1e62:	96 95       	lsr	r25
    1e64:	87 95       	ror	r24
    1e66:	97 f9       	bld	r25, 7
    1e68:	08 95       	ret

00001e6a <__fp_inf>:
    1e6a:	97 f9       	bld	r25, 7
    1e6c:	9f 67       	ori	r25, 0x7F	; 127
    1e6e:	80 e8       	ldi	r24, 0x80	; 128
    1e70:	70 e0       	ldi	r23, 0x00	; 0
    1e72:	60 e0       	ldi	r22, 0x00	; 0
    1e74:	08 95       	ret

00001e76 <__fp_nan>:
    1e76:	9f ef       	ldi	r25, 0xFF	; 255
    1e78:	80 ec       	ldi	r24, 0xC0	; 192
    1e7a:	08 95       	ret

00001e7c <__fp_pscA>:
    1e7c:	00 24       	eor	r0, r0
    1e7e:	0a 94       	dec	r0
    1e80:	16 16       	cp	r1, r22
    1e82:	17 06       	cpc	r1, r23
    1e84:	18 06       	cpc	r1, r24
    1e86:	09 06       	cpc	r0, r25
    1e88:	08 95       	ret

00001e8a <__fp_pscB>:
    1e8a:	00 24       	eor	r0, r0
    1e8c:	0a 94       	dec	r0
    1e8e:	12 16       	cp	r1, r18
    1e90:	13 06       	cpc	r1, r19
    1e92:	14 06       	cpc	r1, r20
    1e94:	05 06       	cpc	r0, r21
    1e96:	08 95       	ret

00001e98 <__fp_round>:
    1e98:	09 2e       	mov	r0, r25
    1e9a:	03 94       	inc	r0
    1e9c:	00 0c       	add	r0, r0
    1e9e:	11 f4       	brne	.+4      	; 0x1ea4 <__fp_round+0xc>
    1ea0:	88 23       	and	r24, r24
    1ea2:	52 f0       	brmi	.+20     	; 0x1eb8 <__fp_round+0x20>
    1ea4:	bb 0f       	add	r27, r27
    1ea6:	40 f4       	brcc	.+16     	; 0x1eb8 <__fp_round+0x20>
    1ea8:	bf 2b       	or	r27, r31
    1eaa:	11 f4       	brne	.+4      	; 0x1eb0 <__fp_round+0x18>
    1eac:	60 ff       	sbrs	r22, 0
    1eae:	04 c0       	rjmp	.+8      	; 0x1eb8 <__fp_round+0x20>
    1eb0:	6f 5f       	subi	r22, 0xFF	; 255
    1eb2:	7f 4f       	sbci	r23, 0xFF	; 255
    1eb4:	8f 4f       	sbci	r24, 0xFF	; 255
    1eb6:	9f 4f       	sbci	r25, 0xFF	; 255
    1eb8:	08 95       	ret

00001eba <__fp_split3>:
    1eba:	57 fd       	sbrc	r21, 7
    1ebc:	90 58       	subi	r25, 0x80	; 128
    1ebe:	44 0f       	add	r20, r20
    1ec0:	55 1f       	adc	r21, r21
    1ec2:	59 f0       	breq	.+22     	; 0x1eda <__fp_splitA+0x10>
    1ec4:	5f 3f       	cpi	r21, 0xFF	; 255
    1ec6:	71 f0       	breq	.+28     	; 0x1ee4 <__fp_splitA+0x1a>
    1ec8:	47 95       	ror	r20

00001eca <__fp_splitA>:
    1eca:	88 0f       	add	r24, r24
    1ecc:	97 fb       	bst	r25, 7
    1ece:	99 1f       	adc	r25, r25
    1ed0:	61 f0       	breq	.+24     	; 0x1eea <__fp_splitA+0x20>
    1ed2:	9f 3f       	cpi	r25, 0xFF	; 255
    1ed4:	79 f0       	breq	.+30     	; 0x1ef4 <__fp_splitA+0x2a>
    1ed6:	87 95       	ror	r24
    1ed8:	08 95       	ret
    1eda:	12 16       	cp	r1, r18
    1edc:	13 06       	cpc	r1, r19
    1ede:	14 06       	cpc	r1, r20
    1ee0:	55 1f       	adc	r21, r21
    1ee2:	f2 cf       	rjmp	.-28     	; 0x1ec8 <__fp_split3+0xe>
    1ee4:	46 95       	lsr	r20
    1ee6:	f1 df       	rcall	.-30     	; 0x1eca <__fp_splitA>
    1ee8:	08 c0       	rjmp	.+16     	; 0x1efa <__fp_splitA+0x30>
    1eea:	16 16       	cp	r1, r22
    1eec:	17 06       	cpc	r1, r23
    1eee:	18 06       	cpc	r1, r24
    1ef0:	99 1f       	adc	r25, r25
    1ef2:	f1 cf       	rjmp	.-30     	; 0x1ed6 <__fp_splitA+0xc>
    1ef4:	86 95       	lsr	r24
    1ef6:	71 05       	cpc	r23, r1
    1ef8:	61 05       	cpc	r22, r1
    1efa:	08 94       	sec
    1efc:	08 95       	ret

00001efe <__fp_zero>:
    1efe:	e8 94       	clt

00001f00 <__fp_szero>:
    1f00:	bb 27       	eor	r27, r27
    1f02:	66 27       	eor	r22, r22
    1f04:	77 27       	eor	r23, r23
    1f06:	cb 01       	movw	r24, r22
    1f08:	97 f9       	bld	r25, 7
    1f0a:	08 95       	ret

00001f0c <__mulsf3>:
    1f0c:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__mulsf3x>
    1f10:	0c 94 4c 0f 	jmp	0x1e98	; 0x1e98 <__fp_round>
    1f14:	0e 94 3e 0f 	call	0x1e7c	; 0x1e7c <__fp_pscA>
    1f18:	38 f0       	brcs	.+14     	; 0x1f28 <__mulsf3+0x1c>
    1f1a:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <__fp_pscB>
    1f1e:	20 f0       	brcs	.+8      	; 0x1f28 <__mulsf3+0x1c>
    1f20:	95 23       	and	r25, r21
    1f22:	11 f0       	breq	.+4      	; 0x1f28 <__mulsf3+0x1c>
    1f24:	0c 94 35 0f 	jmp	0x1e6a	; 0x1e6a <__fp_inf>
    1f28:	0c 94 3b 0f 	jmp	0x1e76	; 0x1e76 <__fp_nan>
    1f2c:	11 24       	eor	r1, r1
    1f2e:	0c 94 80 0f 	jmp	0x1f00	; 0x1f00 <__fp_szero>

00001f32 <__mulsf3x>:
    1f32:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <__fp_split3>
    1f36:	70 f3       	brcs	.-36     	; 0x1f14 <__mulsf3+0x8>

00001f38 <__mulsf3_pse>:
    1f38:	95 9f       	mul	r25, r21
    1f3a:	c1 f3       	breq	.-16     	; 0x1f2c <__mulsf3+0x20>
    1f3c:	95 0f       	add	r25, r21
    1f3e:	50 e0       	ldi	r21, 0x00	; 0
    1f40:	55 1f       	adc	r21, r21
    1f42:	62 9f       	mul	r22, r18
    1f44:	f0 01       	movw	r30, r0
    1f46:	72 9f       	mul	r23, r18
    1f48:	bb 27       	eor	r27, r27
    1f4a:	f0 0d       	add	r31, r0
    1f4c:	b1 1d       	adc	r27, r1
    1f4e:	63 9f       	mul	r22, r19
    1f50:	aa 27       	eor	r26, r26
    1f52:	f0 0d       	add	r31, r0
    1f54:	b1 1d       	adc	r27, r1
    1f56:	aa 1f       	adc	r26, r26
    1f58:	64 9f       	mul	r22, r20
    1f5a:	66 27       	eor	r22, r22
    1f5c:	b0 0d       	add	r27, r0
    1f5e:	a1 1d       	adc	r26, r1
    1f60:	66 1f       	adc	r22, r22
    1f62:	82 9f       	mul	r24, r18
    1f64:	22 27       	eor	r18, r18
    1f66:	b0 0d       	add	r27, r0
    1f68:	a1 1d       	adc	r26, r1
    1f6a:	62 1f       	adc	r22, r18
    1f6c:	73 9f       	mul	r23, r19
    1f6e:	b0 0d       	add	r27, r0
    1f70:	a1 1d       	adc	r26, r1
    1f72:	62 1f       	adc	r22, r18
    1f74:	83 9f       	mul	r24, r19
    1f76:	a0 0d       	add	r26, r0
    1f78:	61 1d       	adc	r22, r1
    1f7a:	22 1f       	adc	r18, r18
    1f7c:	74 9f       	mul	r23, r20
    1f7e:	33 27       	eor	r19, r19
    1f80:	a0 0d       	add	r26, r0
    1f82:	61 1d       	adc	r22, r1
    1f84:	23 1f       	adc	r18, r19
    1f86:	84 9f       	mul	r24, r20
    1f88:	60 0d       	add	r22, r0
    1f8a:	21 1d       	adc	r18, r1
    1f8c:	82 2f       	mov	r24, r18
    1f8e:	76 2f       	mov	r23, r22
    1f90:	6a 2f       	mov	r22, r26
    1f92:	11 24       	eor	r1, r1
    1f94:	9f 57       	subi	r25, 0x7F	; 127
    1f96:	50 40       	sbci	r21, 0x00	; 0
    1f98:	9a f0       	brmi	.+38     	; 0x1fc0 <__mulsf3_pse+0x88>
    1f9a:	f1 f0       	breq	.+60     	; 0x1fd8 <__mulsf3_pse+0xa0>
    1f9c:	88 23       	and	r24, r24
    1f9e:	4a f0       	brmi	.+18     	; 0x1fb2 <__mulsf3_pse+0x7a>
    1fa0:	ee 0f       	add	r30, r30
    1fa2:	ff 1f       	adc	r31, r31
    1fa4:	bb 1f       	adc	r27, r27
    1fa6:	66 1f       	adc	r22, r22
    1fa8:	77 1f       	adc	r23, r23
    1faa:	88 1f       	adc	r24, r24
    1fac:	91 50       	subi	r25, 0x01	; 1
    1fae:	50 40       	sbci	r21, 0x00	; 0
    1fb0:	a9 f7       	brne	.-22     	; 0x1f9c <__mulsf3_pse+0x64>
    1fb2:	9e 3f       	cpi	r25, 0xFE	; 254
    1fb4:	51 05       	cpc	r21, r1
    1fb6:	80 f0       	brcs	.+32     	; 0x1fd8 <__mulsf3_pse+0xa0>
    1fb8:	0c 94 35 0f 	jmp	0x1e6a	; 0x1e6a <__fp_inf>
    1fbc:	0c 94 80 0f 	jmp	0x1f00	; 0x1f00 <__fp_szero>
    1fc0:	5f 3f       	cpi	r21, 0xFF	; 255
    1fc2:	e4 f3       	brlt	.-8      	; 0x1fbc <__mulsf3_pse+0x84>
    1fc4:	98 3e       	cpi	r25, 0xE8	; 232
    1fc6:	d4 f3       	brlt	.-12     	; 0x1fbc <__mulsf3_pse+0x84>
    1fc8:	86 95       	lsr	r24
    1fca:	77 95       	ror	r23
    1fcc:	67 95       	ror	r22
    1fce:	b7 95       	ror	r27
    1fd0:	f7 95       	ror	r31
    1fd2:	e7 95       	ror	r30
    1fd4:	9f 5f       	subi	r25, 0xFF	; 255
    1fd6:	c1 f7       	brne	.-16     	; 0x1fc8 <__mulsf3_pse+0x90>
    1fd8:	fe 2b       	or	r31, r30
    1fda:	88 0f       	add	r24, r24
    1fdc:	91 1d       	adc	r25, r1
    1fde:	96 95       	lsr	r25
    1fe0:	87 95       	ror	r24
    1fe2:	97 f9       	bld	r25, 7
    1fe4:	08 95       	ret

00001fe6 <__divmodhi4>:
    1fe6:	97 fb       	bst	r25, 7
    1fe8:	07 2e       	mov	r0, r23
    1fea:	16 f4       	brtc	.+4      	; 0x1ff0 <__divmodhi4+0xa>
    1fec:	00 94       	com	r0
    1fee:	07 d0       	rcall	.+14     	; 0x1ffe <__divmodhi4_neg1>
    1ff0:	77 fd       	sbrc	r23, 7
    1ff2:	09 d0       	rcall	.+18     	; 0x2006 <__divmodhi4_neg2>
    1ff4:	0e 94 07 10 	call	0x200e	; 0x200e <__udivmodhi4>
    1ff8:	07 fc       	sbrc	r0, 7
    1ffa:	05 d0       	rcall	.+10     	; 0x2006 <__divmodhi4_neg2>
    1ffc:	3e f4       	brtc	.+14     	; 0x200c <__divmodhi4_exit>

00001ffe <__divmodhi4_neg1>:
    1ffe:	90 95       	com	r25
    2000:	81 95       	neg	r24
    2002:	9f 4f       	sbci	r25, 0xFF	; 255
    2004:	08 95       	ret

00002006 <__divmodhi4_neg2>:
    2006:	70 95       	com	r23
    2008:	61 95       	neg	r22
    200a:	7f 4f       	sbci	r23, 0xFF	; 255

0000200c <__divmodhi4_exit>:
    200c:	08 95       	ret

0000200e <__udivmodhi4>:
    200e:	aa 1b       	sub	r26, r26
    2010:	bb 1b       	sub	r27, r27
    2012:	51 e1       	ldi	r21, 0x11	; 17
    2014:	07 c0       	rjmp	.+14     	; 0x2024 <__udivmodhi4_ep>

00002016 <__udivmodhi4_loop>:
    2016:	aa 1f       	adc	r26, r26
    2018:	bb 1f       	adc	r27, r27
    201a:	a6 17       	cp	r26, r22
    201c:	b7 07       	cpc	r27, r23
    201e:	10 f0       	brcs	.+4      	; 0x2024 <__udivmodhi4_ep>
    2020:	a6 1b       	sub	r26, r22
    2022:	b7 0b       	sbc	r27, r23

00002024 <__udivmodhi4_ep>:
    2024:	88 1f       	adc	r24, r24
    2026:	99 1f       	adc	r25, r25
    2028:	5a 95       	dec	r21
    202a:	a9 f7       	brne	.-22     	; 0x2016 <__udivmodhi4_loop>
    202c:	80 95       	com	r24
    202e:	90 95       	com	r25
    2030:	bc 01       	movw	r22, r24
    2032:	cd 01       	movw	r24, r26
    2034:	08 95       	ret

00002036 <memcpy>:
    2036:	fb 01       	movw	r30, r22
    2038:	dc 01       	movw	r26, r24
    203a:	02 c0       	rjmp	.+4      	; 0x2040 <memcpy+0xa>
    203c:	01 90       	ld	r0, Z+
    203e:	0d 92       	st	X+, r0
    2040:	41 50       	subi	r20, 0x01	; 1
    2042:	50 40       	sbci	r21, 0x00	; 0
    2044:	d8 f7       	brcc	.-10     	; 0x203c <memcpy+0x6>
    2046:	08 95       	ret

00002048 <_exit>:
    2048:	f8 94       	cli

0000204a <__stop_program>:
    204a:	ff cf       	rjmp	.-2      	; 0x204a <__stop_program>
