
Master node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  00001ba4  00001c38  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ba4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000661  00800136  00800136  00001c6e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001c6e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ca0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000430  00000000  00000000  00001ce0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004b07  00000000  00000000  00002110  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000138d  00000000  00000000  00006c17  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002c8f  00000000  00000000  00007fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c94  00000000  00000000  0000ac34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000181e  00000000  00000000  0000b8c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000481c  00000000  00000000  0000d0e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000420  00000000  00000000  00011902  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 d8 0b 	jmp	0x17b0	; 0x17b0 <__vector_1>
       8:	0c 94 05 0c 	jmp	0x180a	; 0x180a <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__vector_10>
      2c:	0c 94 bf 03 	jmp	0x77e	; 0x77e <__vector_11>
      30:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__vector_12>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 ea       	ldi	r30, 0xA4	; 164
      7c:	fb e1       	ldi	r31, 0x1B	; 27
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a6 33       	cpi	r26, 0x36	; 54
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	27 e0       	ldi	r18, 0x07	; 7
      8c:	a6 e3       	ldi	r26, 0x36	; 54
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a7 39       	cpi	r26, 0x97	; 151
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 af 01 	call	0x35e	; 0x35e <main>
      9e:	0c 94 d0 0d 	jmp	0x1ba0	; 0x1ba0 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <INIT_ADC>:
      a6:	ec e7       	ldi	r30, 0x7C	; 124
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	80 81       	ld	r24, Z
      ac:	80 64       	ori	r24, 0x40	; 64
      ae:	80 83       	st	Z, r24
      b0:	ea e7       	ldi	r30, 0x7A	; 122
      b2:	f0 e0       	ldi	r31, 0x00	; 0
      b4:	80 81       	ld	r24, Z
      b6:	80 68       	ori	r24, 0x80	; 128
      b8:	80 83       	st	Z, r24
      ba:	80 81       	ld	r24, Z
      bc:	87 60       	ori	r24, 0x07	; 7
      be:	80 83       	st	Z, r24
      c0:	08 95       	ret

000000c2 <Analog_Read>:
      c2:	ec e7       	ldi	r30, 0x7C	; 124
      c4:	f0 e0       	ldi	r31, 0x00	; 0
      c6:	90 81       	ld	r25, Z
      c8:	89 2b       	or	r24, r25
      ca:	80 83       	st	Z, r24
      cc:	ea e7       	ldi	r30, 0x7A	; 122
      ce:	f0 e0       	ldi	r31, 0x00	; 0
      d0:	80 81       	ld	r24, Z
      d2:	80 64       	ori	r24, 0x40	; 64
      d4:	80 83       	st	Z, r24
      d6:	80 81       	ld	r24, Z
      d8:	86 fd       	sbrc	r24, 6
      da:	fd cf       	rjmp	.-6      	; 0xd6 <Analog_Read+0x14>
      dc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
      e0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
      e4:	08 95       	ret

000000e6 <__vector_12>:
int counts;
float dist;
uint16_t us_per_count;


ISR(TIMER1_COMPB_vect){
      e6:	1f 92       	push	r1
      e8:	0f 92       	push	r0
      ea:	0f b6       	in	r0, 0x3f	; 63
      ec:	0f 92       	push	r0
      ee:	11 24       	eor	r1, r1
      f0:	8f 93       	push	r24
      f2:	9f 93       	push	r25

    //Generate a 12us pulse to trigger the HR-SR04
    PORTB ^= ( 1 << PORTB1);
      f4:	95 b1       	in	r25, 0x05	; 5
      f6:	82 e0       	ldi	r24, 0x02	; 2
      f8:	98 27       	eor	r25, r24
      fa:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fc:	94 e0       	ldi	r25, 0x04	; 4
      fe:	9a 95       	dec	r25
     100:	f1 f7       	brne	.-4      	; 0xfe <__vector_12+0x18>
    _delay_us(12);
    PORTB ^= ( 1 << PORTB1);
     102:	95 b1       	in	r25, 0x05	; 5
     104:	89 27       	eor	r24, r25
     106:	85 b9       	out	0x05, r24	; 5
}
     108:	9f 91       	pop	r25
     10a:	8f 91       	pop	r24
     10c:	0f 90       	pop	r0
     10e:	0f be       	out	0x3f, r0	; 63
     110:	0f 90       	pop	r0
     112:	1f 90       	pop	r1
     114:	18 95       	reti

00000116 <__vector_10>:

ISR(TIMER1_CAPT_vect){
     116:	1f 92       	push	r1
     118:	0f 92       	push	r0
     11a:	0f b6       	in	r0, 0x3f	; 63
     11c:	0f 92       	push	r0
     11e:	11 24       	eor	r1, r1
     120:	cf 92       	push	r12
     122:	df 92       	push	r13
     124:	ef 92       	push	r14
     126:	ff 92       	push	r15
     128:	2f 93       	push	r18
     12a:	3f 93       	push	r19
     12c:	4f 93       	push	r20
     12e:	5f 93       	push	r21
     130:	6f 93       	push	r22
     132:	7f 93       	push	r23
     134:	8f 93       	push	r24
     136:	9f 93       	push	r25
     138:	af 93       	push	r26
     13a:	bf 93       	push	r27
     13c:	cf 93       	push	r28
     13e:	df 93       	push	r29
     140:	ef 93       	push	r30
     142:	ff 93       	push	r31

    if(TCCR1B & (1 << ICES1)){
     144:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     148:	86 ff       	sbrs	r24, 6
     14a:	0e c0       	rjmp	.+28     	; 0x168 <__vector_10+0x52>

        TCCR1B &= ~( 1 << ICES1);
     14c:	e1 e8       	ldi	r30, 0x81	; 129
     14e:	f0 e0       	ldi	r31, 0x00	; 0
     150:	80 81       	ld	r24, Z
     152:	8f 7b       	andi	r24, 0xBF	; 191
     154:	80 83       	st	Z, r24
        rising = ICR1;
     156:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     15a:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     15e:	90 93 8e 07 	sts	0x078E, r25	; 0x80078e <rising+0x1>
     162:	80 93 8d 07 	sts	0x078D, r24	; 0x80078d <rising>
     166:	42 c0       	rjmp	.+132    	; 0x1ec <__vector_10+0xd6>
    }
    else{
        TCCR1B |= (1 << ICES1);
     168:	e1 e8       	ldi	r30, 0x81	; 129
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	80 81       	ld	r24, Z
     16e:	80 64       	ori	r24, 0x40	; 64
     170:	80 83       	st	Z, r24
        falling = ICR1;
     172:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     176:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     17a:	70 93 84 07 	sts	0x0784, r23	; 0x800784 <falling+0x1>
     17e:	60 93 83 07 	sts	0x0783, r22	; 0x800783 <falling>
        counts = falling - rising;
     182:	80 91 8d 07 	lds	r24, 0x078D	; 0x80078d <rising>
     186:	90 91 8e 07 	lds	r25, 0x078E	; 0x80078e <rising+0x1>
     18a:	eb 01       	movw	r28, r22
     18c:	c8 1b       	sub	r28, r24
     18e:	d9 0b       	sbc	r29, r25
     190:	d0 93 8c 07 	sts	0x078C, r29	; 0x80078c <counts+0x1>
     194:	c0 93 8b 07 	sts	0x078B, r28	; 0x80078b <counts>
        dist = (float)us_per_count * counts * 10 / 580;
     198:	60 91 89 07 	lds	r22, 0x0789	; 0x800789 <us_per_count>
     19c:	70 91 8a 07 	lds	r23, 0x078A	; 0x80078a <us_per_count+0x1>
     1a0:	80 e0       	ldi	r24, 0x00	; 0
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	0e 94 a4 0c 	call	0x1948	; 0x1948 <__floatunsisf>
     1a8:	6b 01       	movw	r12, r22
     1aa:	7c 01       	movw	r14, r24
     1ac:	be 01       	movw	r22, r28
     1ae:	dd 0f       	add	r29, r29
     1b0:	88 0b       	sbc	r24, r24
     1b2:	99 0b       	sbc	r25, r25
     1b4:	0e 94 a6 0c 	call	0x194c	; 0x194c <__floatsisf>
     1b8:	9b 01       	movw	r18, r22
     1ba:	ac 01       	movw	r20, r24
     1bc:	c7 01       	movw	r24, r14
     1be:	b6 01       	movw	r22, r12
     1c0:	0e 94 32 0d 	call	0x1a64	; 0x1a64 <__mulsf3>
     1c4:	20 e0       	ldi	r18, 0x00	; 0
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	40 e2       	ldi	r20, 0x20	; 32
     1ca:	51 e4       	ldi	r21, 0x41	; 65
     1cc:	0e 94 32 0d 	call	0x1a64	; 0x1a64 <__mulsf3>
     1d0:	20 e0       	ldi	r18, 0x00	; 0
     1d2:	30 e0       	ldi	r19, 0x00	; 0
     1d4:	41 e1       	ldi	r20, 0x11	; 17
     1d6:	54 e4       	ldi	r21, 0x44	; 68
     1d8:	0e 94 32 0c 	call	0x1864	; 0x1864 <__divsf3>
     1dc:	60 93 85 07 	sts	0x0785, r22	; 0x800785 <dist>
     1e0:	70 93 86 07 	sts	0x0786, r23	; 0x800786 <dist+0x1>
     1e4:	80 93 87 07 	sts	0x0787, r24	; 0x800787 <dist+0x2>
     1e8:	90 93 88 07 	sts	0x0788, r25	; 0x800788 <dist+0x3>
    }
}
     1ec:	ff 91       	pop	r31
     1ee:	ef 91       	pop	r30
     1f0:	df 91       	pop	r29
     1f2:	cf 91       	pop	r28
     1f4:	bf 91       	pop	r27
     1f6:	af 91       	pop	r26
     1f8:	9f 91       	pop	r25
     1fa:	8f 91       	pop	r24
     1fc:	7f 91       	pop	r23
     1fe:	6f 91       	pop	r22
     200:	5f 91       	pop	r21
     202:	4f 91       	pop	r20
     204:	3f 91       	pop	r19
     206:	2f 91       	pop	r18
     208:	ff 90       	pop	r15
     20a:	ef 90       	pop	r14
     20c:	df 90       	pop	r13
     20e:	cf 90       	pop	r12
     210:	0f 90       	pop	r0
     212:	0f be       	out	0x3f, r0	; 63
     214:	0f 90       	pop	r0
     216:	1f 90       	pop	r1
     218:	18 95       	reti

0000021a <i2c_write>:
     21a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     21e:	84 e8       	ldi	r24, 0x84	; 132
     220:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     224:	ec eb       	ldi	r30, 0xBC	; 188
     226:	f0 e0       	ldi	r31, 0x00	; 0
     228:	80 81       	ld	r24, Z
     22a:	88 23       	and	r24, r24
     22c:	ec f7       	brge	.-6      	; 0x228 <i2c_write+0xe>
     22e:	08 95       	ret

00000230 <i2c_start>:
     230:	84 ea       	ldi	r24, 0xA4	; 164
     232:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     236:	ec eb       	ldi	r30, 0xBC	; 188
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	80 81       	ld	r24, Z
     23c:	88 23       	and	r24, r24
     23e:	ec f3       	brlt	.-6      	; 0x23a <i2c_start+0xa>
     240:	e9 eb       	ldi	r30, 0xB9	; 185
     242:	f0 e0       	ldi	r31, 0x00	; 0
     244:	80 81       	ld	r24, Z
     246:	88 7f       	andi	r24, 0xF8	; 248
     248:	88 30       	cpi	r24, 0x08	; 8
     24a:	e1 f7       	brne	.-8      	; 0x244 <i2c_start+0x14>
     24c:	08 95       	ret

0000024e <i2c_init>:
     24e:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     252:	87 e4       	ldi	r24, 0x47	; 71
     254:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     258:	84 e0       	ldi	r24, 0x04	; 4
     25a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     25e:	08 95       	ret

00000260 <task_ADC>:
	return 0;
}


void task_ADC()
{
     260:	cf 93       	push	r28
     262:	df 93       	push	r29
     264:	1f 92       	push	r1
     266:	cd b7       	in	r28, 0x3d	; 61
     268:	de b7       	in	r29, 0x3e	; 62
	INIT_ADC();
     26a:	0e 94 53 00 	call	0xa6	; 0xa6 <INIT_ADC>
	const TickType_t xDelay = 100 / portTICK_PERIOD_MS;
	for (;;)
	{
		unsigned char data = Analog_Read(0);
		data =(data*500)/1023;
		data |= 0x80;
     26e:	0f 2e       	mov	r0, r31
     270:	f4 ef       	ldi	r31, 0xF4	; 244
     272:	ef 2e       	mov	r14, r31
     274:	ff 24       	eor	r15, r15
     276:	f3 94       	inc	r15
     278:	f0 2d       	mov	r31, r0
     27a:	0f ef       	ldi	r16, 0xFF	; 255
     27c:	13 e0       	ldi	r17, 0x03	; 3
{
	INIT_ADC();
	const TickType_t xDelay = 100 / portTICK_PERIOD_MS;
	for (;;)
	{
		unsigned char data = Analog_Read(0);
     27e:	80 e0       	ldi	r24, 0x00	; 0
     280:	0e 94 61 00 	call	0xc2	; 0xc2 <Analog_Read>
		data =(data*500)/1023;
		data |= 0x80;
     284:	28 2f       	mov	r18, r24
     286:	2e 9d       	mul	r18, r14
     288:	c0 01       	movw	r24, r0
     28a:	2f 9d       	mul	r18, r15
     28c:	90 0d       	add	r25, r0
     28e:	11 24       	eor	r1, r1
     290:	b8 01       	movw	r22, r16
     292:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__divmodhi4>
     296:	60 68       	ori	r22, 0x80	; 128
     298:	69 83       	std	Y+1, r22	; 0x01
		xQueueSendToFront(xQueue,&data,0);
     29a:	21 e0       	ldi	r18, 0x01	; 1
     29c:	40 e0       	ldi	r20, 0x00	; 0
     29e:	50 e0       	ldi	r21, 0x00	; 0
     2a0:	be 01       	movw	r22, r28
     2a2:	6f 5f       	subi	r22, 0xFF	; 255
     2a4:	7f 4f       	sbci	r23, 0xFF	; 255
     2a6:	80 91 93 07 	lds	r24, 0x0793	; 0x800793 <xQueue>
     2aa:	90 91 94 07 	lds	r25, 0x0794	; 0x800794 <xQueue+0x1>
     2ae:	0e 94 55 05 	call	0xaaa	; 0xaaa <xQueueGenericSend>
		vTaskDelay( xDelay );
     2b2:	84 e6       	ldi	r24, 0x64	; 100
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	0e 94 9e 09 	call	0x133c	; 0x133c <vTaskDelay>
     2ba:	e1 cf       	rjmp	.-62     	; 0x27e <task_ADC+0x1e>

000002bc <task_Generator>:
	}
	i2c_stop();
}

void task_Generator()
{
     2bc:	cf 93       	push	r28
     2be:	df 93       	push	r29
     2c0:	1f 92       	push	r1
     2c2:	cd b7       	in	r28, 0x3d	; 61
     2c4:	de b7       	in	r29, 0x3e	; 62
	unsigned char counter = 'a';
     2c6:	81 e6       	ldi	r24, 0x61	; 97
     2c8:	89 83       	std	Y+1, r24	; 0x01
	const TickType_t xDelay = 90 / portTICK_PERIOD_MS;
	for (;;)
	{
		xQueueSendToFront(xQueue,&counter,0);
		counter = (counter == 'z' ? 0 : counter+1);
     2ca:	10 e0       	ldi	r17, 0x00	; 0
{
	unsigned char counter = 'a';
	const TickType_t xDelay = 90 / portTICK_PERIOD_MS;
	for (;;)
	{
		xQueueSendToFront(xQueue,&counter,0);
     2cc:	21 e0       	ldi	r18, 0x01	; 1
     2ce:	40 e0       	ldi	r20, 0x00	; 0
     2d0:	50 e0       	ldi	r21, 0x00	; 0
     2d2:	be 01       	movw	r22, r28
     2d4:	6f 5f       	subi	r22, 0xFF	; 255
     2d6:	7f 4f       	sbci	r23, 0xFF	; 255
     2d8:	80 91 93 07 	lds	r24, 0x0793	; 0x800793 <xQueue>
     2dc:	90 91 94 07 	lds	r25, 0x0794	; 0x800794 <xQueue+0x1>
     2e0:	0e 94 55 05 	call	0xaaa	; 0xaaa <xQueueGenericSend>
		counter = (counter == 'z' ? 0 : counter+1);
     2e4:	89 81       	ldd	r24, Y+1	; 0x01
     2e6:	8a 37       	cpi	r24, 0x7A	; 122
     2e8:	11 f0       	breq	.+4      	; 0x2ee <task_Generator+0x32>
     2ea:	8f 5f       	subi	r24, 0xFF	; 255
     2ec:	01 c0       	rjmp	.+2      	; 0x2f0 <task_Generator+0x34>
     2ee:	81 2f       	mov	r24, r17
     2f0:	89 83       	std	Y+1, r24	; 0x01
		vTaskDelay( xDelay );
     2f2:	8a e5       	ldi	r24, 0x5A	; 90
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	0e 94 9e 09 	call	0x133c	; 0x133c <vTaskDelay>
	}
     2fa:	e8 cf       	rjmp	.-48     	; 0x2cc <task_Generator+0x10>

000002fc <task_I2C>:
	}
}


void task_I2C()
{
     2fc:	cf 93       	push	r28
     2fe:	df 93       	push	r29
     300:	1f 92       	push	r1
     302:	cd b7       	in	r28, 0x3d	; 61
     304:	de b7       	in	r29, 0x3e	; 62
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     306:	2f ef       	ldi	r18, 0xFF	; 255
     308:	89 e6       	ldi	r24, 0x69	; 105
     30a:	98 e1       	ldi	r25, 0x18	; 24
     30c:	21 50       	subi	r18, 0x01	; 1
     30e:	80 40       	sbci	r24, 0x00	; 0
     310:	90 40       	sbci	r25, 0x00	; 0
     312:	e1 f7       	brne	.-8      	; 0x30c <task_I2C+0x10>
     314:	00 c0       	rjmp	.+0      	; 0x316 <task_I2C+0x1a>
     316:	00 00       	nop
	unsigned char data;
	_delay_ms(500);//wait slave to initialize
	i2c_init();
     318:	0e 94 27 01 	call	0x24e	; 0x24e <i2c_init>
	i2c_start();
     31c:	0e 94 18 01 	call	0x230	; 0x230 <i2c_start>
	i2c_write(0x02); //address
     320:	82 e0       	ldi	r24, 0x02	; 2
     322:	0e 94 0d 01 	call	0x21a	; 0x21a <i2c_write>
	const TickType_t xDelay = 40 / portTICK_PERIOD_MS;
	for (;;)
	{
		if( uxQueueMessagesWaiting( xQueue ) != 0 )
     326:	80 91 93 07 	lds	r24, 0x0793	; 0x800793 <xQueue>
     32a:	90 91 94 07 	lds	r25, 0x0794	; 0x800794 <xQueue+0x1>
     32e:	0e 94 b9 06 	call	0xd72	; 0xd72 <uxQueueMessagesWaiting>
     332:	88 23       	and	r24, r24
     334:	79 f0       	breq	.+30     	; 0x354 <task_I2C+0x58>
		{
			xQueueReceive(xQueue,&data,0);
     336:	20 e0       	ldi	r18, 0x00	; 0
     338:	40 e0       	ldi	r20, 0x00	; 0
     33a:	50 e0       	ldi	r21, 0x00	; 0
     33c:	be 01       	movw	r22, r28
     33e:	6f 5f       	subi	r22, 0xFF	; 255
     340:	7f 4f       	sbci	r23, 0xFF	; 255
     342:	80 91 93 07 	lds	r24, 0x0793	; 0x800793 <xQueue>
     346:	90 91 94 07 	lds	r25, 0x0794	; 0x800794 <xQueue+0x1>
     34a:	0e 94 f6 05 	call	0xbec	; 0xbec <xQueueGenericReceive>
			i2c_write(data); //data
     34e:	89 81       	ldd	r24, Y+1	; 0x01
     350:	0e 94 0d 01 	call	0x21a	; 0x21a <i2c_write>
		}
		vTaskDelay( xDelay );
     354:	88 e2       	ldi	r24, 0x28	; 40
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	0e 94 9e 09 	call	0x133c	; 0x133c <vTaskDelay>
	}
     35c:	e4 cf       	rjmp	.-56     	; 0x326 <task_I2C+0x2a>

0000035e <main>:

SemaphoreHandle_t sem;
QueueHandle_t xQueue;
int main(void)
{ 
	cli(); 
     35e:	f8 94       	cli
	// initialization 
	xTaskCreate(task_I2C,"task_I2C",0x100,NULL,0x01,NULL);
     360:	a1 2c       	mov	r10, r1
     362:	b1 2c       	mov	r11, r1
     364:	c1 2c       	mov	r12, r1
     366:	d1 2c       	mov	r13, r1
     368:	e1 2c       	mov	r14, r1
     36a:	f1 2c       	mov	r15, r1
     36c:	01 e0       	ldi	r16, 0x01	; 1
     36e:	20 e0       	ldi	r18, 0x00	; 0
     370:	30 e0       	ldi	r19, 0x00	; 0
     372:	40 e0       	ldi	r20, 0x00	; 0
     374:	51 e0       	ldi	r21, 0x01	; 1
     376:	64 e0       	ldi	r22, 0x04	; 4
     378:	71 e0       	ldi	r23, 0x01	; 1
     37a:	8e e7       	ldi	r24, 0x7E	; 126
     37c:	91 e0       	ldi	r25, 0x01	; 1
     37e:	0e 94 17 07 	call	0xe2e	; 0xe2e <xTaskGenericCreate>
	xTaskCreate(task_Generator,"task_Generator",0x100,NULL,0x02,NULL);
     382:	02 e0       	ldi	r16, 0x02	; 2
     384:	20 e0       	ldi	r18, 0x00	; 0
     386:	30 e0       	ldi	r19, 0x00	; 0
     388:	40 e0       	ldi	r20, 0x00	; 0
     38a:	51 e0       	ldi	r21, 0x01	; 1
     38c:	6d e0       	ldi	r22, 0x0D	; 13
     38e:	71 e0       	ldi	r23, 0x01	; 1
     390:	8e e5       	ldi	r24, 0x5E	; 94
     392:	91 e0       	ldi	r25, 0x01	; 1
     394:	0e 94 17 07 	call	0xe2e	; 0xe2e <xTaskGenericCreate>
	xTaskCreate(task_ADC,"task_ADC",0x100,NULL,0x02,NULL);
     398:	20 e0       	ldi	r18, 0x00	; 0
     39a:	30 e0       	ldi	r19, 0x00	; 0
     39c:	40 e0       	ldi	r20, 0x00	; 0
     39e:	51 e0       	ldi	r21, 0x01	; 1
     3a0:	6c e1       	ldi	r22, 0x1C	; 28
     3a2:	71 e0       	ldi	r23, 0x01	; 1
     3a4:	80 e3       	ldi	r24, 0x30	; 48
     3a6:	91 e0       	ldi	r25, 0x01	; 1
     3a8:	0e 94 17 07 	call	0xe2e	; 0xe2e <xTaskGenericCreate>
	sei();
     3ac:	78 94       	sei
	vTaskStartScheduler();
     3ae:	0e 94 2a 08 	call	0x1054	; 0x1054 <vTaskStartScheduler>
     3b2:	ff cf       	rjmp	.-2      	; 0x3b2 <main+0x54>

000003b4 <vListInitialise>:
     3b4:	fc 01       	movw	r30, r24
     3b6:	03 96       	adiw	r24, 0x03	; 3
     3b8:	92 83       	std	Z+2, r25	; 0x02
     3ba:	81 83       	std	Z+1, r24	; 0x01
     3bc:	2f ef       	ldi	r18, 0xFF	; 255
     3be:	3f ef       	ldi	r19, 0xFF	; 255
     3c0:	34 83       	std	Z+4, r19	; 0x04
     3c2:	23 83       	std	Z+3, r18	; 0x03
     3c4:	96 83       	std	Z+6, r25	; 0x06
     3c6:	85 83       	std	Z+5, r24	; 0x05
     3c8:	90 87       	std	Z+8, r25	; 0x08
     3ca:	87 83       	std	Z+7, r24	; 0x07
     3cc:	10 82       	st	Z, r1
     3ce:	08 95       	ret

000003d0 <vListInitialiseItem>:
     3d0:	fc 01       	movw	r30, r24
     3d2:	11 86       	std	Z+9, r1	; 0x09
     3d4:	10 86       	std	Z+8, r1	; 0x08
     3d6:	08 95       	ret

000003d8 <vListInsertEnd>:
     3d8:	cf 93       	push	r28
     3da:	df 93       	push	r29
     3dc:	9c 01       	movw	r18, r24
     3de:	fb 01       	movw	r30, r22
     3e0:	dc 01       	movw	r26, r24
     3e2:	11 96       	adiw	r26, 0x01	; 1
     3e4:	cd 91       	ld	r28, X+
     3e6:	dc 91       	ld	r29, X
     3e8:	12 97       	sbiw	r26, 0x02	; 2
     3ea:	d3 83       	std	Z+3, r29	; 0x03
     3ec:	c2 83       	std	Z+2, r28	; 0x02
     3ee:	8c 81       	ldd	r24, Y+4	; 0x04
     3f0:	9d 81       	ldd	r25, Y+5	; 0x05
     3f2:	95 83       	std	Z+5, r25	; 0x05
     3f4:	84 83       	std	Z+4, r24	; 0x04
     3f6:	8c 81       	ldd	r24, Y+4	; 0x04
     3f8:	9d 81       	ldd	r25, Y+5	; 0x05
     3fa:	dc 01       	movw	r26, r24
     3fc:	13 96       	adiw	r26, 0x03	; 3
     3fe:	7c 93       	st	X, r23
     400:	6e 93       	st	-X, r22
     402:	12 97       	sbiw	r26, 0x02	; 2
     404:	7d 83       	std	Y+5, r23	; 0x05
     406:	6c 83       	std	Y+4, r22	; 0x04
     408:	31 87       	std	Z+9, r19	; 0x09
     40a:	20 87       	std	Z+8, r18	; 0x08
     40c:	f9 01       	movw	r30, r18
     40e:	80 81       	ld	r24, Z
     410:	8f 5f       	subi	r24, 0xFF	; 255
     412:	80 83       	st	Z, r24
     414:	df 91       	pop	r29
     416:	cf 91       	pop	r28
     418:	08 95       	ret

0000041a <vListInsert>:
     41a:	cf 93       	push	r28
     41c:	df 93       	push	r29
     41e:	eb 01       	movw	r28, r22
     420:	48 81       	ld	r20, Y
     422:	59 81       	ldd	r21, Y+1	; 0x01
     424:	4f 3f       	cpi	r20, 0xFF	; 255
     426:	2f ef       	ldi	r18, 0xFF	; 255
     428:	52 07       	cpc	r21, r18
     42a:	21 f4       	brne	.+8      	; 0x434 <vListInsert+0x1a>
     42c:	fc 01       	movw	r30, r24
     42e:	a7 81       	ldd	r26, Z+7	; 0x07
     430:	b0 85       	ldd	r27, Z+8	; 0x08
     432:	0d c0       	rjmp	.+26     	; 0x44e <vListInsert+0x34>
     434:	dc 01       	movw	r26, r24
     436:	13 96       	adiw	r26, 0x03	; 3
     438:	01 c0       	rjmp	.+2      	; 0x43c <vListInsert+0x22>
     43a:	df 01       	movw	r26, r30
     43c:	12 96       	adiw	r26, 0x02	; 2
     43e:	ed 91       	ld	r30, X+
     440:	fc 91       	ld	r31, X
     442:	13 97       	sbiw	r26, 0x03	; 3
     444:	20 81       	ld	r18, Z
     446:	31 81       	ldd	r19, Z+1	; 0x01
     448:	42 17       	cp	r20, r18
     44a:	53 07       	cpc	r21, r19
     44c:	b0 f7       	brcc	.-20     	; 0x43a <vListInsert+0x20>
     44e:	12 96       	adiw	r26, 0x02	; 2
     450:	ed 91       	ld	r30, X+
     452:	fc 91       	ld	r31, X
     454:	13 97       	sbiw	r26, 0x03	; 3
     456:	fb 83       	std	Y+3, r31	; 0x03
     458:	ea 83       	std	Y+2, r30	; 0x02
     45a:	d5 83       	std	Z+5, r29	; 0x05
     45c:	c4 83       	std	Z+4, r28	; 0x04
     45e:	bd 83       	std	Y+5, r27	; 0x05
     460:	ac 83       	std	Y+4, r26	; 0x04
     462:	13 96       	adiw	r26, 0x03	; 3
     464:	dc 93       	st	X, r29
     466:	ce 93       	st	-X, r28
     468:	12 97       	sbiw	r26, 0x02	; 2
     46a:	99 87       	std	Y+9, r25	; 0x09
     46c:	88 87       	std	Y+8, r24	; 0x08
     46e:	fc 01       	movw	r30, r24
     470:	20 81       	ld	r18, Z
     472:	2f 5f       	subi	r18, 0xFF	; 255
     474:	20 83       	st	Z, r18
     476:	df 91       	pop	r29
     478:	cf 91       	pop	r28
     47a:	08 95       	ret

0000047c <uxListRemove>:
     47c:	cf 93       	push	r28
     47e:	df 93       	push	r29
     480:	fc 01       	movw	r30, r24
     482:	a0 85       	ldd	r26, Z+8	; 0x08
     484:	b1 85       	ldd	r27, Z+9	; 0x09
     486:	c2 81       	ldd	r28, Z+2	; 0x02
     488:	d3 81       	ldd	r29, Z+3	; 0x03
     48a:	84 81       	ldd	r24, Z+4	; 0x04
     48c:	95 81       	ldd	r25, Z+5	; 0x05
     48e:	9d 83       	std	Y+5, r25	; 0x05
     490:	8c 83       	std	Y+4, r24	; 0x04
     492:	c4 81       	ldd	r28, Z+4	; 0x04
     494:	d5 81       	ldd	r29, Z+5	; 0x05
     496:	82 81       	ldd	r24, Z+2	; 0x02
     498:	93 81       	ldd	r25, Z+3	; 0x03
     49a:	9b 83       	std	Y+3, r25	; 0x03
     49c:	8a 83       	std	Y+2, r24	; 0x02
     49e:	11 96       	adiw	r26, 0x01	; 1
     4a0:	8d 91       	ld	r24, X+
     4a2:	9c 91       	ld	r25, X
     4a4:	12 97       	sbiw	r26, 0x02	; 2
     4a6:	e8 17       	cp	r30, r24
     4a8:	f9 07       	cpc	r31, r25
     4aa:	31 f4       	brne	.+12     	; 0x4b8 <uxListRemove+0x3c>
     4ac:	84 81       	ldd	r24, Z+4	; 0x04
     4ae:	95 81       	ldd	r25, Z+5	; 0x05
     4b0:	12 96       	adiw	r26, 0x02	; 2
     4b2:	9c 93       	st	X, r25
     4b4:	8e 93       	st	-X, r24
     4b6:	11 97       	sbiw	r26, 0x01	; 1
     4b8:	11 86       	std	Z+9, r1	; 0x09
     4ba:	10 86       	std	Z+8, r1	; 0x08
     4bc:	8c 91       	ld	r24, X
     4be:	81 50       	subi	r24, 0x01	; 1
     4c0:	8c 93       	st	X, r24
     4c2:	df 91       	pop	r29
     4c4:	cf 91       	pop	r28
     4c6:	08 95       	ret

000004c8 <pxPortInitialiseStack>:
     4c8:	31 e1       	ldi	r19, 0x11	; 17
     4ca:	fc 01       	movw	r30, r24
     4cc:	30 83       	st	Z, r19
     4ce:	31 97       	sbiw	r30, 0x01	; 1
     4d0:	22 e2       	ldi	r18, 0x22	; 34
     4d2:	20 83       	st	Z, r18
     4d4:	31 97       	sbiw	r30, 0x01	; 1
     4d6:	a3 e3       	ldi	r26, 0x33	; 51
     4d8:	a0 83       	st	Z, r26
     4da:	31 97       	sbiw	r30, 0x01	; 1
     4dc:	60 83       	st	Z, r22
     4de:	31 97       	sbiw	r30, 0x01	; 1
     4e0:	70 83       	st	Z, r23
     4e2:	31 97       	sbiw	r30, 0x01	; 1
     4e4:	10 82       	st	Z, r1
     4e6:	31 97       	sbiw	r30, 0x01	; 1
     4e8:	60 e8       	ldi	r22, 0x80	; 128
     4ea:	60 83       	st	Z, r22
     4ec:	31 97       	sbiw	r30, 0x01	; 1
     4ee:	10 82       	st	Z, r1
     4f0:	31 97       	sbiw	r30, 0x01	; 1
     4f2:	62 e0       	ldi	r22, 0x02	; 2
     4f4:	60 83       	st	Z, r22
     4f6:	31 97       	sbiw	r30, 0x01	; 1
     4f8:	63 e0       	ldi	r22, 0x03	; 3
     4fa:	60 83       	st	Z, r22
     4fc:	31 97       	sbiw	r30, 0x01	; 1
     4fe:	64 e0       	ldi	r22, 0x04	; 4
     500:	60 83       	st	Z, r22
     502:	31 97       	sbiw	r30, 0x01	; 1
     504:	65 e0       	ldi	r22, 0x05	; 5
     506:	60 83       	st	Z, r22
     508:	31 97       	sbiw	r30, 0x01	; 1
     50a:	66 e0       	ldi	r22, 0x06	; 6
     50c:	60 83       	st	Z, r22
     50e:	31 97       	sbiw	r30, 0x01	; 1
     510:	67 e0       	ldi	r22, 0x07	; 7
     512:	60 83       	st	Z, r22
     514:	31 97       	sbiw	r30, 0x01	; 1
     516:	68 e0       	ldi	r22, 0x08	; 8
     518:	60 83       	st	Z, r22
     51a:	31 97       	sbiw	r30, 0x01	; 1
     51c:	69 e0       	ldi	r22, 0x09	; 9
     51e:	60 83       	st	Z, r22
     520:	31 97       	sbiw	r30, 0x01	; 1
     522:	60 e1       	ldi	r22, 0x10	; 16
     524:	60 83       	st	Z, r22
     526:	31 97       	sbiw	r30, 0x01	; 1
     528:	30 83       	st	Z, r19
     52a:	31 97       	sbiw	r30, 0x01	; 1
     52c:	32 e1       	ldi	r19, 0x12	; 18
     52e:	30 83       	st	Z, r19
     530:	31 97       	sbiw	r30, 0x01	; 1
     532:	33 e1       	ldi	r19, 0x13	; 19
     534:	30 83       	st	Z, r19
     536:	31 97       	sbiw	r30, 0x01	; 1
     538:	34 e1       	ldi	r19, 0x14	; 20
     53a:	30 83       	st	Z, r19
     53c:	31 97       	sbiw	r30, 0x01	; 1
     53e:	35 e1       	ldi	r19, 0x15	; 21
     540:	30 83       	st	Z, r19
     542:	31 97       	sbiw	r30, 0x01	; 1
     544:	36 e1       	ldi	r19, 0x16	; 22
     546:	30 83       	st	Z, r19
     548:	31 97       	sbiw	r30, 0x01	; 1
     54a:	37 e1       	ldi	r19, 0x17	; 23
     54c:	30 83       	st	Z, r19
     54e:	31 97       	sbiw	r30, 0x01	; 1
     550:	38 e1       	ldi	r19, 0x18	; 24
     552:	30 83       	st	Z, r19
     554:	31 97       	sbiw	r30, 0x01	; 1
     556:	39 e1       	ldi	r19, 0x19	; 25
     558:	30 83       	st	Z, r19
     55a:	31 97       	sbiw	r30, 0x01	; 1
     55c:	30 e2       	ldi	r19, 0x20	; 32
     55e:	30 83       	st	Z, r19
     560:	31 97       	sbiw	r30, 0x01	; 1
     562:	31 e2       	ldi	r19, 0x21	; 33
     564:	30 83       	st	Z, r19
     566:	31 97       	sbiw	r30, 0x01	; 1
     568:	20 83       	st	Z, r18
     56a:	31 97       	sbiw	r30, 0x01	; 1
     56c:	23 e2       	ldi	r18, 0x23	; 35
     56e:	20 83       	st	Z, r18
     570:	31 97       	sbiw	r30, 0x01	; 1
     572:	40 83       	st	Z, r20
     574:	31 97       	sbiw	r30, 0x01	; 1
     576:	50 83       	st	Z, r21
     578:	31 97       	sbiw	r30, 0x01	; 1
     57a:	26 e2       	ldi	r18, 0x26	; 38
     57c:	20 83       	st	Z, r18
     57e:	31 97       	sbiw	r30, 0x01	; 1
     580:	27 e2       	ldi	r18, 0x27	; 39
     582:	20 83       	st	Z, r18
     584:	31 97       	sbiw	r30, 0x01	; 1
     586:	28 e2       	ldi	r18, 0x28	; 40
     588:	20 83       	st	Z, r18
     58a:	31 97       	sbiw	r30, 0x01	; 1
     58c:	29 e2       	ldi	r18, 0x29	; 41
     58e:	20 83       	st	Z, r18
     590:	31 97       	sbiw	r30, 0x01	; 1
     592:	20 e3       	ldi	r18, 0x30	; 48
     594:	20 83       	st	Z, r18
     596:	31 97       	sbiw	r30, 0x01	; 1
     598:	21 e3       	ldi	r18, 0x31	; 49
     59a:	20 83       	st	Z, r18
     59c:	86 97       	sbiw	r24, 0x26	; 38
     59e:	08 95       	ret

000005a0 <xPortStartScheduler>:
     5a0:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     5a4:	8c e7       	ldi	r24, 0x7C	; 124
     5a6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     5aa:	8b e0       	ldi	r24, 0x0B	; 11
     5ac:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     5b0:	ef e6       	ldi	r30, 0x6F	; 111
     5b2:	f0 e0       	ldi	r31, 0x00	; 0
     5b4:	80 81       	ld	r24, Z
     5b6:	82 60       	ori	r24, 0x02	; 2
     5b8:	80 83       	st	Z, r24
     5ba:	a0 91 7d 07 	lds	r26, 0x077D	; 0x80077d <pxCurrentTCB>
     5be:	b0 91 7e 07 	lds	r27, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
     5c2:	cd 91       	ld	r28, X+
     5c4:	cd bf       	out	0x3d, r28	; 61
     5c6:	dd 91       	ld	r29, X+
     5c8:	de bf       	out	0x3e, r29	; 62
     5ca:	ff 91       	pop	r31
     5cc:	ef 91       	pop	r30
     5ce:	df 91       	pop	r29
     5d0:	cf 91       	pop	r28
     5d2:	bf 91       	pop	r27
     5d4:	af 91       	pop	r26
     5d6:	9f 91       	pop	r25
     5d8:	8f 91       	pop	r24
     5da:	7f 91       	pop	r23
     5dc:	6f 91       	pop	r22
     5de:	5f 91       	pop	r21
     5e0:	4f 91       	pop	r20
     5e2:	3f 91       	pop	r19
     5e4:	2f 91       	pop	r18
     5e6:	1f 91       	pop	r17
     5e8:	0f 91       	pop	r16
     5ea:	ff 90       	pop	r15
     5ec:	ef 90       	pop	r14
     5ee:	df 90       	pop	r13
     5f0:	cf 90       	pop	r12
     5f2:	bf 90       	pop	r11
     5f4:	af 90       	pop	r10
     5f6:	9f 90       	pop	r9
     5f8:	8f 90       	pop	r8
     5fa:	7f 90       	pop	r7
     5fc:	6f 90       	pop	r6
     5fe:	5f 90       	pop	r5
     600:	4f 90       	pop	r4
     602:	3f 90       	pop	r3
     604:	2f 90       	pop	r2
     606:	1f 90       	pop	r1
     608:	0f 90       	pop	r0
     60a:	0f be       	out	0x3f, r0	; 63
     60c:	0f 90       	pop	r0
     60e:	08 95       	ret
     610:	81 e0       	ldi	r24, 0x01	; 1
     612:	08 95       	ret

00000614 <vPortYield>:
     614:	0f 92       	push	r0
     616:	0f b6       	in	r0, 0x3f	; 63
     618:	f8 94       	cli
     61a:	0f 92       	push	r0
     61c:	1f 92       	push	r1
     61e:	11 24       	eor	r1, r1
     620:	2f 92       	push	r2
     622:	3f 92       	push	r3
     624:	4f 92       	push	r4
     626:	5f 92       	push	r5
     628:	6f 92       	push	r6
     62a:	7f 92       	push	r7
     62c:	8f 92       	push	r8
     62e:	9f 92       	push	r9
     630:	af 92       	push	r10
     632:	bf 92       	push	r11
     634:	cf 92       	push	r12
     636:	df 92       	push	r13
     638:	ef 92       	push	r14
     63a:	ff 92       	push	r15
     63c:	0f 93       	push	r16
     63e:	1f 93       	push	r17
     640:	2f 93       	push	r18
     642:	3f 93       	push	r19
     644:	4f 93       	push	r20
     646:	5f 93       	push	r21
     648:	6f 93       	push	r22
     64a:	7f 93       	push	r23
     64c:	8f 93       	push	r24
     64e:	9f 93       	push	r25
     650:	af 93       	push	r26
     652:	bf 93       	push	r27
     654:	cf 93       	push	r28
     656:	df 93       	push	r29
     658:	ef 93       	push	r30
     65a:	ff 93       	push	r31
     65c:	a0 91 7d 07 	lds	r26, 0x077D	; 0x80077d <pxCurrentTCB>
     660:	b0 91 7e 07 	lds	r27, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
     664:	0d b6       	in	r0, 0x3d	; 61
     666:	0d 92       	st	X+, r0
     668:	0e b6       	in	r0, 0x3e	; 62
     66a:	0d 92       	st	X+, r0
     66c:	0e 94 fb 09 	call	0x13f6	; 0x13f6 <vTaskSwitchContext>
     670:	a0 91 7d 07 	lds	r26, 0x077D	; 0x80077d <pxCurrentTCB>
     674:	b0 91 7e 07 	lds	r27, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
     678:	cd 91       	ld	r28, X+
     67a:	cd bf       	out	0x3d, r28	; 61
     67c:	dd 91       	ld	r29, X+
     67e:	de bf       	out	0x3e, r29	; 62
     680:	ff 91       	pop	r31
     682:	ef 91       	pop	r30
     684:	df 91       	pop	r29
     686:	cf 91       	pop	r28
     688:	bf 91       	pop	r27
     68a:	af 91       	pop	r26
     68c:	9f 91       	pop	r25
     68e:	8f 91       	pop	r24
     690:	7f 91       	pop	r23
     692:	6f 91       	pop	r22
     694:	5f 91       	pop	r21
     696:	4f 91       	pop	r20
     698:	3f 91       	pop	r19
     69a:	2f 91       	pop	r18
     69c:	1f 91       	pop	r17
     69e:	0f 91       	pop	r16
     6a0:	ff 90       	pop	r15
     6a2:	ef 90       	pop	r14
     6a4:	df 90       	pop	r13
     6a6:	cf 90       	pop	r12
     6a8:	bf 90       	pop	r11
     6aa:	af 90       	pop	r10
     6ac:	9f 90       	pop	r9
     6ae:	8f 90       	pop	r8
     6b0:	7f 90       	pop	r7
     6b2:	6f 90       	pop	r6
     6b4:	5f 90       	pop	r5
     6b6:	4f 90       	pop	r4
     6b8:	3f 90       	pop	r3
     6ba:	2f 90       	pop	r2
     6bc:	1f 90       	pop	r1
     6be:	0f 90       	pop	r0
     6c0:	0f be       	out	0x3f, r0	; 63
     6c2:	0f 90       	pop	r0
     6c4:	08 95       	ret

000006c6 <vPortYieldFromTick>:
     6c6:	0f 92       	push	r0
     6c8:	0f b6       	in	r0, 0x3f	; 63
     6ca:	f8 94       	cli
     6cc:	0f 92       	push	r0
     6ce:	1f 92       	push	r1
     6d0:	11 24       	eor	r1, r1
     6d2:	2f 92       	push	r2
     6d4:	3f 92       	push	r3
     6d6:	4f 92       	push	r4
     6d8:	5f 92       	push	r5
     6da:	6f 92       	push	r6
     6dc:	7f 92       	push	r7
     6de:	8f 92       	push	r8
     6e0:	9f 92       	push	r9
     6e2:	af 92       	push	r10
     6e4:	bf 92       	push	r11
     6e6:	cf 92       	push	r12
     6e8:	df 92       	push	r13
     6ea:	ef 92       	push	r14
     6ec:	ff 92       	push	r15
     6ee:	0f 93       	push	r16
     6f0:	1f 93       	push	r17
     6f2:	2f 93       	push	r18
     6f4:	3f 93       	push	r19
     6f6:	4f 93       	push	r20
     6f8:	5f 93       	push	r21
     6fa:	6f 93       	push	r22
     6fc:	7f 93       	push	r23
     6fe:	8f 93       	push	r24
     700:	9f 93       	push	r25
     702:	af 93       	push	r26
     704:	bf 93       	push	r27
     706:	cf 93       	push	r28
     708:	df 93       	push	r29
     70a:	ef 93       	push	r30
     70c:	ff 93       	push	r31
     70e:	a0 91 7d 07 	lds	r26, 0x077D	; 0x80077d <pxCurrentTCB>
     712:	b0 91 7e 07 	lds	r27, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
     716:	0d b6       	in	r0, 0x3d	; 61
     718:	0d 92       	st	X+, r0
     71a:	0e b6       	in	r0, 0x3e	; 62
     71c:	0d 92       	st	X+, r0
     71e:	0e 94 5f 08 	call	0x10be	; 0x10be <xTaskIncrementTick>
     722:	81 11       	cpse	r24, r1
     724:	0e 94 fb 09 	call	0x13f6	; 0x13f6 <vTaskSwitchContext>
     728:	a0 91 7d 07 	lds	r26, 0x077D	; 0x80077d <pxCurrentTCB>
     72c:	b0 91 7e 07 	lds	r27, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
     730:	cd 91       	ld	r28, X+
     732:	cd bf       	out	0x3d, r28	; 61
     734:	dd 91       	ld	r29, X+
     736:	de bf       	out	0x3e, r29	; 62
     738:	ff 91       	pop	r31
     73a:	ef 91       	pop	r30
     73c:	df 91       	pop	r29
     73e:	cf 91       	pop	r28
     740:	bf 91       	pop	r27
     742:	af 91       	pop	r26
     744:	9f 91       	pop	r25
     746:	8f 91       	pop	r24
     748:	7f 91       	pop	r23
     74a:	6f 91       	pop	r22
     74c:	5f 91       	pop	r21
     74e:	4f 91       	pop	r20
     750:	3f 91       	pop	r19
     752:	2f 91       	pop	r18
     754:	1f 91       	pop	r17
     756:	0f 91       	pop	r16
     758:	ff 90       	pop	r15
     75a:	ef 90       	pop	r14
     75c:	df 90       	pop	r13
     75e:	cf 90       	pop	r12
     760:	bf 90       	pop	r11
     762:	af 90       	pop	r10
     764:	9f 90       	pop	r9
     766:	8f 90       	pop	r8
     768:	7f 90       	pop	r7
     76a:	6f 90       	pop	r6
     76c:	5f 90       	pop	r5
     76e:	4f 90       	pop	r4
     770:	3f 90       	pop	r3
     772:	2f 90       	pop	r2
     774:	1f 90       	pop	r1
     776:	0f 90       	pop	r0
     778:	0f be       	out	0x3f, r0	; 63
     77a:	0f 90       	pop	r0
     77c:	08 95       	ret

0000077e <__vector_11>:
     77e:	0e 94 63 03 	call	0x6c6	; 0x6c6 <vPortYieldFromTick>
     782:	18 95       	reti

00000784 <pvPortMalloc>:
     784:	0f 93       	push	r16
     786:	1f 93       	push	r17
     788:	cf 93       	push	r28
     78a:	df 93       	push	r29
     78c:	ec 01       	movw	r28, r24
     78e:	0e 94 59 08 	call	0x10b2	; 0x10b2 <vTaskSuspendAll>
     792:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__data_end>
     796:	81 11       	cpse	r24, r1
     798:	1d c0       	rjmp	.+58     	; 0x7d4 <pvPortMalloc+0x50>
     79a:	eb e3       	ldi	r30, 0x3B	; 59
     79c:	f1 e0       	ldi	r31, 0x01	; 1
     79e:	80 e4       	ldi	r24, 0x40	; 64
     7a0:	91 e0       	ldi	r25, 0x01	; 1
     7a2:	91 83       	std	Z+1, r25	; 0x01
     7a4:	80 83       	st	Z, r24
     7a6:	13 82       	std	Z+3, r1	; 0x03
     7a8:	12 82       	std	Z+2, r1	; 0x02
     7aa:	e7 e3       	ldi	r30, 0x37	; 55
     7ac:	f1 e0       	ldi	r31, 0x01	; 1
     7ae:	8b ed       	ldi	r24, 0xDB	; 219
     7b0:	95 e0       	ldi	r25, 0x05	; 5
     7b2:	93 83       	std	Z+3, r25	; 0x03
     7b4:	82 83       	std	Z+2, r24	; 0x02
     7b6:	11 82       	std	Z+1, r1	; 0x01
     7b8:	10 82       	st	Z, r1
     7ba:	af e3       	ldi	r26, 0x3F	; 63
     7bc:	b1 e0       	ldi	r27, 0x01	; 1
     7be:	14 96       	adiw	r26, 0x04	; 4
     7c0:	9c 93       	st	X, r25
     7c2:	8e 93       	st	-X, r24
     7c4:	13 97       	sbiw	r26, 0x03	; 3
     7c6:	12 96       	adiw	r26, 0x02	; 2
     7c8:	fc 93       	st	X, r31
     7ca:	ee 93       	st	-X, r30
     7cc:	11 97       	sbiw	r26, 0x01	; 1
     7ce:	81 e0       	ldi	r24, 0x01	; 1
     7d0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__data_end>
     7d4:	20 97       	sbiw	r28, 0x00	; 0
     7d6:	09 f4       	brne	.+2      	; 0x7da <pvPortMalloc+0x56>
     7d8:	5f c0       	rjmp	.+190    	; 0x898 <pvPortMalloc+0x114>
     7da:	9e 01       	movw	r18, r28
     7dc:	2c 5f       	subi	r18, 0xFC	; 252
     7de:	3f 4f       	sbci	r19, 0xFF	; 255
     7e0:	23 96       	adiw	r28, 0x03	; 3
     7e2:	ca 3d       	cpi	r28, 0xDA	; 218
     7e4:	d5 40       	sbci	r29, 0x05	; 5
     7e6:	08 f0       	brcs	.+2      	; 0x7ea <pvPortMalloc+0x66>
     7e8:	5a c0       	rjmp	.+180    	; 0x89e <pvPortMalloc+0x11a>
     7ea:	e0 91 3b 01 	lds	r30, 0x013B	; 0x80013b <xStart>
     7ee:	f0 91 3c 01 	lds	r31, 0x013C	; 0x80013c <xStart+0x1>
     7f2:	ab e3       	ldi	r26, 0x3B	; 59
     7f4:	b1 e0       	ldi	r27, 0x01	; 1
     7f6:	02 c0       	rjmp	.+4      	; 0x7fc <pvPortMalloc+0x78>
     7f8:	df 01       	movw	r26, r30
     7fa:	fc 01       	movw	r30, r24
     7fc:	82 81       	ldd	r24, Z+2	; 0x02
     7fe:	93 81       	ldd	r25, Z+3	; 0x03
     800:	82 17       	cp	r24, r18
     802:	93 07       	cpc	r25, r19
     804:	20 f4       	brcc	.+8      	; 0x80e <pvPortMalloc+0x8a>
     806:	80 81       	ld	r24, Z
     808:	91 81       	ldd	r25, Z+1	; 0x01
     80a:	00 97       	sbiw	r24, 0x00	; 0
     80c:	a9 f7       	brne	.-22     	; 0x7f8 <pvPortMalloc+0x74>
     80e:	c1 e0       	ldi	r28, 0x01	; 1
     810:	e7 33       	cpi	r30, 0x37	; 55
     812:	fc 07       	cpc	r31, r28
     814:	09 f4       	brne	.+2      	; 0x818 <pvPortMalloc+0x94>
     816:	46 c0       	rjmp	.+140    	; 0x8a4 <pvPortMalloc+0x120>
     818:	cd 91       	ld	r28, X+
     81a:	dc 91       	ld	r29, X
     81c:	11 97       	sbiw	r26, 0x01	; 1
     81e:	8e 01       	movw	r16, r28
     820:	0c 5f       	subi	r16, 0xFC	; 252
     822:	1f 4f       	sbci	r17, 0xFF	; 255
     824:	80 81       	ld	r24, Z
     826:	91 81       	ldd	r25, Z+1	; 0x01
     828:	8d 93       	st	X+, r24
     82a:	9c 93       	st	X, r25
     82c:	82 81       	ldd	r24, Z+2	; 0x02
     82e:	93 81       	ldd	r25, Z+3	; 0x03
     830:	82 1b       	sub	r24, r18
     832:	93 0b       	sbc	r25, r19
     834:	89 30       	cpi	r24, 0x09	; 9
     836:	91 05       	cpc	r25, r1
     838:	10 f1       	brcs	.+68     	; 0x87e <pvPortMalloc+0xfa>
     83a:	bf 01       	movw	r22, r30
     83c:	62 0f       	add	r22, r18
     83e:	73 1f       	adc	r23, r19
     840:	db 01       	movw	r26, r22
     842:	13 96       	adiw	r26, 0x03	; 3
     844:	9c 93       	st	X, r25
     846:	8e 93       	st	-X, r24
     848:	12 97       	sbiw	r26, 0x02	; 2
     84a:	33 83       	std	Z+3, r19	; 0x03
     84c:	22 83       	std	Z+2, r18	; 0x02
     84e:	12 96       	adiw	r26, 0x02	; 2
     850:	4d 91       	ld	r20, X+
     852:	5c 91       	ld	r21, X
     854:	13 97       	sbiw	r26, 0x03	; 3
     856:	8b e3       	ldi	r24, 0x3B	; 59
     858:	91 e0       	ldi	r25, 0x01	; 1
     85a:	01 c0       	rjmp	.+2      	; 0x85e <pvPortMalloc+0xda>
     85c:	cd 01       	movw	r24, r26
     85e:	ec 01       	movw	r28, r24
     860:	a8 81       	ld	r26, Y
     862:	b9 81       	ldd	r27, Y+1	; 0x01
     864:	12 96       	adiw	r26, 0x02	; 2
     866:	2d 91       	ld	r18, X+
     868:	3c 91       	ld	r19, X
     86a:	13 97       	sbiw	r26, 0x03	; 3
     86c:	24 17       	cp	r18, r20
     86e:	35 07       	cpc	r19, r21
     870:	a8 f3       	brcs	.-22     	; 0x85c <pvPortMalloc+0xd8>
     872:	eb 01       	movw	r28, r22
     874:	b9 83       	std	Y+1, r27	; 0x01
     876:	a8 83       	st	Y, r26
     878:	dc 01       	movw	r26, r24
     87a:	6d 93       	st	X+, r22
     87c:	7c 93       	st	X, r23
     87e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     882:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     886:	22 81       	ldd	r18, Z+2	; 0x02
     888:	33 81       	ldd	r19, Z+3	; 0x03
     88a:	82 1b       	sub	r24, r18
     88c:	93 0b       	sbc	r25, r19
     88e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     892:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     896:	08 c0       	rjmp	.+16     	; 0x8a8 <pvPortMalloc+0x124>
     898:	00 e0       	ldi	r16, 0x00	; 0
     89a:	10 e0       	ldi	r17, 0x00	; 0
     89c:	05 c0       	rjmp	.+10     	; 0x8a8 <pvPortMalloc+0x124>
     89e:	00 e0       	ldi	r16, 0x00	; 0
     8a0:	10 e0       	ldi	r17, 0x00	; 0
     8a2:	02 c0       	rjmp	.+4      	; 0x8a8 <pvPortMalloc+0x124>
     8a4:	00 e0       	ldi	r16, 0x00	; 0
     8a6:	10 e0       	ldi	r17, 0x00	; 0
     8a8:	0e 94 1c 09 	call	0x1238	; 0x1238 <xTaskResumeAll>
     8ac:	c8 01       	movw	r24, r16
     8ae:	df 91       	pop	r29
     8b0:	cf 91       	pop	r28
     8b2:	1f 91       	pop	r17
     8b4:	0f 91       	pop	r16
     8b6:	08 95       	ret

000008b8 <vPortFree>:
     8b8:	0f 93       	push	r16
     8ba:	1f 93       	push	r17
     8bc:	cf 93       	push	r28
     8be:	df 93       	push	r29
     8c0:	00 97       	sbiw	r24, 0x00	; 0
     8c2:	41 f1       	breq	.+80     	; 0x914 <__stack+0x15>
     8c4:	ec 01       	movw	r28, r24
     8c6:	8c 01       	movw	r16, r24
     8c8:	04 50       	subi	r16, 0x04	; 4
     8ca:	11 09       	sbc	r17, r1
     8cc:	0e 94 59 08 	call	0x10b2	; 0x10b2 <vTaskSuspendAll>
     8d0:	f8 01       	movw	r30, r16
     8d2:	42 81       	ldd	r20, Z+2	; 0x02
     8d4:	53 81       	ldd	r21, Z+3	; 0x03
     8d6:	ab e3       	ldi	r26, 0x3B	; 59
     8d8:	b1 e0       	ldi	r27, 0x01	; 1
     8da:	01 c0       	rjmp	.+2      	; 0x8de <vPortFree+0x26>
     8dc:	df 01       	movw	r26, r30
     8de:	ed 91       	ld	r30, X+
     8e0:	fc 91       	ld	r31, X
     8e2:	11 97       	sbiw	r26, 0x01	; 1
     8e4:	22 81       	ldd	r18, Z+2	; 0x02
     8e6:	33 81       	ldd	r19, Z+3	; 0x03
     8e8:	24 17       	cp	r18, r20
     8ea:	35 07       	cpc	r19, r21
     8ec:	b8 f3       	brcs	.-18     	; 0x8dc <vPortFree+0x24>
     8ee:	24 97       	sbiw	r28, 0x04	; 4
     8f0:	f9 83       	std	Y+1, r31	; 0x01
     8f2:	e8 83       	st	Y, r30
     8f4:	0d 93       	st	X+, r16
     8f6:	1c 93       	st	X, r17
     8f8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     8fc:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     900:	8a 81       	ldd	r24, Y+2	; 0x02
     902:	9b 81       	ldd	r25, Y+3	; 0x03
     904:	82 0f       	add	r24, r18
     906:	93 1f       	adc	r25, r19
     908:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     90c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     910:	0e 94 1c 09 	call	0x1238	; 0x1238 <xTaskResumeAll>
     914:	df 91       	pop	r29
     916:	cf 91       	pop	r28
     918:	1f 91       	pop	r17
     91a:	0f 91       	pop	r16
     91c:	08 95       	ret

0000091e <prvCopyDataToQueue>:
     91e:	1f 93       	push	r17
     920:	cf 93       	push	r28
     922:	df 93       	push	r29
     924:	ec 01       	movw	r28, r24
     926:	14 2f       	mov	r17, r20
     928:	4c 8d       	ldd	r20, Y+28	; 0x1c
     92a:	41 11       	cpse	r20, r1
     92c:	0c c0       	rjmp	.+24     	; 0x946 <prvCopyDataToQueue+0x28>
     92e:	88 81       	ld	r24, Y
     930:	99 81       	ldd	r25, Y+1	; 0x01
     932:	89 2b       	or	r24, r25
     934:	09 f0       	breq	.+2      	; 0x938 <prvCopyDataToQueue+0x1a>
     936:	45 c0       	rjmp	.+138    	; 0x9c2 <prvCopyDataToQueue+0xa4>
     938:	8a 81       	ldd	r24, Y+2	; 0x02
     93a:	9b 81       	ldd	r25, Y+3	; 0x03
     93c:	0e 94 86 0b 	call	0x170c	; 0x170c <xTaskPriorityDisinherit>
     940:	1b 82       	std	Y+3, r1	; 0x03
     942:	1a 82       	std	Y+2, r1	; 0x02
     944:	45 c0       	rjmp	.+138    	; 0x9d0 <prvCopyDataToQueue+0xb2>
     946:	11 11       	cpse	r17, r1
     948:	17 c0       	rjmp	.+46     	; 0x978 <prvCopyDataToQueue+0x5a>
     94a:	50 e0       	ldi	r21, 0x00	; 0
     94c:	8c 81       	ldd	r24, Y+4	; 0x04
     94e:	9d 81       	ldd	r25, Y+5	; 0x05
     950:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <memcpy>
     954:	2c 8d       	ldd	r18, Y+28	; 0x1c
     956:	8c 81       	ldd	r24, Y+4	; 0x04
     958:	9d 81       	ldd	r25, Y+5	; 0x05
     95a:	82 0f       	add	r24, r18
     95c:	91 1d       	adc	r25, r1
     95e:	9d 83       	std	Y+5, r25	; 0x05
     960:	8c 83       	std	Y+4, r24	; 0x04
     962:	2a 81       	ldd	r18, Y+2	; 0x02
     964:	3b 81       	ldd	r19, Y+3	; 0x03
     966:	82 17       	cp	r24, r18
     968:	93 07       	cpc	r25, r19
     96a:	68 f1       	brcs	.+90     	; 0x9c6 <prvCopyDataToQueue+0xa8>
     96c:	88 81       	ld	r24, Y
     96e:	99 81       	ldd	r25, Y+1	; 0x01
     970:	9d 83       	std	Y+5, r25	; 0x05
     972:	8c 83       	std	Y+4, r24	; 0x04
     974:	80 e0       	ldi	r24, 0x00	; 0
     976:	2c c0       	rjmp	.+88     	; 0x9d0 <prvCopyDataToQueue+0xb2>
     978:	50 e0       	ldi	r21, 0x00	; 0
     97a:	8e 81       	ldd	r24, Y+6	; 0x06
     97c:	9f 81       	ldd	r25, Y+7	; 0x07
     97e:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <memcpy>
     982:	8c 8d       	ldd	r24, Y+28	; 0x1c
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	91 95       	neg	r25
     988:	81 95       	neg	r24
     98a:	91 09       	sbc	r25, r1
     98c:	2e 81       	ldd	r18, Y+6	; 0x06
     98e:	3f 81       	ldd	r19, Y+7	; 0x07
     990:	28 0f       	add	r18, r24
     992:	39 1f       	adc	r19, r25
     994:	3f 83       	std	Y+7, r19	; 0x07
     996:	2e 83       	std	Y+6, r18	; 0x06
     998:	48 81       	ld	r20, Y
     99a:	59 81       	ldd	r21, Y+1	; 0x01
     99c:	24 17       	cp	r18, r20
     99e:	35 07       	cpc	r19, r21
     9a0:	30 f4       	brcc	.+12     	; 0x9ae <prvCopyDataToQueue+0x90>
     9a2:	2a 81       	ldd	r18, Y+2	; 0x02
     9a4:	3b 81       	ldd	r19, Y+3	; 0x03
     9a6:	82 0f       	add	r24, r18
     9a8:	93 1f       	adc	r25, r19
     9aa:	9f 83       	std	Y+7, r25	; 0x07
     9ac:	8e 83       	std	Y+6, r24	; 0x06
     9ae:	12 30       	cpi	r17, 0x02	; 2
     9b0:	61 f4       	brne	.+24     	; 0x9ca <prvCopyDataToQueue+0xac>
     9b2:	8a 8d       	ldd	r24, Y+26	; 0x1a
     9b4:	88 23       	and	r24, r24
     9b6:	59 f0       	breq	.+22     	; 0x9ce <prvCopyDataToQueue+0xb0>
     9b8:	8a 8d       	ldd	r24, Y+26	; 0x1a
     9ba:	81 50       	subi	r24, 0x01	; 1
     9bc:	8a 8f       	std	Y+26, r24	; 0x1a
     9be:	80 e0       	ldi	r24, 0x00	; 0
     9c0:	07 c0       	rjmp	.+14     	; 0x9d0 <prvCopyDataToQueue+0xb2>
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	05 c0       	rjmp	.+10     	; 0x9d0 <prvCopyDataToQueue+0xb2>
     9c6:	80 e0       	ldi	r24, 0x00	; 0
     9c8:	03 c0       	rjmp	.+6      	; 0x9d0 <prvCopyDataToQueue+0xb2>
     9ca:	80 e0       	ldi	r24, 0x00	; 0
     9cc:	01 c0       	rjmp	.+2      	; 0x9d0 <prvCopyDataToQueue+0xb2>
     9ce:	80 e0       	ldi	r24, 0x00	; 0
     9d0:	9a 8d       	ldd	r25, Y+26	; 0x1a
     9d2:	9f 5f       	subi	r25, 0xFF	; 255
     9d4:	9a 8f       	std	Y+26, r25	; 0x1a
     9d6:	df 91       	pop	r29
     9d8:	cf 91       	pop	r28
     9da:	1f 91       	pop	r17
     9dc:	08 95       	ret

000009de <prvCopyDataFromQueue>:
     9de:	fc 01       	movw	r30, r24
     9e0:	44 8d       	ldd	r20, Z+28	; 0x1c
     9e2:	44 23       	and	r20, r20
     9e4:	a9 f0       	breq	.+42     	; 0xa10 <prvCopyDataFromQueue+0x32>
     9e6:	50 e0       	ldi	r21, 0x00	; 0
     9e8:	26 81       	ldd	r18, Z+6	; 0x06
     9ea:	37 81       	ldd	r19, Z+7	; 0x07
     9ec:	24 0f       	add	r18, r20
     9ee:	35 1f       	adc	r19, r21
     9f0:	37 83       	std	Z+7, r19	; 0x07
     9f2:	26 83       	std	Z+6, r18	; 0x06
     9f4:	82 81       	ldd	r24, Z+2	; 0x02
     9f6:	93 81       	ldd	r25, Z+3	; 0x03
     9f8:	28 17       	cp	r18, r24
     9fa:	39 07       	cpc	r19, r25
     9fc:	20 f0       	brcs	.+8      	; 0xa06 <prvCopyDataFromQueue+0x28>
     9fe:	80 81       	ld	r24, Z
     a00:	91 81       	ldd	r25, Z+1	; 0x01
     a02:	97 83       	std	Z+7, r25	; 0x07
     a04:	86 83       	std	Z+6, r24	; 0x06
     a06:	cb 01       	movw	r24, r22
     a08:	66 81       	ldd	r22, Z+6	; 0x06
     a0a:	77 81       	ldd	r23, Z+7	; 0x07
     a0c:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <memcpy>
     a10:	08 95       	ret

00000a12 <prvUnlockQueue>:
     a12:	0f 93       	push	r16
     a14:	1f 93       	push	r17
     a16:	cf 93       	push	r28
     a18:	df 93       	push	r29
     a1a:	ec 01       	movw	r28, r24
     a1c:	0f b6       	in	r0, 0x3f	; 63
     a1e:	f8 94       	cli
     a20:	0f 92       	push	r0
     a22:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a24:	18 16       	cp	r1, r24
     a26:	bc f4       	brge	.+46     	; 0xa56 <prvUnlockQueue+0x44>
     a28:	89 89       	ldd	r24, Y+17	; 0x11
     a2a:	81 11       	cpse	r24, r1
     a2c:	05 c0       	rjmp	.+10     	; 0xa38 <prvUnlockQueue+0x26>
     a2e:	13 c0       	rjmp	.+38     	; 0xa56 <prvUnlockQueue+0x44>
     a30:	89 89       	ldd	r24, Y+17	; 0x11
     a32:	81 11       	cpse	r24, r1
     a34:	04 c0       	rjmp	.+8      	; 0xa3e <prvUnlockQueue+0x2c>
     a36:	0f c0       	rjmp	.+30     	; 0xa56 <prvUnlockQueue+0x44>
     a38:	8e 01       	movw	r16, r28
     a3a:	0f 5e       	subi	r16, 0xEF	; 239
     a3c:	1f 4f       	sbci	r17, 0xFF	; 255
     a3e:	c8 01       	movw	r24, r16
     a40:	0e 94 94 0a 	call	0x1528	; 0x1528 <xTaskRemoveFromEventList>
     a44:	81 11       	cpse	r24, r1
     a46:	0e 94 20 0b 	call	0x1640	; 0x1640 <vTaskMissedYield>
     a4a:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a4c:	81 50       	subi	r24, 0x01	; 1
     a4e:	8e 8f       	std	Y+30, r24	; 0x1e
     a50:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a52:	18 16       	cp	r1, r24
     a54:	6c f3       	brlt	.-38     	; 0xa30 <prvUnlockQueue+0x1e>
     a56:	8f ef       	ldi	r24, 0xFF	; 255
     a58:	8e 8f       	std	Y+30, r24	; 0x1e
     a5a:	0f 90       	pop	r0
     a5c:	0f be       	out	0x3f, r0	; 63
     a5e:	0f b6       	in	r0, 0x3f	; 63
     a60:	f8 94       	cli
     a62:	0f 92       	push	r0
     a64:	8d 8d       	ldd	r24, Y+29	; 0x1d
     a66:	18 16       	cp	r1, r24
     a68:	bc f4       	brge	.+46     	; 0xa98 <prvUnlockQueue+0x86>
     a6a:	88 85       	ldd	r24, Y+8	; 0x08
     a6c:	81 11       	cpse	r24, r1
     a6e:	05 c0       	rjmp	.+10     	; 0xa7a <prvUnlockQueue+0x68>
     a70:	13 c0       	rjmp	.+38     	; 0xa98 <prvUnlockQueue+0x86>
     a72:	88 85       	ldd	r24, Y+8	; 0x08
     a74:	81 11       	cpse	r24, r1
     a76:	04 c0       	rjmp	.+8      	; 0xa80 <prvUnlockQueue+0x6e>
     a78:	0f c0       	rjmp	.+30     	; 0xa98 <prvUnlockQueue+0x86>
     a7a:	8e 01       	movw	r16, r28
     a7c:	08 5f       	subi	r16, 0xF8	; 248
     a7e:	1f 4f       	sbci	r17, 0xFF	; 255
     a80:	c8 01       	movw	r24, r16
     a82:	0e 94 94 0a 	call	0x1528	; 0x1528 <xTaskRemoveFromEventList>
     a86:	81 11       	cpse	r24, r1
     a88:	0e 94 20 0b 	call	0x1640	; 0x1640 <vTaskMissedYield>
     a8c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     a8e:	81 50       	subi	r24, 0x01	; 1
     a90:	8d 8f       	std	Y+29, r24	; 0x1d
     a92:	8d 8d       	ldd	r24, Y+29	; 0x1d
     a94:	18 16       	cp	r1, r24
     a96:	6c f3       	brlt	.-38     	; 0xa72 <prvUnlockQueue+0x60>
     a98:	8f ef       	ldi	r24, 0xFF	; 255
     a9a:	8d 8f       	std	Y+29, r24	; 0x1d
     a9c:	0f 90       	pop	r0
     a9e:	0f be       	out	0x3f, r0	; 63
     aa0:	df 91       	pop	r29
     aa2:	cf 91       	pop	r28
     aa4:	1f 91       	pop	r17
     aa6:	0f 91       	pop	r16
     aa8:	08 95       	ret

00000aaa <xQueueGenericSend>:
     aaa:	9f 92       	push	r9
     aac:	af 92       	push	r10
     aae:	bf 92       	push	r11
     ab0:	cf 92       	push	r12
     ab2:	df 92       	push	r13
     ab4:	ef 92       	push	r14
     ab6:	ff 92       	push	r15
     ab8:	0f 93       	push	r16
     aba:	1f 93       	push	r17
     abc:	cf 93       	push	r28
     abe:	df 93       	push	r29
     ac0:	00 d0       	rcall	.+0      	; 0xac2 <xQueueGenericSend+0x18>
     ac2:	00 d0       	rcall	.+0      	; 0xac4 <xQueueGenericSend+0x1a>
     ac4:	1f 92       	push	r1
     ac6:	cd b7       	in	r28, 0x3d	; 61
     ac8:	de b7       	in	r29, 0x3e	; 62
     aca:	8c 01       	movw	r16, r24
     acc:	6b 01       	movw	r12, r22
     ace:	5d 83       	std	Y+5, r21	; 0x05
     ad0:	4c 83       	std	Y+4, r20	; 0x04
     ad2:	a2 2e       	mov	r10, r18
     ad4:	b1 2c       	mov	r11, r1
     ad6:	99 24       	eor	r9, r9
     ad8:	93 94       	inc	r9
     ada:	7c 01       	movw	r14, r24
     adc:	88 e0       	ldi	r24, 0x08	; 8
     ade:	e8 0e       	add	r14, r24
     ae0:	f1 1c       	adc	r15, r1
     ae2:	0f b6       	in	r0, 0x3f	; 63
     ae4:	f8 94       	cli
     ae6:	0f 92       	push	r0
     ae8:	f8 01       	movw	r30, r16
     aea:	92 8d       	ldd	r25, Z+26	; 0x1a
     aec:	83 8d       	ldd	r24, Z+27	; 0x1b
     aee:	98 17       	cp	r25, r24
     af0:	18 f0       	brcs	.+6      	; 0xaf8 <xQueueGenericSend+0x4e>
     af2:	f2 e0       	ldi	r31, 0x02	; 2
     af4:	af 12       	cpse	r10, r31
     af6:	19 c0       	rjmp	.+50     	; 0xb2a <xQueueGenericSend+0x80>
     af8:	4a 2d       	mov	r20, r10
     afa:	b6 01       	movw	r22, r12
     afc:	c8 01       	movw	r24, r16
     afe:	0e 94 8f 04 	call	0x91e	; 0x91e <prvCopyDataToQueue>
     b02:	f8 01       	movw	r30, r16
     b04:	91 89       	ldd	r25, Z+17	; 0x11
     b06:	99 23       	and	r25, r25
     b08:	49 f0       	breq	.+18     	; 0xb1c <xQueueGenericSend+0x72>
     b0a:	c8 01       	movw	r24, r16
     b0c:	41 96       	adiw	r24, 0x11	; 17
     b0e:	0e 94 94 0a 	call	0x1528	; 0x1528 <xTaskRemoveFromEventList>
     b12:	81 30       	cpi	r24, 0x01	; 1
     b14:	31 f4       	brne	.+12     	; 0xb22 <xQueueGenericSend+0x78>
     b16:	0e 94 0a 03 	call	0x614	; 0x614 <vPortYield>
     b1a:	03 c0       	rjmp	.+6      	; 0xb22 <xQueueGenericSend+0x78>
     b1c:	81 11       	cpse	r24, r1
     b1e:	0e 94 0a 03 	call	0x614	; 0x614 <vPortYield>
     b22:	0f 90       	pop	r0
     b24:	0f be       	out	0x3f, r0	; 63
     b26:	81 e0       	ldi	r24, 0x01	; 1
     b28:	50 c0       	rjmp	.+160    	; 0xbca <xQueueGenericSend+0x120>
     b2a:	8c 81       	ldd	r24, Y+4	; 0x04
     b2c:	9d 81       	ldd	r25, Y+5	; 0x05
     b2e:	89 2b       	or	r24, r25
     b30:	21 f4       	brne	.+8      	; 0xb3a <xQueueGenericSend+0x90>
     b32:	0f 90       	pop	r0
     b34:	0f be       	out	0x3f, r0	; 63
     b36:	80 e0       	ldi	r24, 0x00	; 0
     b38:	48 c0       	rjmp	.+144    	; 0xbca <xQueueGenericSend+0x120>
     b3a:	b1 10       	cpse	r11, r1
     b3c:	05 c0       	rjmp	.+10     	; 0xb48 <xQueueGenericSend+0x9e>
     b3e:	ce 01       	movw	r24, r28
     b40:	01 96       	adiw	r24, 0x01	; 1
     b42:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <vTaskSetTimeOutState>
     b46:	b9 2c       	mov	r11, r9
     b48:	0f 90       	pop	r0
     b4a:	0f be       	out	0x3f, r0	; 63
     b4c:	0e 94 59 08 	call	0x10b2	; 0x10b2 <vTaskSuspendAll>
     b50:	0f b6       	in	r0, 0x3f	; 63
     b52:	f8 94       	cli
     b54:	0f 92       	push	r0
     b56:	f8 01       	movw	r30, r16
     b58:	85 8d       	ldd	r24, Z+29	; 0x1d
     b5a:	8f 3f       	cpi	r24, 0xFF	; 255
     b5c:	09 f4       	brne	.+2      	; 0xb60 <xQueueGenericSend+0xb6>
     b5e:	15 8e       	std	Z+29, r1	; 0x1d
     b60:	f8 01       	movw	r30, r16
     b62:	86 8d       	ldd	r24, Z+30	; 0x1e
     b64:	8f 3f       	cpi	r24, 0xFF	; 255
     b66:	09 f4       	brne	.+2      	; 0xb6a <xQueueGenericSend+0xc0>
     b68:	16 8e       	std	Z+30, r1	; 0x1e
     b6a:	0f 90       	pop	r0
     b6c:	0f be       	out	0x3f, r0	; 63
     b6e:	be 01       	movw	r22, r28
     b70:	6c 5f       	subi	r22, 0xFC	; 252
     b72:	7f 4f       	sbci	r23, 0xFF	; 255
     b74:	ce 01       	movw	r24, r28
     b76:	01 96       	adiw	r24, 0x01	; 1
     b78:	0e 94 e7 0a 	call	0x15ce	; 0x15ce <xTaskCheckForTimeOut>
     b7c:	81 11       	cpse	r24, r1
     b7e:	1f c0       	rjmp	.+62     	; 0xbbe <xQueueGenericSend+0x114>
     b80:	0f b6       	in	r0, 0x3f	; 63
     b82:	f8 94       	cli
     b84:	0f 92       	push	r0
     b86:	f8 01       	movw	r30, r16
     b88:	92 8d       	ldd	r25, Z+26	; 0x1a
     b8a:	0f 90       	pop	r0
     b8c:	0f be       	out	0x3f, r0	; 63
     b8e:	83 8d       	ldd	r24, Z+27	; 0x1b
     b90:	98 13       	cpse	r25, r24
     b92:	0f c0       	rjmp	.+30     	; 0xbb2 <xQueueGenericSend+0x108>
     b94:	6c 81       	ldd	r22, Y+4	; 0x04
     b96:	7d 81       	ldd	r23, Y+5	; 0x05
     b98:	c7 01       	movw	r24, r14
     b9a:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <vTaskPlaceOnEventList>
     b9e:	c8 01       	movw	r24, r16
     ba0:	0e 94 09 05 	call	0xa12	; 0xa12 <prvUnlockQueue>
     ba4:	0e 94 1c 09 	call	0x1238	; 0x1238 <xTaskResumeAll>
     ba8:	81 11       	cpse	r24, r1
     baa:	9b cf       	rjmp	.-202    	; 0xae2 <xQueueGenericSend+0x38>
     bac:	0e 94 0a 03 	call	0x614	; 0x614 <vPortYield>
     bb0:	98 cf       	rjmp	.-208    	; 0xae2 <xQueueGenericSend+0x38>
     bb2:	c8 01       	movw	r24, r16
     bb4:	0e 94 09 05 	call	0xa12	; 0xa12 <prvUnlockQueue>
     bb8:	0e 94 1c 09 	call	0x1238	; 0x1238 <xTaskResumeAll>
     bbc:	92 cf       	rjmp	.-220    	; 0xae2 <xQueueGenericSend+0x38>
     bbe:	c8 01       	movw	r24, r16
     bc0:	0e 94 09 05 	call	0xa12	; 0xa12 <prvUnlockQueue>
     bc4:	0e 94 1c 09 	call	0x1238	; 0x1238 <xTaskResumeAll>
     bc8:	80 e0       	ldi	r24, 0x00	; 0
     bca:	0f 90       	pop	r0
     bcc:	0f 90       	pop	r0
     bce:	0f 90       	pop	r0
     bd0:	0f 90       	pop	r0
     bd2:	0f 90       	pop	r0
     bd4:	df 91       	pop	r29
     bd6:	cf 91       	pop	r28
     bd8:	1f 91       	pop	r17
     bda:	0f 91       	pop	r16
     bdc:	ff 90       	pop	r15
     bde:	ef 90       	pop	r14
     be0:	df 90       	pop	r13
     be2:	cf 90       	pop	r12
     be4:	bf 90       	pop	r11
     be6:	af 90       	pop	r10
     be8:	9f 90       	pop	r9
     bea:	08 95       	ret

00000bec <xQueueGenericReceive>:
     bec:	9f 92       	push	r9
     bee:	af 92       	push	r10
     bf0:	bf 92       	push	r11
     bf2:	cf 92       	push	r12
     bf4:	df 92       	push	r13
     bf6:	ef 92       	push	r14
     bf8:	ff 92       	push	r15
     bfa:	0f 93       	push	r16
     bfc:	1f 93       	push	r17
     bfe:	cf 93       	push	r28
     c00:	df 93       	push	r29
     c02:	00 d0       	rcall	.+0      	; 0xc04 <xQueueGenericReceive+0x18>
     c04:	00 d0       	rcall	.+0      	; 0xc06 <xQueueGenericReceive+0x1a>
     c06:	1f 92       	push	r1
     c08:	cd b7       	in	r28, 0x3d	; 61
     c0a:	de b7       	in	r29, 0x3e	; 62
     c0c:	8c 01       	movw	r16, r24
     c0e:	6b 01       	movw	r12, r22
     c10:	5d 83       	std	Y+5, r21	; 0x05
     c12:	4c 83       	std	Y+4, r20	; 0x04
     c14:	92 2e       	mov	r9, r18
     c16:	b1 2c       	mov	r11, r1
     c18:	aa 24       	eor	r10, r10
     c1a:	a3 94       	inc	r10
     c1c:	7c 01       	movw	r14, r24
     c1e:	81 e1       	ldi	r24, 0x11	; 17
     c20:	e8 0e       	add	r14, r24
     c22:	f1 1c       	adc	r15, r1
     c24:	0f b6       	in	r0, 0x3f	; 63
     c26:	f8 94       	cli
     c28:	0f 92       	push	r0
     c2a:	f8 01       	movw	r30, r16
     c2c:	82 8d       	ldd	r24, Z+26	; 0x1a
     c2e:	88 23       	and	r24, r24
     c30:	99 f1       	breq	.+102    	; 0xc98 <xQueueGenericReceive+0xac>
     c32:	e6 80       	ldd	r14, Z+6	; 0x06
     c34:	f7 80       	ldd	r15, Z+7	; 0x07
     c36:	b6 01       	movw	r22, r12
     c38:	c8 01       	movw	r24, r16
     c3a:	0e 94 ef 04 	call	0x9de	; 0x9de <prvCopyDataFromQueue>
     c3e:	91 10       	cpse	r9, r1
     c40:	1a c0       	rjmp	.+52     	; 0xc76 <xQueueGenericReceive+0x8a>
     c42:	f8 01       	movw	r30, r16
     c44:	82 8d       	ldd	r24, Z+26	; 0x1a
     c46:	81 50       	subi	r24, 0x01	; 1
     c48:	82 8f       	std	Z+26, r24	; 0x1a
     c4a:	80 81       	ld	r24, Z
     c4c:	91 81       	ldd	r25, Z+1	; 0x01
     c4e:	89 2b       	or	r24, r25
     c50:	29 f4       	brne	.+10     	; 0xc5c <xQueueGenericReceive+0x70>
     c52:	0e 94 c6 0b 	call	0x178c	; 0x178c <pvTaskIncrementMutexHeldCount>
     c56:	f8 01       	movw	r30, r16
     c58:	93 83       	std	Z+3, r25	; 0x03
     c5a:	82 83       	std	Z+2, r24	; 0x02
     c5c:	f8 01       	movw	r30, r16
     c5e:	80 85       	ldd	r24, Z+8	; 0x08
     c60:	88 23       	and	r24, r24
     c62:	b1 f0       	breq	.+44     	; 0xc90 <xQueueGenericReceive+0xa4>
     c64:	c8 01       	movw	r24, r16
     c66:	08 96       	adiw	r24, 0x08	; 8
     c68:	0e 94 94 0a 	call	0x1528	; 0x1528 <xTaskRemoveFromEventList>
     c6c:	81 30       	cpi	r24, 0x01	; 1
     c6e:	81 f4       	brne	.+32     	; 0xc90 <xQueueGenericReceive+0xa4>
     c70:	0e 94 0a 03 	call	0x614	; 0x614 <vPortYield>
     c74:	0d c0       	rjmp	.+26     	; 0xc90 <xQueueGenericReceive+0xa4>
     c76:	f8 01       	movw	r30, r16
     c78:	f7 82       	std	Z+7, r15	; 0x07
     c7a:	e6 82       	std	Z+6, r14	; 0x06
     c7c:	81 89       	ldd	r24, Z+17	; 0x11
     c7e:	88 23       	and	r24, r24
     c80:	39 f0       	breq	.+14     	; 0xc90 <xQueueGenericReceive+0xa4>
     c82:	c8 01       	movw	r24, r16
     c84:	41 96       	adiw	r24, 0x11	; 17
     c86:	0e 94 94 0a 	call	0x1528	; 0x1528 <xTaskRemoveFromEventList>
     c8a:	81 11       	cpse	r24, r1
     c8c:	0e 94 0a 03 	call	0x614	; 0x614 <vPortYield>
     c90:	0f 90       	pop	r0
     c92:	0f be       	out	0x3f, r0	; 63
     c94:	81 e0       	ldi	r24, 0x01	; 1
     c96:	5c c0       	rjmp	.+184    	; 0xd50 <xQueueGenericReceive+0x164>
     c98:	8c 81       	ldd	r24, Y+4	; 0x04
     c9a:	9d 81       	ldd	r25, Y+5	; 0x05
     c9c:	89 2b       	or	r24, r25
     c9e:	21 f4       	brne	.+8      	; 0xca8 <xQueueGenericReceive+0xbc>
     ca0:	0f 90       	pop	r0
     ca2:	0f be       	out	0x3f, r0	; 63
     ca4:	80 e0       	ldi	r24, 0x00	; 0
     ca6:	54 c0       	rjmp	.+168    	; 0xd50 <xQueueGenericReceive+0x164>
     ca8:	b1 10       	cpse	r11, r1
     caa:	05 c0       	rjmp	.+10     	; 0xcb6 <xQueueGenericReceive+0xca>
     cac:	ce 01       	movw	r24, r28
     cae:	01 96       	adiw	r24, 0x01	; 1
     cb0:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <vTaskSetTimeOutState>
     cb4:	ba 2c       	mov	r11, r10
     cb6:	0f 90       	pop	r0
     cb8:	0f be       	out	0x3f, r0	; 63
     cba:	0e 94 59 08 	call	0x10b2	; 0x10b2 <vTaskSuspendAll>
     cbe:	0f b6       	in	r0, 0x3f	; 63
     cc0:	f8 94       	cli
     cc2:	0f 92       	push	r0
     cc4:	f8 01       	movw	r30, r16
     cc6:	85 8d       	ldd	r24, Z+29	; 0x1d
     cc8:	8f 3f       	cpi	r24, 0xFF	; 255
     cca:	09 f4       	brne	.+2      	; 0xcce <xQueueGenericReceive+0xe2>
     ccc:	15 8e       	std	Z+29, r1	; 0x1d
     cce:	f8 01       	movw	r30, r16
     cd0:	86 8d       	ldd	r24, Z+30	; 0x1e
     cd2:	8f 3f       	cpi	r24, 0xFF	; 255
     cd4:	09 f4       	brne	.+2      	; 0xcd8 <xQueueGenericReceive+0xec>
     cd6:	16 8e       	std	Z+30, r1	; 0x1e
     cd8:	0f 90       	pop	r0
     cda:	0f be       	out	0x3f, r0	; 63
     cdc:	be 01       	movw	r22, r28
     cde:	6c 5f       	subi	r22, 0xFC	; 252
     ce0:	7f 4f       	sbci	r23, 0xFF	; 255
     ce2:	ce 01       	movw	r24, r28
     ce4:	01 96       	adiw	r24, 0x01	; 1
     ce6:	0e 94 e7 0a 	call	0x15ce	; 0x15ce <xTaskCheckForTimeOut>
     cea:	81 11       	cpse	r24, r1
     cec:	2b c0       	rjmp	.+86     	; 0xd44 <xQueueGenericReceive+0x158>
     cee:	0f b6       	in	r0, 0x3f	; 63
     cf0:	f8 94       	cli
     cf2:	0f 92       	push	r0
     cf4:	f8 01       	movw	r30, r16
     cf6:	82 8d       	ldd	r24, Z+26	; 0x1a
     cf8:	0f 90       	pop	r0
     cfa:	0f be       	out	0x3f, r0	; 63
     cfc:	81 11       	cpse	r24, r1
     cfe:	1c c0       	rjmp	.+56     	; 0xd38 <xQueueGenericReceive+0x14c>
     d00:	80 81       	ld	r24, Z
     d02:	91 81       	ldd	r25, Z+1	; 0x01
     d04:	89 2b       	or	r24, r25
     d06:	49 f4       	brne	.+18     	; 0xd1a <xQueueGenericReceive+0x12e>
     d08:	0f b6       	in	r0, 0x3f	; 63
     d0a:	f8 94       	cli
     d0c:	0f 92       	push	r0
     d0e:	82 81       	ldd	r24, Z+2	; 0x02
     d10:	93 81       	ldd	r25, Z+3	; 0x03
     d12:	0e 94 24 0b 	call	0x1648	; 0x1648 <vTaskPriorityInherit>
     d16:	0f 90       	pop	r0
     d18:	0f be       	out	0x3f, r0	; 63
     d1a:	6c 81       	ldd	r22, Y+4	; 0x04
     d1c:	7d 81       	ldd	r23, Y+5	; 0x05
     d1e:	c7 01       	movw	r24, r14
     d20:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <vTaskPlaceOnEventList>
     d24:	c8 01       	movw	r24, r16
     d26:	0e 94 09 05 	call	0xa12	; 0xa12 <prvUnlockQueue>
     d2a:	0e 94 1c 09 	call	0x1238	; 0x1238 <xTaskResumeAll>
     d2e:	81 11       	cpse	r24, r1
     d30:	79 cf       	rjmp	.-270    	; 0xc24 <xQueueGenericReceive+0x38>
     d32:	0e 94 0a 03 	call	0x614	; 0x614 <vPortYield>
     d36:	76 cf       	rjmp	.-276    	; 0xc24 <xQueueGenericReceive+0x38>
     d38:	c8 01       	movw	r24, r16
     d3a:	0e 94 09 05 	call	0xa12	; 0xa12 <prvUnlockQueue>
     d3e:	0e 94 1c 09 	call	0x1238	; 0x1238 <xTaskResumeAll>
     d42:	70 cf       	rjmp	.-288    	; 0xc24 <xQueueGenericReceive+0x38>
     d44:	c8 01       	movw	r24, r16
     d46:	0e 94 09 05 	call	0xa12	; 0xa12 <prvUnlockQueue>
     d4a:	0e 94 1c 09 	call	0x1238	; 0x1238 <xTaskResumeAll>
     d4e:	80 e0       	ldi	r24, 0x00	; 0
     d50:	0f 90       	pop	r0
     d52:	0f 90       	pop	r0
     d54:	0f 90       	pop	r0
     d56:	0f 90       	pop	r0
     d58:	0f 90       	pop	r0
     d5a:	df 91       	pop	r29
     d5c:	cf 91       	pop	r28
     d5e:	1f 91       	pop	r17
     d60:	0f 91       	pop	r16
     d62:	ff 90       	pop	r15
     d64:	ef 90       	pop	r14
     d66:	df 90       	pop	r13
     d68:	cf 90       	pop	r12
     d6a:	bf 90       	pop	r11
     d6c:	af 90       	pop	r10
     d6e:	9f 90       	pop	r9
     d70:	08 95       	ret

00000d72 <uxQueueMessagesWaiting>:
     d72:	0f b6       	in	r0, 0x3f	; 63
     d74:	f8 94       	cli
     d76:	0f 92       	push	r0
     d78:	fc 01       	movw	r30, r24
     d7a:	82 8d       	ldd	r24, Z+26	; 0x1a
     d7c:	0f 90       	pop	r0
     d7e:	0f be       	out	0x3f, r0	; 63
     d80:	08 95       	ret

00000d82 <prvResetNextTaskUnblockTime>:
     d82:	e0 91 45 07 	lds	r30, 0x0745	; 0x800745 <pxDelayedTaskList>
     d86:	f0 91 46 07 	lds	r31, 0x0746	; 0x800746 <pxDelayedTaskList+0x1>
     d8a:	80 81       	ld	r24, Z
     d8c:	81 11       	cpse	r24, r1
     d8e:	07 c0       	rjmp	.+14     	; 0xd9e <prvResetNextTaskUnblockTime+0x1c>
     d90:	8f ef       	ldi	r24, 0xFF	; 255
     d92:	9f ef       	ldi	r25, 0xFF	; 255
     d94:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
     d98:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
     d9c:	08 95       	ret
     d9e:	e0 91 45 07 	lds	r30, 0x0745	; 0x800745 <pxDelayedTaskList>
     da2:	f0 91 46 07 	lds	r31, 0x0746	; 0x800746 <pxDelayedTaskList+0x1>
     da6:	05 80       	ldd	r0, Z+5	; 0x05
     da8:	f6 81       	ldd	r31, Z+6	; 0x06
     daa:	e0 2d       	mov	r30, r0
     dac:	06 80       	ldd	r0, Z+6	; 0x06
     dae:	f7 81       	ldd	r31, Z+7	; 0x07
     db0:	e0 2d       	mov	r30, r0
     db2:	82 81       	ldd	r24, Z+2	; 0x02
     db4:	93 81       	ldd	r25, Z+3	; 0x03
     db6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
     dba:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
     dbe:	08 95       	ret

00000dc0 <prvAddCurrentTaskToDelayedList>:
     dc0:	cf 93       	push	r28
     dc2:	df 93       	push	r29
     dc4:	ec 01       	movw	r28, r24
     dc6:	e0 91 7d 07 	lds	r30, 0x077D	; 0x80077d <pxCurrentTCB>
     dca:	f0 91 7e 07 	lds	r31, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
     dce:	93 83       	std	Z+3, r25	; 0x03
     dd0:	82 83       	std	Z+2, r24	; 0x02
     dd2:	80 91 22 07 	lds	r24, 0x0722	; 0x800722 <xTickCount>
     dd6:	90 91 23 07 	lds	r25, 0x0723	; 0x800723 <xTickCount+0x1>
     dda:	c8 17       	cp	r28, r24
     ddc:	d9 07       	cpc	r29, r25
     dde:	68 f4       	brcc	.+26     	; 0xdfa <prvAddCurrentTaskToDelayedList+0x3a>
     de0:	60 91 7d 07 	lds	r22, 0x077D	; 0x80077d <pxCurrentTCB>
     de4:	70 91 7e 07 	lds	r23, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
     de8:	80 91 43 07 	lds	r24, 0x0743	; 0x800743 <pxOverflowDelayedTaskList>
     dec:	90 91 44 07 	lds	r25, 0x0744	; 0x800744 <pxOverflowDelayedTaskList+0x1>
     df0:	6e 5f       	subi	r22, 0xFE	; 254
     df2:	7f 4f       	sbci	r23, 0xFF	; 255
     df4:	0e 94 0d 02 	call	0x41a	; 0x41a <vListInsert>
     df8:	17 c0       	rjmp	.+46     	; 0xe28 <prvAddCurrentTaskToDelayedList+0x68>
     dfa:	60 91 7d 07 	lds	r22, 0x077D	; 0x80077d <pxCurrentTCB>
     dfe:	70 91 7e 07 	lds	r23, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
     e02:	80 91 45 07 	lds	r24, 0x0745	; 0x800745 <pxDelayedTaskList>
     e06:	90 91 46 07 	lds	r25, 0x0746	; 0x800746 <pxDelayedTaskList+0x1>
     e0a:	6e 5f       	subi	r22, 0xFE	; 254
     e0c:	7f 4f       	sbci	r23, 0xFF	; 255
     e0e:	0e 94 0d 02 	call	0x41a	; 0x41a <vListInsert>
     e12:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <xNextTaskUnblockTime>
     e16:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <xNextTaskUnblockTime+0x1>
     e1a:	c8 17       	cp	r28, r24
     e1c:	d9 07       	cpc	r29, r25
     e1e:	20 f4       	brcc	.+8      	; 0xe28 <prvAddCurrentTaskToDelayedList+0x68>
     e20:	d0 93 03 01 	sts	0x0103, r29	; 0x800103 <xNextTaskUnblockTime+0x1>
     e24:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <xNextTaskUnblockTime>
     e28:	df 91       	pop	r29
     e2a:	cf 91       	pop	r28
     e2c:	08 95       	ret

00000e2e <xTaskGenericCreate>:
     e2e:	4f 92       	push	r4
     e30:	5f 92       	push	r5
     e32:	6f 92       	push	r6
     e34:	7f 92       	push	r7
     e36:	8f 92       	push	r8
     e38:	9f 92       	push	r9
     e3a:	af 92       	push	r10
     e3c:	bf 92       	push	r11
     e3e:	cf 92       	push	r12
     e40:	df 92       	push	r13
     e42:	ef 92       	push	r14
     e44:	ff 92       	push	r15
     e46:	0f 93       	push	r16
     e48:	1f 93       	push	r17
     e4a:	cf 93       	push	r28
     e4c:	df 93       	push	r29
     e4e:	4c 01       	movw	r8, r24
     e50:	eb 01       	movw	r28, r22
     e52:	5a 01       	movw	r10, r20
     e54:	29 01       	movw	r4, r18
     e56:	c1 14       	cp	r12, r1
     e58:	d1 04       	cpc	r13, r1
     e5a:	39 f4       	brne	.+14     	; 0xe6a <xTaskGenericCreate+0x3c>
     e5c:	ca 01       	movw	r24, r20
     e5e:	0e 94 c2 03 	call	0x784	; 0x784 <pvPortMalloc>
     e62:	6c 01       	movw	r12, r24
     e64:	89 2b       	or	r24, r25
     e66:	09 f4       	brne	.+2      	; 0xe6a <xTaskGenericCreate+0x3c>
     e68:	e3 c0       	rjmp	.+454    	; 0x1030 <xTaskGenericCreate+0x202>
     e6a:	88 e2       	ldi	r24, 0x28	; 40
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	0e 94 c2 03 	call	0x784	; 0x784 <pvPortMalloc>
     e72:	3c 01       	movw	r6, r24
     e74:	00 97       	sbiw	r24, 0x00	; 0
     e76:	79 f0       	breq	.+30     	; 0xe96 <xTaskGenericCreate+0x68>
     e78:	fc 01       	movw	r30, r24
     e7a:	d0 8e       	std	Z+24, r13	; 0x18
     e7c:	c7 8a       	std	Z+23, r12	; 0x17
     e7e:	f1 e0       	ldi	r31, 0x01	; 1
     e80:	af 1a       	sub	r10, r31
     e82:	b1 08       	sbc	r11, r1
     e84:	ca 0c       	add	r12, r10
     e86:	db 1c       	adc	r13, r11
     e88:	88 81       	ld	r24, Y
     e8a:	f3 01       	movw	r30, r6
     e8c:	81 8f       	std	Z+25, r24	; 0x19
     e8e:	88 81       	ld	r24, Y
     e90:	81 11       	cpse	r24, r1
     e92:	05 c0       	rjmp	.+10     	; 0xe9e <xTaskGenericCreate+0x70>
     e94:	14 c0       	rjmp	.+40     	; 0xebe <xTaskGenericCreate+0x90>
     e96:	c6 01       	movw	r24, r12
     e98:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <vPortFree>
     e9c:	c9 c0       	rjmp	.+402    	; 0x1030 <xTaskGenericCreate+0x202>
     e9e:	d3 01       	movw	r26, r6
     ea0:	5a 96       	adiw	r26, 0x1a	; 26
     ea2:	fe 01       	movw	r30, r28
     ea4:	31 96       	adiw	r30, 0x01	; 1
     ea6:	9e 01       	movw	r18, r28
     ea8:	28 5f       	subi	r18, 0xF8	; 248
     eaa:	3f 4f       	sbci	r19, 0xFF	; 255
     eac:	ef 01       	movw	r28, r30
     eae:	81 91       	ld	r24, Z+
     eb0:	8d 93       	st	X+, r24
     eb2:	88 81       	ld	r24, Y
     eb4:	88 23       	and	r24, r24
     eb6:	19 f0       	breq	.+6      	; 0xebe <xTaskGenericCreate+0x90>
     eb8:	e2 17       	cp	r30, r18
     eba:	f3 07       	cpc	r31, r19
     ebc:	b9 f7       	brne	.-18     	; 0xeac <xTaskGenericCreate+0x7e>
     ebe:	f3 01       	movw	r30, r6
     ec0:	10 a2       	std	Z+32, r1	; 0x20
     ec2:	10 2f       	mov	r17, r16
     ec4:	04 30       	cpi	r16, 0x04	; 4
     ec6:	08 f0       	brcs	.+2      	; 0xeca <xTaskGenericCreate+0x9c>
     ec8:	13 e0       	ldi	r17, 0x03	; 3
     eca:	f3 01       	movw	r30, r6
     ecc:	16 8b       	std	Z+22, r17	; 0x16
     ece:	11 a3       	std	Z+33, r17	; 0x21
     ed0:	12 a2       	std	Z+34, r1	; 0x22
     ed2:	e3 01       	movw	r28, r6
     ed4:	22 96       	adiw	r28, 0x02	; 2
     ed6:	ce 01       	movw	r24, r28
     ed8:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <vListInitialiseItem>
     edc:	c3 01       	movw	r24, r6
     ede:	0c 96       	adiw	r24, 0x0c	; 12
     ee0:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <vListInitialiseItem>
     ee4:	f3 01       	movw	r30, r6
     ee6:	71 86       	std	Z+9, r7	; 0x09
     ee8:	60 86       	std	Z+8, r6	; 0x08
     eea:	84 e0       	ldi	r24, 0x04	; 4
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	81 1b       	sub	r24, r17
     ef0:	91 09       	sbc	r25, r1
     ef2:	95 87       	std	Z+13, r25	; 0x0d
     ef4:	84 87       	std	Z+12, r24	; 0x0c
     ef6:	73 8a       	std	Z+19, r7	; 0x13
     ef8:	62 8a       	std	Z+18, r6	; 0x12
     efa:	13 a2       	std	Z+35, r1	; 0x23
     efc:	14 a2       	std	Z+36, r1	; 0x24
     efe:	15 a2       	std	Z+37, r1	; 0x25
     f00:	16 a2       	std	Z+38, r1	; 0x26
     f02:	17 a2       	std	Z+39, r1	; 0x27
     f04:	a2 01       	movw	r20, r4
     f06:	b4 01       	movw	r22, r8
     f08:	c6 01       	movw	r24, r12
     f0a:	0e 94 64 02 	call	0x4c8	; 0x4c8 <pxPortInitialiseStack>
     f0e:	f3 01       	movw	r30, r6
     f10:	91 83       	std	Z+1, r25	; 0x01
     f12:	80 83       	st	Z, r24
     f14:	e1 14       	cp	r14, r1
     f16:	f1 04       	cpc	r15, r1
     f18:	19 f0       	breq	.+6      	; 0xf20 <xTaskGenericCreate+0xf2>
     f1a:	f7 01       	movw	r30, r14
     f1c:	71 82       	std	Z+1, r7	; 0x01
     f1e:	60 82       	st	Z, r6
     f20:	0f b6       	in	r0, 0x3f	; 63
     f22:	f8 94       	cli
     f24:	0f 92       	push	r0
     f26:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxCurrentNumberOfTasks>
     f2a:	8f 5f       	subi	r24, 0xFF	; 255
     f2c:	80 93 24 07 	sts	0x0724, r24	; 0x800724 <uxCurrentNumberOfTasks>
     f30:	80 91 7d 07 	lds	r24, 0x077D	; 0x80077d <pxCurrentTCB>
     f34:	90 91 7e 07 	lds	r25, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
     f38:	89 2b       	or	r24, r25
     f3a:	d1 f5       	brne	.+116    	; 0xfb0 <xTaskGenericCreate+0x182>
     f3c:	70 92 7e 07 	sts	0x077E, r7	; 0x80077e <pxCurrentTCB+0x1>
     f40:	60 92 7d 07 	sts	0x077D, r6	; 0x80077d <pxCurrentTCB>
     f44:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxCurrentNumberOfTasks>
     f48:	81 30       	cpi	r24, 0x01	; 1
     f4a:	09 f0       	breq	.+2      	; 0xf4e <xTaskGenericCreate+0x120>
     f4c:	40 c0       	rjmp	.+128    	; 0xfce <xTaskGenericCreate+0x1a0>
     f4e:	89 e5       	ldi	r24, 0x59	; 89
     f50:	97 e0       	ldi	r25, 0x07	; 7
     f52:	0e 94 da 01 	call	0x3b4	; 0x3b4 <vListInitialise>
     f56:	82 e6       	ldi	r24, 0x62	; 98
     f58:	97 e0       	ldi	r25, 0x07	; 7
     f5a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <vListInitialise>
     f5e:	8b e6       	ldi	r24, 0x6B	; 107
     f60:	97 e0       	ldi	r25, 0x07	; 7
     f62:	0e 94 da 01 	call	0x3b4	; 0x3b4 <vListInitialise>
     f66:	84 e7       	ldi	r24, 0x74	; 116
     f68:	97 e0       	ldi	r25, 0x07	; 7
     f6a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <vListInitialise>
     f6e:	80 e5       	ldi	r24, 0x50	; 80
     f70:	97 e0       	ldi	r25, 0x07	; 7
     f72:	0e 94 da 01 	call	0x3b4	; 0x3b4 <vListInitialise>
     f76:	87 e4       	ldi	r24, 0x47	; 71
     f78:	97 e0       	ldi	r25, 0x07	; 7
     f7a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <vListInitialise>
     f7e:	8a e3       	ldi	r24, 0x3A	; 58
     f80:	97 e0       	ldi	r25, 0x07	; 7
     f82:	0e 94 da 01 	call	0x3b4	; 0x3b4 <vListInitialise>
     f86:	81 e3       	ldi	r24, 0x31	; 49
     f88:	97 e0       	ldi	r25, 0x07	; 7
     f8a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <vListInitialise>
     f8e:	87 e2       	ldi	r24, 0x27	; 39
     f90:	97 e0       	ldi	r25, 0x07	; 7
     f92:	0e 94 da 01 	call	0x3b4	; 0x3b4 <vListInitialise>
     f96:	80 e5       	ldi	r24, 0x50	; 80
     f98:	97 e0       	ldi	r25, 0x07	; 7
     f9a:	90 93 46 07 	sts	0x0746, r25	; 0x800746 <pxDelayedTaskList+0x1>
     f9e:	80 93 45 07 	sts	0x0745, r24	; 0x800745 <pxDelayedTaskList>
     fa2:	87 e4       	ldi	r24, 0x47	; 71
     fa4:	97 e0       	ldi	r25, 0x07	; 7
     fa6:	90 93 44 07 	sts	0x0744, r25	; 0x800744 <pxOverflowDelayedTaskList+0x1>
     faa:	80 93 43 07 	sts	0x0743, r24	; 0x800743 <pxOverflowDelayedTaskList>
     fae:	0f c0       	rjmp	.+30     	; 0xfce <xTaskGenericCreate+0x1a0>
     fb0:	80 91 20 07 	lds	r24, 0x0720	; 0x800720 <xSchedulerRunning>
     fb4:	81 11       	cpse	r24, r1
     fb6:	0b c0       	rjmp	.+22     	; 0xfce <xTaskGenericCreate+0x1a0>
     fb8:	e0 91 7d 07 	lds	r30, 0x077D	; 0x80077d <pxCurrentTCB>
     fbc:	f0 91 7e 07 	lds	r31, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
     fc0:	86 89       	ldd	r24, Z+22	; 0x16
     fc2:	08 17       	cp	r16, r24
     fc4:	20 f0       	brcs	.+8      	; 0xfce <xTaskGenericCreate+0x1a0>
     fc6:	70 92 7e 07 	sts	0x077E, r7	; 0x80077e <pxCurrentTCB+0x1>
     fca:	60 92 7d 07 	sts	0x077D, r6	; 0x80077d <pxCurrentTCB>
     fce:	80 91 1c 07 	lds	r24, 0x071C	; 0x80071c <uxTaskNumber>
     fd2:	8f 5f       	subi	r24, 0xFF	; 255
     fd4:	80 93 1c 07 	sts	0x071C, r24	; 0x80071c <uxTaskNumber>
     fd8:	f3 01       	movw	r30, r6
     fda:	86 89       	ldd	r24, Z+22	; 0x16
     fdc:	90 91 21 07 	lds	r25, 0x0721	; 0x800721 <uxTopReadyPriority>
     fe0:	98 17       	cp	r25, r24
     fe2:	10 f4       	brcc	.+4      	; 0xfe8 <xTaskGenericCreate+0x1ba>
     fe4:	80 93 21 07 	sts	0x0721, r24	; 0x800721 <uxTopReadyPriority>
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	9c 01       	movw	r18, r24
     fec:	22 0f       	add	r18, r18
     fee:	33 1f       	adc	r19, r19
     ff0:	22 0f       	add	r18, r18
     ff2:	33 1f       	adc	r19, r19
     ff4:	22 0f       	add	r18, r18
     ff6:	33 1f       	adc	r19, r19
     ff8:	82 0f       	add	r24, r18
     ffa:	93 1f       	adc	r25, r19
     ffc:	be 01       	movw	r22, r28
     ffe:	87 5a       	subi	r24, 0xA7	; 167
    1000:	98 4f       	sbci	r25, 0xF8	; 248
    1002:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <vListInsertEnd>
    1006:	0f 90       	pop	r0
    1008:	0f be       	out	0x3f, r0	; 63
    100a:	80 91 20 07 	lds	r24, 0x0720	; 0x800720 <xSchedulerRunning>
    100e:	88 23       	and	r24, r24
    1010:	59 f0       	breq	.+22     	; 0x1028 <xTaskGenericCreate+0x1fa>
    1012:	e0 91 7d 07 	lds	r30, 0x077D	; 0x80077d <pxCurrentTCB>
    1016:	f0 91 7e 07 	lds	r31, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    101a:	86 89       	ldd	r24, Z+22	; 0x16
    101c:	80 17       	cp	r24, r16
    101e:	30 f4       	brcc	.+12     	; 0x102c <xTaskGenericCreate+0x1fe>
    1020:	0e 94 0a 03 	call	0x614	; 0x614 <vPortYield>
    1024:	81 e0       	ldi	r24, 0x01	; 1
    1026:	05 c0       	rjmp	.+10     	; 0x1032 <xTaskGenericCreate+0x204>
    1028:	81 e0       	ldi	r24, 0x01	; 1
    102a:	03 c0       	rjmp	.+6      	; 0x1032 <xTaskGenericCreate+0x204>
    102c:	81 e0       	ldi	r24, 0x01	; 1
    102e:	01 c0       	rjmp	.+2      	; 0x1032 <xTaskGenericCreate+0x204>
    1030:	8f ef       	ldi	r24, 0xFF	; 255
    1032:	df 91       	pop	r29
    1034:	cf 91       	pop	r28
    1036:	1f 91       	pop	r17
    1038:	0f 91       	pop	r16
    103a:	ff 90       	pop	r15
    103c:	ef 90       	pop	r14
    103e:	df 90       	pop	r13
    1040:	cf 90       	pop	r12
    1042:	bf 90       	pop	r11
    1044:	af 90       	pop	r10
    1046:	9f 90       	pop	r9
    1048:	8f 90       	pop	r8
    104a:	7f 90       	pop	r7
    104c:	6f 90       	pop	r6
    104e:	5f 90       	pop	r5
    1050:	4f 90       	pop	r4
    1052:	08 95       	ret

00001054 <vTaskStartScheduler>:
    1054:	af 92       	push	r10
    1056:	bf 92       	push	r11
    1058:	cf 92       	push	r12
    105a:	df 92       	push	r13
    105c:	ef 92       	push	r14
    105e:	ff 92       	push	r15
    1060:	0f 93       	push	r16
    1062:	a1 2c       	mov	r10, r1
    1064:	b1 2c       	mov	r11, r1
    1066:	c1 2c       	mov	r12, r1
    1068:	d1 2c       	mov	r13, r1
    106a:	0f 2e       	mov	r0, r31
    106c:	f5 e2       	ldi	r31, 0x25	; 37
    106e:	ef 2e       	mov	r14, r31
    1070:	f7 e0       	ldi	r31, 0x07	; 7
    1072:	ff 2e       	mov	r15, r31
    1074:	f0 2d       	mov	r31, r0
    1076:	00 e0       	ldi	r16, 0x00	; 0
    1078:	20 e0       	ldi	r18, 0x00	; 0
    107a:	30 e0       	ldi	r19, 0x00	; 0
    107c:	45 e5       	ldi	r20, 0x55	; 85
    107e:	50 e0       	ldi	r21, 0x00	; 0
    1080:	60 e3       	ldi	r22, 0x30	; 48
    1082:	71 e0       	ldi	r23, 0x01	; 1
    1084:	8e eb       	ldi	r24, 0xBE	; 190
    1086:	99 e0       	ldi	r25, 0x09	; 9
    1088:	0e 94 17 07 	call	0xe2e	; 0xe2e <xTaskGenericCreate>
    108c:	81 30       	cpi	r24, 0x01	; 1
    108e:	49 f4       	brne	.+18     	; 0x10a2 <vTaskStartScheduler+0x4e>
    1090:	f8 94       	cli
    1092:	80 93 20 07 	sts	0x0720, r24	; 0x800720 <xSchedulerRunning>
    1096:	10 92 23 07 	sts	0x0723, r1	; 0x800723 <xTickCount+0x1>
    109a:	10 92 22 07 	sts	0x0722, r1	; 0x800722 <xTickCount>
    109e:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <xPortStartScheduler>
    10a2:	0f 91       	pop	r16
    10a4:	ff 90       	pop	r15
    10a6:	ef 90       	pop	r14
    10a8:	df 90       	pop	r13
    10aa:	cf 90       	pop	r12
    10ac:	bf 90       	pop	r11
    10ae:	af 90       	pop	r10
    10b0:	08 95       	ret

000010b2 <vTaskSuspendAll>:
    10b2:	80 91 1b 07 	lds	r24, 0x071B	; 0x80071b <uxSchedulerSuspended>
    10b6:	8f 5f       	subi	r24, 0xFF	; 255
    10b8:	80 93 1b 07 	sts	0x071B, r24	; 0x80071b <uxSchedulerSuspended>
    10bc:	08 95       	ret

000010be <xTaskIncrementTick>:
    10be:	cf 92       	push	r12
    10c0:	df 92       	push	r13
    10c2:	ef 92       	push	r14
    10c4:	ff 92       	push	r15
    10c6:	0f 93       	push	r16
    10c8:	1f 93       	push	r17
    10ca:	cf 93       	push	r28
    10cc:	df 93       	push	r29
    10ce:	80 91 1b 07 	lds	r24, 0x071B	; 0x80071b <uxSchedulerSuspended>
    10d2:	81 11       	cpse	r24, r1
    10d4:	9b c0       	rjmp	.+310    	; 0x120c <xTaskIncrementTick+0x14e>
    10d6:	80 91 22 07 	lds	r24, 0x0722	; 0x800722 <xTickCount>
    10da:	90 91 23 07 	lds	r25, 0x0723	; 0x800723 <xTickCount+0x1>
    10de:	01 96       	adiw	r24, 0x01	; 1
    10e0:	90 93 23 07 	sts	0x0723, r25	; 0x800723 <xTickCount+0x1>
    10e4:	80 93 22 07 	sts	0x0722, r24	; 0x800722 <xTickCount>
    10e8:	e0 90 22 07 	lds	r14, 0x0722	; 0x800722 <xTickCount>
    10ec:	f0 90 23 07 	lds	r15, 0x0723	; 0x800723 <xTickCount+0x1>
    10f0:	e1 14       	cp	r14, r1
    10f2:	f1 04       	cpc	r15, r1
    10f4:	b9 f4       	brne	.+46     	; 0x1124 <xTaskIncrementTick+0x66>
    10f6:	80 91 45 07 	lds	r24, 0x0745	; 0x800745 <pxDelayedTaskList>
    10fa:	90 91 46 07 	lds	r25, 0x0746	; 0x800746 <pxDelayedTaskList+0x1>
    10fe:	20 91 43 07 	lds	r18, 0x0743	; 0x800743 <pxOverflowDelayedTaskList>
    1102:	30 91 44 07 	lds	r19, 0x0744	; 0x800744 <pxOverflowDelayedTaskList+0x1>
    1106:	30 93 46 07 	sts	0x0746, r19	; 0x800746 <pxDelayedTaskList+0x1>
    110a:	20 93 45 07 	sts	0x0745, r18	; 0x800745 <pxDelayedTaskList>
    110e:	90 93 44 07 	sts	0x0744, r25	; 0x800744 <pxOverflowDelayedTaskList+0x1>
    1112:	80 93 43 07 	sts	0x0743, r24	; 0x800743 <pxOverflowDelayedTaskList>
    1116:	80 91 1d 07 	lds	r24, 0x071D	; 0x80071d <xNumOfOverflows>
    111a:	8f 5f       	subi	r24, 0xFF	; 255
    111c:	80 93 1d 07 	sts	0x071D, r24	; 0x80071d <xNumOfOverflows>
    1120:	0e 94 c1 06 	call	0xd82	; 0xd82 <prvResetNextTaskUnblockTime>
    1124:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <xNextTaskUnblockTime>
    1128:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <xNextTaskUnblockTime+0x1>
    112c:	e8 16       	cp	r14, r24
    112e:	f9 06       	cpc	r15, r25
    1130:	10 f4       	brcc	.+4      	; 0x1136 <xTaskIncrementTick+0x78>
    1132:	d1 2c       	mov	r13, r1
    1134:	53 c0       	rjmp	.+166    	; 0x11dc <xTaskIncrementTick+0x11e>
    1136:	d1 2c       	mov	r13, r1
    1138:	cc 24       	eor	r12, r12
    113a:	c3 94       	inc	r12
    113c:	e0 91 45 07 	lds	r30, 0x0745	; 0x800745 <pxDelayedTaskList>
    1140:	f0 91 46 07 	lds	r31, 0x0746	; 0x800746 <pxDelayedTaskList+0x1>
    1144:	80 81       	ld	r24, Z
    1146:	81 11       	cpse	r24, r1
    1148:	07 c0       	rjmp	.+14     	; 0x1158 <xTaskIncrementTick+0x9a>
    114a:	8f ef       	ldi	r24, 0xFF	; 255
    114c:	9f ef       	ldi	r25, 0xFF	; 255
    114e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    1152:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    1156:	42 c0       	rjmp	.+132    	; 0x11dc <xTaskIncrementTick+0x11e>
    1158:	e0 91 45 07 	lds	r30, 0x0745	; 0x800745 <pxDelayedTaskList>
    115c:	f0 91 46 07 	lds	r31, 0x0746	; 0x800746 <pxDelayedTaskList+0x1>
    1160:	05 80       	ldd	r0, Z+5	; 0x05
    1162:	f6 81       	ldd	r31, Z+6	; 0x06
    1164:	e0 2d       	mov	r30, r0
    1166:	c6 81       	ldd	r28, Z+6	; 0x06
    1168:	d7 81       	ldd	r29, Z+7	; 0x07
    116a:	8a 81       	ldd	r24, Y+2	; 0x02
    116c:	9b 81       	ldd	r25, Y+3	; 0x03
    116e:	e8 16       	cp	r14, r24
    1170:	f9 06       	cpc	r15, r25
    1172:	28 f4       	brcc	.+10     	; 0x117e <xTaskIncrementTick+0xc0>
    1174:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    1178:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    117c:	2f c0       	rjmp	.+94     	; 0x11dc <xTaskIncrementTick+0x11e>
    117e:	8e 01       	movw	r16, r28
    1180:	0e 5f       	subi	r16, 0xFE	; 254
    1182:	1f 4f       	sbci	r17, 0xFF	; 255
    1184:	c8 01       	movw	r24, r16
    1186:	0e 94 3e 02 	call	0x47c	; 0x47c <uxListRemove>
    118a:	8c 89       	ldd	r24, Y+20	; 0x14
    118c:	9d 89       	ldd	r25, Y+21	; 0x15
    118e:	89 2b       	or	r24, r25
    1190:	21 f0       	breq	.+8      	; 0x119a <xTaskIncrementTick+0xdc>
    1192:	ce 01       	movw	r24, r28
    1194:	0c 96       	adiw	r24, 0x0c	; 12
    1196:	0e 94 3e 02 	call	0x47c	; 0x47c <uxListRemove>
    119a:	8e 89       	ldd	r24, Y+22	; 0x16
    119c:	90 91 21 07 	lds	r25, 0x0721	; 0x800721 <uxTopReadyPriority>
    11a0:	98 17       	cp	r25, r24
    11a2:	10 f4       	brcc	.+4      	; 0x11a8 <xTaskIncrementTick+0xea>
    11a4:	80 93 21 07 	sts	0x0721, r24	; 0x800721 <uxTopReadyPriority>
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	9c 01       	movw	r18, r24
    11ac:	22 0f       	add	r18, r18
    11ae:	33 1f       	adc	r19, r19
    11b0:	22 0f       	add	r18, r18
    11b2:	33 1f       	adc	r19, r19
    11b4:	22 0f       	add	r18, r18
    11b6:	33 1f       	adc	r19, r19
    11b8:	82 0f       	add	r24, r18
    11ba:	93 1f       	adc	r25, r19
    11bc:	b8 01       	movw	r22, r16
    11be:	87 5a       	subi	r24, 0xA7	; 167
    11c0:	98 4f       	sbci	r25, 0xF8	; 248
    11c2:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <vListInsertEnd>
    11c6:	e0 91 7d 07 	lds	r30, 0x077D	; 0x80077d <pxCurrentTCB>
    11ca:	f0 91 7e 07 	lds	r31, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    11ce:	9e 89       	ldd	r25, Y+22	; 0x16
    11d0:	86 89       	ldd	r24, Z+22	; 0x16
    11d2:	98 17       	cp	r25, r24
    11d4:	08 f4       	brcc	.+2      	; 0x11d8 <xTaskIncrementTick+0x11a>
    11d6:	b2 cf       	rjmp	.-156    	; 0x113c <xTaskIncrementTick+0x7e>
    11d8:	dc 2c       	mov	r13, r12
    11da:	b0 cf       	rjmp	.-160    	; 0x113c <xTaskIncrementTick+0x7e>
    11dc:	e0 91 7d 07 	lds	r30, 0x077D	; 0x80077d <pxCurrentTCB>
    11e0:	f0 91 7e 07 	lds	r31, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    11e4:	86 89       	ldd	r24, Z+22	; 0x16
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	fc 01       	movw	r30, r24
    11ea:	ee 0f       	add	r30, r30
    11ec:	ff 1f       	adc	r31, r31
    11ee:	ee 0f       	add	r30, r30
    11f0:	ff 1f       	adc	r31, r31
    11f2:	ee 0f       	add	r30, r30
    11f4:	ff 1f       	adc	r31, r31
    11f6:	8e 0f       	add	r24, r30
    11f8:	9f 1f       	adc	r25, r31
    11fa:	fc 01       	movw	r30, r24
    11fc:	e7 5a       	subi	r30, 0xA7	; 167
    11fe:	f8 4f       	sbci	r31, 0xF8	; 248
    1200:	80 81       	ld	r24, Z
    1202:	82 30       	cpi	r24, 0x02	; 2
    1204:	48 f0       	brcs	.+18     	; 0x1218 <xTaskIncrementTick+0x15a>
    1206:	dd 24       	eor	r13, r13
    1208:	d3 94       	inc	r13
    120a:	06 c0       	rjmp	.+12     	; 0x1218 <xTaskIncrementTick+0x15a>
    120c:	80 91 1f 07 	lds	r24, 0x071F	; 0x80071f <uxPendedTicks>
    1210:	8f 5f       	subi	r24, 0xFF	; 255
    1212:	80 93 1f 07 	sts	0x071F, r24	; 0x80071f <uxPendedTicks>
    1216:	d1 2c       	mov	r13, r1
    1218:	80 91 1e 07 	lds	r24, 0x071E	; 0x80071e <xYieldPending>
    121c:	88 23       	and	r24, r24
    121e:	11 f0       	breq	.+4      	; 0x1224 <xTaskIncrementTick+0x166>
    1220:	dd 24       	eor	r13, r13
    1222:	d3 94       	inc	r13
    1224:	8d 2d       	mov	r24, r13
    1226:	df 91       	pop	r29
    1228:	cf 91       	pop	r28
    122a:	1f 91       	pop	r17
    122c:	0f 91       	pop	r16
    122e:	ff 90       	pop	r15
    1230:	ef 90       	pop	r14
    1232:	df 90       	pop	r13
    1234:	cf 90       	pop	r12
    1236:	08 95       	ret

00001238 <xTaskResumeAll>:
    1238:	df 92       	push	r13
    123a:	ef 92       	push	r14
    123c:	ff 92       	push	r15
    123e:	0f 93       	push	r16
    1240:	1f 93       	push	r17
    1242:	cf 93       	push	r28
    1244:	df 93       	push	r29
    1246:	0f b6       	in	r0, 0x3f	; 63
    1248:	f8 94       	cli
    124a:	0f 92       	push	r0
    124c:	80 91 1b 07 	lds	r24, 0x071B	; 0x80071b <uxSchedulerSuspended>
    1250:	81 50       	subi	r24, 0x01	; 1
    1252:	80 93 1b 07 	sts	0x071B, r24	; 0x80071b <uxSchedulerSuspended>
    1256:	80 91 1b 07 	lds	r24, 0x071B	; 0x80071b <uxSchedulerSuspended>
    125a:	81 11       	cpse	r24, r1
    125c:	62 c0       	rjmp	.+196    	; 0x1322 <xTaskResumeAll+0xea>
    125e:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxCurrentNumberOfTasks>
    1262:	81 11       	cpse	r24, r1
    1264:	33 c0       	rjmp	.+102    	; 0x12cc <xTaskResumeAll+0x94>
    1266:	60 c0       	rjmp	.+192    	; 0x1328 <xTaskResumeAll+0xf0>
    1268:	d7 01       	movw	r26, r14
    126a:	15 96       	adiw	r26, 0x05	; 5
    126c:	ed 91       	ld	r30, X+
    126e:	fc 91       	ld	r31, X
    1270:	16 97       	sbiw	r26, 0x06	; 6
    1272:	c6 81       	ldd	r28, Z+6	; 0x06
    1274:	d7 81       	ldd	r29, Z+7	; 0x07
    1276:	ce 01       	movw	r24, r28
    1278:	0c 96       	adiw	r24, 0x0c	; 12
    127a:	0e 94 3e 02 	call	0x47c	; 0x47c <uxListRemove>
    127e:	8e 01       	movw	r16, r28
    1280:	0e 5f       	subi	r16, 0xFE	; 254
    1282:	1f 4f       	sbci	r17, 0xFF	; 255
    1284:	c8 01       	movw	r24, r16
    1286:	0e 94 3e 02 	call	0x47c	; 0x47c <uxListRemove>
    128a:	8e 89       	ldd	r24, Y+22	; 0x16
    128c:	90 91 21 07 	lds	r25, 0x0721	; 0x800721 <uxTopReadyPriority>
    1290:	98 17       	cp	r25, r24
    1292:	10 f4       	brcc	.+4      	; 0x1298 <xTaskResumeAll+0x60>
    1294:	80 93 21 07 	sts	0x0721, r24	; 0x800721 <uxTopReadyPriority>
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	9c 01       	movw	r18, r24
    129c:	22 0f       	add	r18, r18
    129e:	33 1f       	adc	r19, r19
    12a0:	22 0f       	add	r18, r18
    12a2:	33 1f       	adc	r19, r19
    12a4:	22 0f       	add	r18, r18
    12a6:	33 1f       	adc	r19, r19
    12a8:	82 0f       	add	r24, r18
    12aa:	93 1f       	adc	r25, r19
    12ac:	b8 01       	movw	r22, r16
    12ae:	87 5a       	subi	r24, 0xA7	; 167
    12b0:	98 4f       	sbci	r25, 0xF8	; 248
    12b2:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <vListInsertEnd>
    12b6:	e0 91 7d 07 	lds	r30, 0x077D	; 0x80077d <pxCurrentTCB>
    12ba:	f0 91 7e 07 	lds	r31, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    12be:	9e 89       	ldd	r25, Y+22	; 0x16
    12c0:	86 89       	ldd	r24, Z+22	; 0x16
    12c2:	98 17       	cp	r25, r24
    12c4:	58 f0       	brcs	.+22     	; 0x12dc <xTaskResumeAll+0xa4>
    12c6:	d0 92 1e 07 	sts	0x071E, r13	; 0x80071e <xYieldPending>
    12ca:	08 c0       	rjmp	.+16     	; 0x12dc <xTaskResumeAll+0xa4>
    12cc:	0f 2e       	mov	r0, r31
    12ce:	fa e3       	ldi	r31, 0x3A	; 58
    12d0:	ef 2e       	mov	r14, r31
    12d2:	f7 e0       	ldi	r31, 0x07	; 7
    12d4:	ff 2e       	mov	r15, r31
    12d6:	f0 2d       	mov	r31, r0
    12d8:	dd 24       	eor	r13, r13
    12da:	d3 94       	inc	r13
    12dc:	f7 01       	movw	r30, r14
    12de:	80 81       	ld	r24, Z
    12e0:	81 11       	cpse	r24, r1
    12e2:	c2 cf       	rjmp	.-124    	; 0x1268 <xTaskResumeAll+0x30>
    12e4:	80 91 1f 07 	lds	r24, 0x071F	; 0x80071f <uxPendedTicks>
    12e8:	88 23       	and	r24, r24
    12ea:	99 f0       	breq	.+38     	; 0x1312 <xTaskResumeAll+0xda>
    12ec:	80 91 1f 07 	lds	r24, 0x071F	; 0x80071f <uxPendedTicks>
    12f0:	88 23       	and	r24, r24
    12f2:	79 f0       	breq	.+30     	; 0x1312 <xTaskResumeAll+0xda>
    12f4:	c1 e0       	ldi	r28, 0x01	; 1
    12f6:	0e 94 5f 08 	call	0x10be	; 0x10be <xTaskIncrementTick>
    12fa:	81 11       	cpse	r24, r1
    12fc:	c0 93 1e 07 	sts	0x071E, r28	; 0x80071e <xYieldPending>
    1300:	80 91 1f 07 	lds	r24, 0x071F	; 0x80071f <uxPendedTicks>
    1304:	81 50       	subi	r24, 0x01	; 1
    1306:	80 93 1f 07 	sts	0x071F, r24	; 0x80071f <uxPendedTicks>
    130a:	80 91 1f 07 	lds	r24, 0x071F	; 0x80071f <uxPendedTicks>
    130e:	81 11       	cpse	r24, r1
    1310:	f2 cf       	rjmp	.-28     	; 0x12f6 <xTaskResumeAll+0xbe>
    1312:	80 91 1e 07 	lds	r24, 0x071E	; 0x80071e <xYieldPending>
    1316:	81 30       	cpi	r24, 0x01	; 1
    1318:	31 f4       	brne	.+12     	; 0x1326 <xTaskResumeAll+0xee>
    131a:	0e 94 0a 03 	call	0x614	; 0x614 <vPortYield>
    131e:	81 e0       	ldi	r24, 0x01	; 1
    1320:	03 c0       	rjmp	.+6      	; 0x1328 <xTaskResumeAll+0xf0>
    1322:	80 e0       	ldi	r24, 0x00	; 0
    1324:	01 c0       	rjmp	.+2      	; 0x1328 <xTaskResumeAll+0xf0>
    1326:	80 e0       	ldi	r24, 0x00	; 0
    1328:	0f 90       	pop	r0
    132a:	0f be       	out	0x3f, r0	; 63
    132c:	df 91       	pop	r29
    132e:	cf 91       	pop	r28
    1330:	1f 91       	pop	r17
    1332:	0f 91       	pop	r16
    1334:	ff 90       	pop	r15
    1336:	ef 90       	pop	r14
    1338:	df 90       	pop	r13
    133a:	08 95       	ret

0000133c <vTaskDelay>:
    133c:	cf 93       	push	r28
    133e:	df 93       	push	r29
    1340:	ec 01       	movw	r28, r24
    1342:	89 2b       	or	r24, r25
    1344:	b1 f0       	breq	.+44     	; 0x1372 <vTaskDelay+0x36>
    1346:	0e 94 59 08 	call	0x10b2	; 0x10b2 <vTaskSuspendAll>
    134a:	80 91 22 07 	lds	r24, 0x0722	; 0x800722 <xTickCount>
    134e:	90 91 23 07 	lds	r25, 0x0723	; 0x800723 <xTickCount+0x1>
    1352:	c8 0f       	add	r28, r24
    1354:	d9 1f       	adc	r29, r25
    1356:	80 91 7d 07 	lds	r24, 0x077D	; 0x80077d <pxCurrentTCB>
    135a:	90 91 7e 07 	lds	r25, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    135e:	02 96       	adiw	r24, 0x02	; 2
    1360:	0e 94 3e 02 	call	0x47c	; 0x47c <uxListRemove>
    1364:	ce 01       	movw	r24, r28
    1366:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <prvAddCurrentTaskToDelayedList>
    136a:	0e 94 1c 09 	call	0x1238	; 0x1238 <xTaskResumeAll>
    136e:	81 11       	cpse	r24, r1
    1370:	02 c0       	rjmp	.+4      	; 0x1376 <vTaskDelay+0x3a>
    1372:	0e 94 0a 03 	call	0x614	; 0x614 <vPortYield>
    1376:	df 91       	pop	r29
    1378:	cf 91       	pop	r28
    137a:	08 95       	ret

0000137c <prvIdleTask>:
    137c:	01 e3       	ldi	r16, 0x31	; 49
    137e:	17 e0       	ldi	r17, 0x07	; 7
    1380:	0f 2e       	mov	r0, r31
    1382:	f9 e5       	ldi	r31, 0x59	; 89
    1384:	ef 2e       	mov	r14, r31
    1386:	f7 e0       	ldi	r31, 0x07	; 7
    1388:	ff 2e       	mov	r15, r31
    138a:	f0 2d       	mov	r31, r0
    138c:	29 c0       	rjmp	.+82     	; 0x13e0 <prvIdleTask+0x64>
    138e:	0e 94 59 08 	call	0x10b2	; 0x10b2 <vTaskSuspendAll>
    1392:	d8 01       	movw	r26, r16
    1394:	cc 91       	ld	r28, X
    1396:	0e 94 1c 09 	call	0x1238	; 0x1238 <xTaskResumeAll>
    139a:	cc 23       	and	r28, r28
    139c:	09 f1       	breq	.+66     	; 0x13e0 <prvIdleTask+0x64>
    139e:	0f b6       	in	r0, 0x3f	; 63
    13a0:	f8 94       	cli
    13a2:	0f 92       	push	r0
    13a4:	d8 01       	movw	r26, r16
    13a6:	15 96       	adiw	r26, 0x05	; 5
    13a8:	ed 91       	ld	r30, X+
    13aa:	fc 91       	ld	r31, X
    13ac:	16 97       	sbiw	r26, 0x06	; 6
    13ae:	c6 81       	ldd	r28, Z+6	; 0x06
    13b0:	d7 81       	ldd	r29, Z+7	; 0x07
    13b2:	ce 01       	movw	r24, r28
    13b4:	02 96       	adiw	r24, 0x02	; 2
    13b6:	0e 94 3e 02 	call	0x47c	; 0x47c <uxListRemove>
    13ba:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxCurrentNumberOfTasks>
    13be:	81 50       	subi	r24, 0x01	; 1
    13c0:	80 93 24 07 	sts	0x0724, r24	; 0x800724 <uxCurrentNumberOfTasks>
    13c4:	80 91 30 07 	lds	r24, 0x0730	; 0x800730 <uxTasksDeleted>
    13c8:	81 50       	subi	r24, 0x01	; 1
    13ca:	80 93 30 07 	sts	0x0730, r24	; 0x800730 <uxTasksDeleted>
    13ce:	0f 90       	pop	r0
    13d0:	0f be       	out	0x3f, r0	; 63
    13d2:	8f 89       	ldd	r24, Y+23	; 0x17
    13d4:	98 8d       	ldd	r25, Y+24	; 0x18
    13d6:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <vPortFree>
    13da:	ce 01       	movw	r24, r28
    13dc:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <vPortFree>
    13e0:	80 91 30 07 	lds	r24, 0x0730	; 0x800730 <uxTasksDeleted>
    13e4:	81 11       	cpse	r24, r1
    13e6:	d3 cf       	rjmp	.-90     	; 0x138e <prvIdleTask+0x12>
    13e8:	f7 01       	movw	r30, r14
    13ea:	80 81       	ld	r24, Z
    13ec:	82 30       	cpi	r24, 0x02	; 2
    13ee:	c0 f3       	brcs	.-16     	; 0x13e0 <prvIdleTask+0x64>
    13f0:	0e 94 0a 03 	call	0x614	; 0x614 <vPortYield>
    13f4:	f5 cf       	rjmp	.-22     	; 0x13e0 <prvIdleTask+0x64>

000013f6 <vTaskSwitchContext>:
    13f6:	80 91 1b 07 	lds	r24, 0x071B	; 0x80071b <uxSchedulerSuspended>
    13fa:	88 23       	and	r24, r24
    13fc:	21 f0       	breq	.+8      	; 0x1406 <vTaskSwitchContext+0x10>
    13fe:	81 e0       	ldi	r24, 0x01	; 1
    1400:	80 93 1e 07 	sts	0x071E, r24	; 0x80071e <xYieldPending>
    1404:	08 95       	ret
    1406:	10 92 1e 07 	sts	0x071E, r1	; 0x80071e <xYieldPending>
    140a:	80 91 21 07 	lds	r24, 0x0721	; 0x800721 <uxTopReadyPriority>
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	fc 01       	movw	r30, r24
    1412:	ee 0f       	add	r30, r30
    1414:	ff 1f       	adc	r31, r31
    1416:	ee 0f       	add	r30, r30
    1418:	ff 1f       	adc	r31, r31
    141a:	ee 0f       	add	r30, r30
    141c:	ff 1f       	adc	r31, r31
    141e:	8e 0f       	add	r24, r30
    1420:	9f 1f       	adc	r25, r31
    1422:	fc 01       	movw	r30, r24
    1424:	e7 5a       	subi	r30, 0xA7	; 167
    1426:	f8 4f       	sbci	r31, 0xF8	; 248
    1428:	80 81       	ld	r24, Z
    142a:	81 11       	cpse	r24, r1
    142c:	17 c0       	rjmp	.+46     	; 0x145c <vTaskSwitchContext+0x66>
    142e:	80 91 21 07 	lds	r24, 0x0721	; 0x800721 <uxTopReadyPriority>
    1432:	81 50       	subi	r24, 0x01	; 1
    1434:	80 93 21 07 	sts	0x0721, r24	; 0x800721 <uxTopReadyPriority>
    1438:	80 91 21 07 	lds	r24, 0x0721	; 0x800721 <uxTopReadyPriority>
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	fc 01       	movw	r30, r24
    1440:	ee 0f       	add	r30, r30
    1442:	ff 1f       	adc	r31, r31
    1444:	ee 0f       	add	r30, r30
    1446:	ff 1f       	adc	r31, r31
    1448:	ee 0f       	add	r30, r30
    144a:	ff 1f       	adc	r31, r31
    144c:	8e 0f       	add	r24, r30
    144e:	9f 1f       	adc	r25, r31
    1450:	fc 01       	movw	r30, r24
    1452:	e7 5a       	subi	r30, 0xA7	; 167
    1454:	f8 4f       	sbci	r31, 0xF8	; 248
    1456:	80 81       	ld	r24, Z
    1458:	88 23       	and	r24, r24
    145a:	49 f3       	breq	.-46     	; 0x142e <vTaskSwitchContext+0x38>
    145c:	80 91 21 07 	lds	r24, 0x0721	; 0x800721 <uxTopReadyPriority>
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	9c 01       	movw	r18, r24
    1464:	22 0f       	add	r18, r18
    1466:	33 1f       	adc	r19, r19
    1468:	22 0f       	add	r18, r18
    146a:	33 1f       	adc	r19, r19
    146c:	22 0f       	add	r18, r18
    146e:	33 1f       	adc	r19, r19
    1470:	28 0f       	add	r18, r24
    1472:	39 1f       	adc	r19, r25
    1474:	d9 01       	movw	r26, r18
    1476:	a7 5a       	subi	r26, 0xA7	; 167
    1478:	b8 4f       	sbci	r27, 0xF8	; 248
    147a:	11 96       	adiw	r26, 0x01	; 1
    147c:	ed 91       	ld	r30, X+
    147e:	fc 91       	ld	r31, X
    1480:	12 97       	sbiw	r26, 0x02	; 2
    1482:	02 80       	ldd	r0, Z+2	; 0x02
    1484:	f3 81       	ldd	r31, Z+3	; 0x03
    1486:	e0 2d       	mov	r30, r0
    1488:	12 96       	adiw	r26, 0x02	; 2
    148a:	fc 93       	st	X, r31
    148c:	ee 93       	st	-X, r30
    148e:	11 97       	sbiw	r26, 0x01	; 1
    1490:	24 5a       	subi	r18, 0xA4	; 164
    1492:	38 4f       	sbci	r19, 0xF8	; 248
    1494:	e2 17       	cp	r30, r18
    1496:	f3 07       	cpc	r31, r19
    1498:	29 f4       	brne	.+10     	; 0x14a4 <vTaskSwitchContext+0xae>
    149a:	22 81       	ldd	r18, Z+2	; 0x02
    149c:	33 81       	ldd	r19, Z+3	; 0x03
    149e:	fd 01       	movw	r30, r26
    14a0:	32 83       	std	Z+2, r19	; 0x02
    14a2:	21 83       	std	Z+1, r18	; 0x01
    14a4:	fc 01       	movw	r30, r24
    14a6:	ee 0f       	add	r30, r30
    14a8:	ff 1f       	adc	r31, r31
    14aa:	ee 0f       	add	r30, r30
    14ac:	ff 1f       	adc	r31, r31
    14ae:	ee 0f       	add	r30, r30
    14b0:	ff 1f       	adc	r31, r31
    14b2:	8e 0f       	add	r24, r30
    14b4:	9f 1f       	adc	r25, r31
    14b6:	fc 01       	movw	r30, r24
    14b8:	e7 5a       	subi	r30, 0xA7	; 167
    14ba:	f8 4f       	sbci	r31, 0xF8	; 248
    14bc:	01 80       	ldd	r0, Z+1	; 0x01
    14be:	f2 81       	ldd	r31, Z+2	; 0x02
    14c0:	e0 2d       	mov	r30, r0
    14c2:	86 81       	ldd	r24, Z+6	; 0x06
    14c4:	97 81       	ldd	r25, Z+7	; 0x07
    14c6:	90 93 7e 07 	sts	0x077E, r25	; 0x80077e <pxCurrentTCB+0x1>
    14ca:	80 93 7d 07 	sts	0x077D, r24	; 0x80077d <pxCurrentTCB>
    14ce:	08 95       	ret

000014d0 <vTaskPlaceOnEventList>:
    14d0:	cf 93       	push	r28
    14d2:	df 93       	push	r29
    14d4:	eb 01       	movw	r28, r22
    14d6:	60 91 7d 07 	lds	r22, 0x077D	; 0x80077d <pxCurrentTCB>
    14da:	70 91 7e 07 	lds	r23, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    14de:	64 5f       	subi	r22, 0xF4	; 244
    14e0:	7f 4f       	sbci	r23, 0xFF	; 255
    14e2:	0e 94 0d 02 	call	0x41a	; 0x41a <vListInsert>
    14e6:	80 91 7d 07 	lds	r24, 0x077D	; 0x80077d <pxCurrentTCB>
    14ea:	90 91 7e 07 	lds	r25, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    14ee:	02 96       	adiw	r24, 0x02	; 2
    14f0:	0e 94 3e 02 	call	0x47c	; 0x47c <uxListRemove>
    14f4:	cf 3f       	cpi	r28, 0xFF	; 255
    14f6:	8f ef       	ldi	r24, 0xFF	; 255
    14f8:	d8 07       	cpc	r29, r24
    14fa:	59 f4       	brne	.+22     	; 0x1512 <vTaskPlaceOnEventList+0x42>
    14fc:	60 91 7d 07 	lds	r22, 0x077D	; 0x80077d <pxCurrentTCB>
    1500:	70 91 7e 07 	lds	r23, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    1504:	6e 5f       	subi	r22, 0xFE	; 254
    1506:	7f 4f       	sbci	r23, 0xFF	; 255
    1508:	87 e2       	ldi	r24, 0x27	; 39
    150a:	97 e0       	ldi	r25, 0x07	; 7
    150c:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <vListInsertEnd>
    1510:	08 c0       	rjmp	.+16     	; 0x1522 <vTaskPlaceOnEventList+0x52>
    1512:	80 91 22 07 	lds	r24, 0x0722	; 0x800722 <xTickCount>
    1516:	90 91 23 07 	lds	r25, 0x0723	; 0x800723 <xTickCount+0x1>
    151a:	8c 0f       	add	r24, r28
    151c:	9d 1f       	adc	r25, r29
    151e:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <prvAddCurrentTaskToDelayedList>
    1522:	df 91       	pop	r29
    1524:	cf 91       	pop	r28
    1526:	08 95       	ret

00001528 <xTaskRemoveFromEventList>:
    1528:	0f 93       	push	r16
    152a:	1f 93       	push	r17
    152c:	cf 93       	push	r28
    152e:	df 93       	push	r29
    1530:	dc 01       	movw	r26, r24
    1532:	15 96       	adiw	r26, 0x05	; 5
    1534:	ed 91       	ld	r30, X+
    1536:	fc 91       	ld	r31, X
    1538:	16 97       	sbiw	r26, 0x06	; 6
    153a:	c6 81       	ldd	r28, Z+6	; 0x06
    153c:	d7 81       	ldd	r29, Z+7	; 0x07
    153e:	8e 01       	movw	r16, r28
    1540:	04 5f       	subi	r16, 0xF4	; 244
    1542:	1f 4f       	sbci	r17, 0xFF	; 255
    1544:	c8 01       	movw	r24, r16
    1546:	0e 94 3e 02 	call	0x47c	; 0x47c <uxListRemove>
    154a:	80 91 1b 07 	lds	r24, 0x071B	; 0x80071b <uxSchedulerSuspended>
    154e:	81 11       	cpse	r24, r1
    1550:	1c c0       	rjmp	.+56     	; 0x158a <xTaskRemoveFromEventList+0x62>
    1552:	0a 50       	subi	r16, 0x0A	; 10
    1554:	11 09       	sbc	r17, r1
    1556:	c8 01       	movw	r24, r16
    1558:	0e 94 3e 02 	call	0x47c	; 0x47c <uxListRemove>
    155c:	8e 89       	ldd	r24, Y+22	; 0x16
    155e:	90 91 21 07 	lds	r25, 0x0721	; 0x800721 <uxTopReadyPriority>
    1562:	98 17       	cp	r25, r24
    1564:	10 f4       	brcc	.+4      	; 0x156a <xTaskRemoveFromEventList+0x42>
    1566:	80 93 21 07 	sts	0x0721, r24	; 0x800721 <uxTopReadyPriority>
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	9c 01       	movw	r18, r24
    156e:	22 0f       	add	r18, r18
    1570:	33 1f       	adc	r19, r19
    1572:	22 0f       	add	r18, r18
    1574:	33 1f       	adc	r19, r19
    1576:	22 0f       	add	r18, r18
    1578:	33 1f       	adc	r19, r19
    157a:	82 0f       	add	r24, r18
    157c:	93 1f       	adc	r25, r19
    157e:	b8 01       	movw	r22, r16
    1580:	87 5a       	subi	r24, 0xA7	; 167
    1582:	98 4f       	sbci	r25, 0xF8	; 248
    1584:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <vListInsertEnd>
    1588:	05 c0       	rjmp	.+10     	; 0x1594 <xTaskRemoveFromEventList+0x6c>
    158a:	b8 01       	movw	r22, r16
    158c:	8a e3       	ldi	r24, 0x3A	; 58
    158e:	97 e0       	ldi	r25, 0x07	; 7
    1590:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <vListInsertEnd>
    1594:	e0 91 7d 07 	lds	r30, 0x077D	; 0x80077d <pxCurrentTCB>
    1598:	f0 91 7e 07 	lds	r31, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    159c:	9e 89       	ldd	r25, Y+22	; 0x16
    159e:	86 89       	ldd	r24, Z+22	; 0x16
    15a0:	89 17       	cp	r24, r25
    15a2:	20 f4       	brcc	.+8      	; 0x15ac <xTaskRemoveFromEventList+0x84>
    15a4:	81 e0       	ldi	r24, 0x01	; 1
    15a6:	80 93 1e 07 	sts	0x071E, r24	; 0x80071e <xYieldPending>
    15aa:	01 c0       	rjmp	.+2      	; 0x15ae <xTaskRemoveFromEventList+0x86>
    15ac:	80 e0       	ldi	r24, 0x00	; 0
    15ae:	df 91       	pop	r29
    15b0:	cf 91       	pop	r28
    15b2:	1f 91       	pop	r17
    15b4:	0f 91       	pop	r16
    15b6:	08 95       	ret

000015b8 <vTaskSetTimeOutState>:
    15b8:	20 91 1d 07 	lds	r18, 0x071D	; 0x80071d <xNumOfOverflows>
    15bc:	fc 01       	movw	r30, r24
    15be:	20 83       	st	Z, r18
    15c0:	20 91 22 07 	lds	r18, 0x0722	; 0x800722 <xTickCount>
    15c4:	30 91 23 07 	lds	r19, 0x0723	; 0x800723 <xTickCount+0x1>
    15c8:	32 83       	std	Z+2, r19	; 0x02
    15ca:	21 83       	std	Z+1, r18	; 0x01
    15cc:	08 95       	ret

000015ce <xTaskCheckForTimeOut>:
    15ce:	0f b6       	in	r0, 0x3f	; 63
    15d0:	f8 94       	cli
    15d2:	0f 92       	push	r0
    15d4:	40 91 22 07 	lds	r20, 0x0722	; 0x800722 <xTickCount>
    15d8:	50 91 23 07 	lds	r21, 0x0723	; 0x800723 <xTickCount+0x1>
    15dc:	db 01       	movw	r26, r22
    15de:	2d 91       	ld	r18, X+
    15e0:	3c 91       	ld	r19, X
    15e2:	2f 3f       	cpi	r18, 0xFF	; 255
    15e4:	bf ef       	ldi	r27, 0xFF	; 255
    15e6:	3b 07       	cpc	r19, r27
    15e8:	19 f1       	breq	.+70     	; 0x1630 <xTaskCheckForTimeOut+0x62>
    15ea:	e0 91 1d 07 	lds	r30, 0x071D	; 0x80071d <xNumOfOverflows>
    15ee:	dc 01       	movw	r26, r24
    15f0:	fc 91       	ld	r31, X
    15f2:	fe 17       	cp	r31, r30
    15f4:	39 f0       	breq	.+14     	; 0x1604 <xTaskCheckForTimeOut+0x36>
    15f6:	11 96       	adiw	r26, 0x01	; 1
    15f8:	ed 91       	ld	r30, X+
    15fa:	fc 91       	ld	r31, X
    15fc:	12 97       	sbiw	r26, 0x02	; 2
    15fe:	4e 17       	cp	r20, r30
    1600:	5f 07       	cpc	r21, r31
    1602:	c0 f4       	brcc	.+48     	; 0x1634 <xTaskCheckForTimeOut+0x66>
    1604:	dc 01       	movw	r26, r24
    1606:	11 96       	adiw	r26, 0x01	; 1
    1608:	ed 91       	ld	r30, X+
    160a:	fc 91       	ld	r31, X
    160c:	12 97       	sbiw	r26, 0x02	; 2
    160e:	da 01       	movw	r26, r20
    1610:	ae 1b       	sub	r26, r30
    1612:	bf 0b       	sbc	r27, r31
    1614:	a2 17       	cp	r26, r18
    1616:	b3 07       	cpc	r27, r19
    1618:	78 f4       	brcc	.+30     	; 0x1638 <xTaskCheckForTimeOut+0x6a>
    161a:	db 01       	movw	r26, r22
    161c:	e4 1b       	sub	r30, r20
    161e:	f5 0b       	sbc	r31, r21
    1620:	2e 0f       	add	r18, r30
    1622:	3f 1f       	adc	r19, r31
    1624:	2d 93       	st	X+, r18
    1626:	3c 93       	st	X, r19
    1628:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <vTaskSetTimeOutState>
    162c:	80 e0       	ldi	r24, 0x00	; 0
    162e:	05 c0       	rjmp	.+10     	; 0x163a <xTaskCheckForTimeOut+0x6c>
    1630:	80 e0       	ldi	r24, 0x00	; 0
    1632:	03 c0       	rjmp	.+6      	; 0x163a <xTaskCheckForTimeOut+0x6c>
    1634:	81 e0       	ldi	r24, 0x01	; 1
    1636:	01 c0       	rjmp	.+2      	; 0x163a <xTaskCheckForTimeOut+0x6c>
    1638:	81 e0       	ldi	r24, 0x01	; 1
    163a:	0f 90       	pop	r0
    163c:	0f be       	out	0x3f, r0	; 63
    163e:	08 95       	ret

00001640 <vTaskMissedYield>:
    1640:	81 e0       	ldi	r24, 0x01	; 1
    1642:	80 93 1e 07 	sts	0x071E, r24	; 0x80071e <xYieldPending>
    1646:	08 95       	ret

00001648 <vTaskPriorityInherit>:
    1648:	0f 93       	push	r16
    164a:	1f 93       	push	r17
    164c:	cf 93       	push	r28
    164e:	df 93       	push	r29
    1650:	fc 01       	movw	r30, r24
    1652:	89 2b       	or	r24, r25
    1654:	09 f4       	brne	.+2      	; 0x1658 <vTaskPriorityInherit+0x10>
    1656:	55 c0       	rjmp	.+170    	; 0x1702 <vTaskPriorityInherit+0xba>
    1658:	26 89       	ldd	r18, Z+22	; 0x16
    165a:	a0 91 7d 07 	lds	r26, 0x077D	; 0x80077d <pxCurrentTCB>
    165e:	b0 91 7e 07 	lds	r27, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    1662:	56 96       	adiw	r26, 0x16	; 22
    1664:	8c 91       	ld	r24, X
    1666:	28 17       	cp	r18, r24
    1668:	08 f0       	brcs	.+2      	; 0x166c <vTaskPriorityInherit+0x24>
    166a:	4b c0       	rjmp	.+150    	; 0x1702 <vTaskPriorityInherit+0xba>
    166c:	84 85       	ldd	r24, Z+12	; 0x0c
    166e:	95 85       	ldd	r25, Z+13	; 0x0d
    1670:	99 23       	and	r25, r25
    1672:	64 f0       	brlt	.+24     	; 0x168c <vTaskPriorityInherit+0x44>
    1674:	a0 91 7d 07 	lds	r26, 0x077D	; 0x80077d <pxCurrentTCB>
    1678:	b0 91 7e 07 	lds	r27, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    167c:	56 96       	adiw	r26, 0x16	; 22
    167e:	3c 91       	ld	r19, X
    1680:	84 e0       	ldi	r24, 0x04	; 4
    1682:	90 e0       	ldi	r25, 0x00	; 0
    1684:	83 1b       	sub	r24, r19
    1686:	91 09       	sbc	r25, r1
    1688:	95 87       	std	Z+13, r25	; 0x0d
    168a:	84 87       	std	Z+12, r24	; 0x0c
    168c:	30 e0       	ldi	r19, 0x00	; 0
    168e:	c9 01       	movw	r24, r18
    1690:	88 0f       	add	r24, r24
    1692:	99 1f       	adc	r25, r25
    1694:	88 0f       	add	r24, r24
    1696:	99 1f       	adc	r25, r25
    1698:	88 0f       	add	r24, r24
    169a:	99 1f       	adc	r25, r25
    169c:	28 0f       	add	r18, r24
    169e:	39 1f       	adc	r19, r25
    16a0:	27 5a       	subi	r18, 0xA7	; 167
    16a2:	38 4f       	sbci	r19, 0xF8	; 248
    16a4:	82 85       	ldd	r24, Z+10	; 0x0a
    16a6:	93 85       	ldd	r25, Z+11	; 0x0b
    16a8:	82 17       	cp	r24, r18
    16aa:	93 07       	cpc	r25, r19
    16ac:	19 f5       	brne	.+70     	; 0x16f4 <vTaskPriorityInherit+0xac>
    16ae:	8f 01       	movw	r16, r30
    16b0:	ef 01       	movw	r28, r30
    16b2:	22 96       	adiw	r28, 0x02	; 2
    16b4:	ce 01       	movw	r24, r28
    16b6:	0e 94 3e 02 	call	0x47c	; 0x47c <uxListRemove>
    16ba:	e0 91 7d 07 	lds	r30, 0x077D	; 0x80077d <pxCurrentTCB>
    16be:	f0 91 7e 07 	lds	r31, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    16c2:	86 89       	ldd	r24, Z+22	; 0x16
    16c4:	f8 01       	movw	r30, r16
    16c6:	86 8b       	std	Z+22, r24	; 0x16
    16c8:	90 91 21 07 	lds	r25, 0x0721	; 0x800721 <uxTopReadyPriority>
    16cc:	98 17       	cp	r25, r24
    16ce:	10 f4       	brcc	.+4      	; 0x16d4 <vTaskPriorityInherit+0x8c>
    16d0:	80 93 21 07 	sts	0x0721, r24	; 0x800721 <uxTopReadyPriority>
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	9c 01       	movw	r18, r24
    16d8:	22 0f       	add	r18, r18
    16da:	33 1f       	adc	r19, r19
    16dc:	22 0f       	add	r18, r18
    16de:	33 1f       	adc	r19, r19
    16e0:	22 0f       	add	r18, r18
    16e2:	33 1f       	adc	r19, r19
    16e4:	82 0f       	add	r24, r18
    16e6:	93 1f       	adc	r25, r19
    16e8:	be 01       	movw	r22, r28
    16ea:	87 5a       	subi	r24, 0xA7	; 167
    16ec:	98 4f       	sbci	r25, 0xF8	; 248
    16ee:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <vListInsertEnd>
    16f2:	07 c0       	rjmp	.+14     	; 0x1702 <vTaskPriorityInherit+0xba>
    16f4:	a0 91 7d 07 	lds	r26, 0x077D	; 0x80077d <pxCurrentTCB>
    16f8:	b0 91 7e 07 	lds	r27, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    16fc:	56 96       	adiw	r26, 0x16	; 22
    16fe:	8c 91       	ld	r24, X
    1700:	86 8b       	std	Z+22, r24	; 0x16
    1702:	df 91       	pop	r29
    1704:	cf 91       	pop	r28
    1706:	1f 91       	pop	r17
    1708:	0f 91       	pop	r16
    170a:	08 95       	ret

0000170c <xTaskPriorityDisinherit>:
    170c:	0f 93       	push	r16
    170e:	1f 93       	push	r17
    1710:	cf 93       	push	r28
    1712:	df 93       	push	r29
    1714:	fc 01       	movw	r30, r24
    1716:	89 2b       	or	r24, r25
    1718:	79 f1       	breq	.+94     	; 0x1778 <xTaskPriorityDisinherit+0x6c>
    171a:	82 a1       	ldd	r24, Z+34	; 0x22
    171c:	81 50       	subi	r24, 0x01	; 1
    171e:	82 a3       	std	Z+34, r24	; 0x22
    1720:	26 89       	ldd	r18, Z+22	; 0x16
    1722:	91 a1       	ldd	r25, Z+33	; 0x21
    1724:	29 17       	cp	r18, r25
    1726:	51 f1       	breq	.+84     	; 0x177c <xTaskPriorityDisinherit+0x70>
    1728:	81 11       	cpse	r24, r1
    172a:	2a c0       	rjmp	.+84     	; 0x1780 <xTaskPriorityDisinherit+0x74>
    172c:	ef 01       	movw	r28, r30
    172e:	8f 01       	movw	r16, r30
    1730:	0e 5f       	subi	r16, 0xFE	; 254
    1732:	1f 4f       	sbci	r17, 0xFF	; 255
    1734:	c8 01       	movw	r24, r16
    1736:	0e 94 3e 02 	call	0x47c	; 0x47c <uxListRemove>
    173a:	89 a1       	ldd	r24, Y+33	; 0x21
    173c:	8e 8b       	std	Y+22, r24	; 0x16
    173e:	24 e0       	ldi	r18, 0x04	; 4
    1740:	30 e0       	ldi	r19, 0x00	; 0
    1742:	28 1b       	sub	r18, r24
    1744:	31 09       	sbc	r19, r1
    1746:	3d 87       	std	Y+13, r19	; 0x0d
    1748:	2c 87       	std	Y+12, r18	; 0x0c
    174a:	90 91 21 07 	lds	r25, 0x0721	; 0x800721 <uxTopReadyPriority>
    174e:	98 17       	cp	r25, r24
    1750:	10 f4       	brcc	.+4      	; 0x1756 <xTaskPriorityDisinherit+0x4a>
    1752:	80 93 21 07 	sts	0x0721, r24	; 0x800721 <uxTopReadyPriority>
    1756:	90 e0       	ldi	r25, 0x00	; 0
    1758:	9c 01       	movw	r18, r24
    175a:	22 0f       	add	r18, r18
    175c:	33 1f       	adc	r19, r19
    175e:	22 0f       	add	r18, r18
    1760:	33 1f       	adc	r19, r19
    1762:	22 0f       	add	r18, r18
    1764:	33 1f       	adc	r19, r19
    1766:	82 0f       	add	r24, r18
    1768:	93 1f       	adc	r25, r19
    176a:	b8 01       	movw	r22, r16
    176c:	87 5a       	subi	r24, 0xA7	; 167
    176e:	98 4f       	sbci	r25, 0xF8	; 248
    1770:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <vListInsertEnd>
    1774:	81 e0       	ldi	r24, 0x01	; 1
    1776:	05 c0       	rjmp	.+10     	; 0x1782 <xTaskPriorityDisinherit+0x76>
    1778:	80 e0       	ldi	r24, 0x00	; 0
    177a:	03 c0       	rjmp	.+6      	; 0x1782 <xTaskPriorityDisinherit+0x76>
    177c:	80 e0       	ldi	r24, 0x00	; 0
    177e:	01 c0       	rjmp	.+2      	; 0x1782 <xTaskPriorityDisinherit+0x76>
    1780:	80 e0       	ldi	r24, 0x00	; 0
    1782:	df 91       	pop	r29
    1784:	cf 91       	pop	r28
    1786:	1f 91       	pop	r17
    1788:	0f 91       	pop	r16
    178a:	08 95       	ret

0000178c <pvTaskIncrementMutexHeldCount>:
    178c:	80 91 7d 07 	lds	r24, 0x077D	; 0x80077d <pxCurrentTCB>
    1790:	90 91 7e 07 	lds	r25, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    1794:	89 2b       	or	r24, r25
    1796:	39 f0       	breq	.+14     	; 0x17a6 <pvTaskIncrementMutexHeldCount+0x1a>
    1798:	e0 91 7d 07 	lds	r30, 0x077D	; 0x80077d <pxCurrentTCB>
    179c:	f0 91 7e 07 	lds	r31, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    17a0:	82 a1       	ldd	r24, Z+34	; 0x22
    17a2:	8f 5f       	subi	r24, 0xFF	; 255
    17a4:	82 a3       	std	Z+34, r24	; 0x22
    17a6:	80 91 7d 07 	lds	r24, 0x077D	; 0x80077d <pxCurrentTCB>
    17aa:	90 91 7e 07 	lds	r25, 0x077E	; 0x80077e <pxCurrentTCB+0x1>
    17ae:	08 95       	ret

000017b0 <__vector_1>:
    17b0:	1f 92       	push	r1
    17b2:	0f 92       	push	r0
    17b4:	0f b6       	in	r0, 0x3f	; 63
    17b6:	0f 92       	push	r0
    17b8:	11 24       	eor	r1, r1
    17ba:	2f 93       	push	r18
    17bc:	3f 93       	push	r19
    17be:	4f 93       	push	r20
    17c0:	5f 93       	push	r21
    17c2:	6f 93       	push	r22
    17c4:	7f 93       	push	r23
    17c6:	8f 93       	push	r24
    17c8:	9f 93       	push	r25
    17ca:	af 93       	push	r26
    17cc:	bf 93       	push	r27
    17ce:	ef 93       	push	r30
    17d0:	ff 93       	push	r31
    17d2:	80 91 7f 07 	lds	r24, 0x077F	; 0x80077f <intFunc>
    17d6:	90 91 80 07 	lds	r25, 0x0780	; 0x800780 <intFunc+0x1>
    17da:	89 2b       	or	r24, r25
    17dc:	29 f0       	breq	.+10     	; 0x17e8 <__vector_1+0x38>
    17de:	e0 91 7f 07 	lds	r30, 0x077F	; 0x80077f <intFunc>
    17e2:	f0 91 80 07 	lds	r31, 0x0780	; 0x800780 <intFunc+0x1>
    17e6:	09 95       	icall
    17e8:	ff 91       	pop	r31
    17ea:	ef 91       	pop	r30
    17ec:	bf 91       	pop	r27
    17ee:	af 91       	pop	r26
    17f0:	9f 91       	pop	r25
    17f2:	8f 91       	pop	r24
    17f4:	7f 91       	pop	r23
    17f6:	6f 91       	pop	r22
    17f8:	5f 91       	pop	r21
    17fa:	4f 91       	pop	r20
    17fc:	3f 91       	pop	r19
    17fe:	2f 91       	pop	r18
    1800:	0f 90       	pop	r0
    1802:	0f be       	out	0x3f, r0	; 63
    1804:	0f 90       	pop	r0
    1806:	1f 90       	pop	r1
    1808:	18 95       	reti

0000180a <__vector_2>:
    180a:	1f 92       	push	r1
    180c:	0f 92       	push	r0
    180e:	0f b6       	in	r0, 0x3f	; 63
    1810:	0f 92       	push	r0
    1812:	11 24       	eor	r1, r1
    1814:	2f 93       	push	r18
    1816:	3f 93       	push	r19
    1818:	4f 93       	push	r20
    181a:	5f 93       	push	r21
    181c:	6f 93       	push	r22
    181e:	7f 93       	push	r23
    1820:	8f 93       	push	r24
    1822:	9f 93       	push	r25
    1824:	af 93       	push	r26
    1826:	bf 93       	push	r27
    1828:	ef 93       	push	r30
    182a:	ff 93       	push	r31
    182c:	80 91 81 07 	lds	r24, 0x0781	; 0x800781 <intFunc+0x2>
    1830:	90 91 82 07 	lds	r25, 0x0782	; 0x800782 <intFunc+0x3>
    1834:	89 2b       	or	r24, r25
    1836:	29 f0       	breq	.+10     	; 0x1842 <__vector_2+0x38>
    1838:	e0 91 81 07 	lds	r30, 0x0781	; 0x800781 <intFunc+0x2>
    183c:	f0 91 82 07 	lds	r31, 0x0782	; 0x800782 <intFunc+0x3>
    1840:	09 95       	icall
    1842:	ff 91       	pop	r31
    1844:	ef 91       	pop	r30
    1846:	bf 91       	pop	r27
    1848:	af 91       	pop	r26
    184a:	9f 91       	pop	r25
    184c:	8f 91       	pop	r24
    184e:	7f 91       	pop	r23
    1850:	6f 91       	pop	r22
    1852:	5f 91       	pop	r21
    1854:	4f 91       	pop	r20
    1856:	3f 91       	pop	r19
    1858:	2f 91       	pop	r18
    185a:	0f 90       	pop	r0
    185c:	0f be       	out	0x3f, r0	; 63
    185e:	0f 90       	pop	r0
    1860:	1f 90       	pop	r1
    1862:	18 95       	reti

00001864 <__divsf3>:
    1864:	0e 94 46 0c 	call	0x188c	; 0x188c <__divsf3x>
    1868:	0c 94 f8 0c 	jmp	0x19f0	; 0x19f0 <__fp_round>
    186c:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <__fp_pscB>
    1870:	58 f0       	brcs	.+22     	; 0x1888 <__divsf3+0x24>
    1872:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__fp_pscA>
    1876:	40 f0       	brcs	.+16     	; 0x1888 <__divsf3+0x24>
    1878:	29 f4       	brne	.+10     	; 0x1884 <__divsf3+0x20>
    187a:	5f 3f       	cpi	r21, 0xFF	; 255
    187c:	29 f0       	breq	.+10     	; 0x1888 <__divsf3+0x24>
    187e:	0c 94 e1 0c 	jmp	0x19c2	; 0x19c2 <__fp_inf>
    1882:	51 11       	cpse	r21, r1
    1884:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__fp_szero>
    1888:	0c 94 e7 0c 	jmp	0x19ce	; 0x19ce <__fp_nan>

0000188c <__divsf3x>:
    188c:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__fp_split3>
    1890:	68 f3       	brcs	.-38     	; 0x186c <__divsf3+0x8>

00001892 <__divsf3_pse>:
    1892:	99 23       	and	r25, r25
    1894:	b1 f3       	breq	.-20     	; 0x1882 <__divsf3+0x1e>
    1896:	55 23       	and	r21, r21
    1898:	91 f3       	breq	.-28     	; 0x187e <__divsf3+0x1a>
    189a:	95 1b       	sub	r25, r21
    189c:	55 0b       	sbc	r21, r21
    189e:	bb 27       	eor	r27, r27
    18a0:	aa 27       	eor	r26, r26
    18a2:	62 17       	cp	r22, r18
    18a4:	73 07       	cpc	r23, r19
    18a6:	84 07       	cpc	r24, r20
    18a8:	38 f0       	brcs	.+14     	; 0x18b8 <__divsf3_pse+0x26>
    18aa:	9f 5f       	subi	r25, 0xFF	; 255
    18ac:	5f 4f       	sbci	r21, 0xFF	; 255
    18ae:	22 0f       	add	r18, r18
    18b0:	33 1f       	adc	r19, r19
    18b2:	44 1f       	adc	r20, r20
    18b4:	aa 1f       	adc	r26, r26
    18b6:	a9 f3       	breq	.-22     	; 0x18a2 <__divsf3_pse+0x10>
    18b8:	35 d0       	rcall	.+106    	; 0x1924 <__divsf3_pse+0x92>
    18ba:	0e 2e       	mov	r0, r30
    18bc:	3a f0       	brmi	.+14     	; 0x18cc <__divsf3_pse+0x3a>
    18be:	e0 e8       	ldi	r30, 0x80	; 128
    18c0:	32 d0       	rcall	.+100    	; 0x1926 <__divsf3_pse+0x94>
    18c2:	91 50       	subi	r25, 0x01	; 1
    18c4:	50 40       	sbci	r21, 0x00	; 0
    18c6:	e6 95       	lsr	r30
    18c8:	00 1c       	adc	r0, r0
    18ca:	ca f7       	brpl	.-14     	; 0x18be <__divsf3_pse+0x2c>
    18cc:	2b d0       	rcall	.+86     	; 0x1924 <__divsf3_pse+0x92>
    18ce:	fe 2f       	mov	r31, r30
    18d0:	29 d0       	rcall	.+82     	; 0x1924 <__divsf3_pse+0x92>
    18d2:	66 0f       	add	r22, r22
    18d4:	77 1f       	adc	r23, r23
    18d6:	88 1f       	adc	r24, r24
    18d8:	bb 1f       	adc	r27, r27
    18da:	26 17       	cp	r18, r22
    18dc:	37 07       	cpc	r19, r23
    18de:	48 07       	cpc	r20, r24
    18e0:	ab 07       	cpc	r26, r27
    18e2:	b0 e8       	ldi	r27, 0x80	; 128
    18e4:	09 f0       	breq	.+2      	; 0x18e8 <__divsf3_pse+0x56>
    18e6:	bb 0b       	sbc	r27, r27
    18e8:	80 2d       	mov	r24, r0
    18ea:	bf 01       	movw	r22, r30
    18ec:	ff 27       	eor	r31, r31
    18ee:	93 58       	subi	r25, 0x83	; 131
    18f0:	5f 4f       	sbci	r21, 0xFF	; 255
    18f2:	3a f0       	brmi	.+14     	; 0x1902 <__divsf3_pse+0x70>
    18f4:	9e 3f       	cpi	r25, 0xFE	; 254
    18f6:	51 05       	cpc	r21, r1
    18f8:	78 f0       	brcs	.+30     	; 0x1918 <__divsf3_pse+0x86>
    18fa:	0c 94 e1 0c 	jmp	0x19c2	; 0x19c2 <__fp_inf>
    18fe:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__fp_szero>
    1902:	5f 3f       	cpi	r21, 0xFF	; 255
    1904:	e4 f3       	brlt	.-8      	; 0x18fe <__divsf3_pse+0x6c>
    1906:	98 3e       	cpi	r25, 0xE8	; 232
    1908:	d4 f3       	brlt	.-12     	; 0x18fe <__divsf3_pse+0x6c>
    190a:	86 95       	lsr	r24
    190c:	77 95       	ror	r23
    190e:	67 95       	ror	r22
    1910:	b7 95       	ror	r27
    1912:	f7 95       	ror	r31
    1914:	9f 5f       	subi	r25, 0xFF	; 255
    1916:	c9 f7       	brne	.-14     	; 0x190a <__divsf3_pse+0x78>
    1918:	88 0f       	add	r24, r24
    191a:	91 1d       	adc	r25, r1
    191c:	96 95       	lsr	r25
    191e:	87 95       	ror	r24
    1920:	97 f9       	bld	r25, 7
    1922:	08 95       	ret
    1924:	e1 e0       	ldi	r30, 0x01	; 1
    1926:	66 0f       	add	r22, r22
    1928:	77 1f       	adc	r23, r23
    192a:	88 1f       	adc	r24, r24
    192c:	bb 1f       	adc	r27, r27
    192e:	62 17       	cp	r22, r18
    1930:	73 07       	cpc	r23, r19
    1932:	84 07       	cpc	r24, r20
    1934:	ba 07       	cpc	r27, r26
    1936:	20 f0       	brcs	.+8      	; 0x1940 <__divsf3_pse+0xae>
    1938:	62 1b       	sub	r22, r18
    193a:	73 0b       	sbc	r23, r19
    193c:	84 0b       	sbc	r24, r20
    193e:	ba 0b       	sbc	r27, r26
    1940:	ee 1f       	adc	r30, r30
    1942:	88 f7       	brcc	.-30     	; 0x1926 <__divsf3_pse+0x94>
    1944:	e0 95       	com	r30
    1946:	08 95       	ret

00001948 <__floatunsisf>:
    1948:	e8 94       	clt
    194a:	09 c0       	rjmp	.+18     	; 0x195e <__floatsisf+0x12>

0000194c <__floatsisf>:
    194c:	97 fb       	bst	r25, 7
    194e:	3e f4       	brtc	.+14     	; 0x195e <__floatsisf+0x12>
    1950:	90 95       	com	r25
    1952:	80 95       	com	r24
    1954:	70 95       	com	r23
    1956:	61 95       	neg	r22
    1958:	7f 4f       	sbci	r23, 0xFF	; 255
    195a:	8f 4f       	sbci	r24, 0xFF	; 255
    195c:	9f 4f       	sbci	r25, 0xFF	; 255
    195e:	99 23       	and	r25, r25
    1960:	a9 f0       	breq	.+42     	; 0x198c <__floatsisf+0x40>
    1962:	f9 2f       	mov	r31, r25
    1964:	96 e9       	ldi	r25, 0x96	; 150
    1966:	bb 27       	eor	r27, r27
    1968:	93 95       	inc	r25
    196a:	f6 95       	lsr	r31
    196c:	87 95       	ror	r24
    196e:	77 95       	ror	r23
    1970:	67 95       	ror	r22
    1972:	b7 95       	ror	r27
    1974:	f1 11       	cpse	r31, r1
    1976:	f8 cf       	rjmp	.-16     	; 0x1968 <__floatsisf+0x1c>
    1978:	fa f4       	brpl	.+62     	; 0x19b8 <__floatsisf+0x6c>
    197a:	bb 0f       	add	r27, r27
    197c:	11 f4       	brne	.+4      	; 0x1982 <__floatsisf+0x36>
    197e:	60 ff       	sbrs	r22, 0
    1980:	1b c0       	rjmp	.+54     	; 0x19b8 <__floatsisf+0x6c>
    1982:	6f 5f       	subi	r22, 0xFF	; 255
    1984:	7f 4f       	sbci	r23, 0xFF	; 255
    1986:	8f 4f       	sbci	r24, 0xFF	; 255
    1988:	9f 4f       	sbci	r25, 0xFF	; 255
    198a:	16 c0       	rjmp	.+44     	; 0x19b8 <__floatsisf+0x6c>
    198c:	88 23       	and	r24, r24
    198e:	11 f0       	breq	.+4      	; 0x1994 <__floatsisf+0x48>
    1990:	96 e9       	ldi	r25, 0x96	; 150
    1992:	11 c0       	rjmp	.+34     	; 0x19b6 <__floatsisf+0x6a>
    1994:	77 23       	and	r23, r23
    1996:	21 f0       	breq	.+8      	; 0x19a0 <__floatsisf+0x54>
    1998:	9e e8       	ldi	r25, 0x8E	; 142
    199a:	87 2f       	mov	r24, r23
    199c:	76 2f       	mov	r23, r22
    199e:	05 c0       	rjmp	.+10     	; 0x19aa <__floatsisf+0x5e>
    19a0:	66 23       	and	r22, r22
    19a2:	71 f0       	breq	.+28     	; 0x19c0 <__floatsisf+0x74>
    19a4:	96 e8       	ldi	r25, 0x86	; 134
    19a6:	86 2f       	mov	r24, r22
    19a8:	70 e0       	ldi	r23, 0x00	; 0
    19aa:	60 e0       	ldi	r22, 0x00	; 0
    19ac:	2a f0       	brmi	.+10     	; 0x19b8 <__floatsisf+0x6c>
    19ae:	9a 95       	dec	r25
    19b0:	66 0f       	add	r22, r22
    19b2:	77 1f       	adc	r23, r23
    19b4:	88 1f       	adc	r24, r24
    19b6:	da f7       	brpl	.-10     	; 0x19ae <__floatsisf+0x62>
    19b8:	88 0f       	add	r24, r24
    19ba:	96 95       	lsr	r25
    19bc:	87 95       	ror	r24
    19be:	97 f9       	bld	r25, 7
    19c0:	08 95       	ret

000019c2 <__fp_inf>:
    19c2:	97 f9       	bld	r25, 7
    19c4:	9f 67       	ori	r25, 0x7F	; 127
    19c6:	80 e8       	ldi	r24, 0x80	; 128
    19c8:	70 e0       	ldi	r23, 0x00	; 0
    19ca:	60 e0       	ldi	r22, 0x00	; 0
    19cc:	08 95       	ret

000019ce <__fp_nan>:
    19ce:	9f ef       	ldi	r25, 0xFF	; 255
    19d0:	80 ec       	ldi	r24, 0xC0	; 192
    19d2:	08 95       	ret

000019d4 <__fp_pscA>:
    19d4:	00 24       	eor	r0, r0
    19d6:	0a 94       	dec	r0
    19d8:	16 16       	cp	r1, r22
    19da:	17 06       	cpc	r1, r23
    19dc:	18 06       	cpc	r1, r24
    19de:	09 06       	cpc	r0, r25
    19e0:	08 95       	ret

000019e2 <__fp_pscB>:
    19e2:	00 24       	eor	r0, r0
    19e4:	0a 94       	dec	r0
    19e6:	12 16       	cp	r1, r18
    19e8:	13 06       	cpc	r1, r19
    19ea:	14 06       	cpc	r1, r20
    19ec:	05 06       	cpc	r0, r21
    19ee:	08 95       	ret

000019f0 <__fp_round>:
    19f0:	09 2e       	mov	r0, r25
    19f2:	03 94       	inc	r0
    19f4:	00 0c       	add	r0, r0
    19f6:	11 f4       	brne	.+4      	; 0x19fc <__fp_round+0xc>
    19f8:	88 23       	and	r24, r24
    19fa:	52 f0       	brmi	.+20     	; 0x1a10 <__fp_round+0x20>
    19fc:	bb 0f       	add	r27, r27
    19fe:	40 f4       	brcc	.+16     	; 0x1a10 <__fp_round+0x20>
    1a00:	bf 2b       	or	r27, r31
    1a02:	11 f4       	brne	.+4      	; 0x1a08 <__fp_round+0x18>
    1a04:	60 ff       	sbrs	r22, 0
    1a06:	04 c0       	rjmp	.+8      	; 0x1a10 <__fp_round+0x20>
    1a08:	6f 5f       	subi	r22, 0xFF	; 255
    1a0a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a0c:	8f 4f       	sbci	r24, 0xFF	; 255
    1a0e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a10:	08 95       	ret

00001a12 <__fp_split3>:
    1a12:	57 fd       	sbrc	r21, 7
    1a14:	90 58       	subi	r25, 0x80	; 128
    1a16:	44 0f       	add	r20, r20
    1a18:	55 1f       	adc	r21, r21
    1a1a:	59 f0       	breq	.+22     	; 0x1a32 <__fp_splitA+0x10>
    1a1c:	5f 3f       	cpi	r21, 0xFF	; 255
    1a1e:	71 f0       	breq	.+28     	; 0x1a3c <__fp_splitA+0x1a>
    1a20:	47 95       	ror	r20

00001a22 <__fp_splitA>:
    1a22:	88 0f       	add	r24, r24
    1a24:	97 fb       	bst	r25, 7
    1a26:	99 1f       	adc	r25, r25
    1a28:	61 f0       	breq	.+24     	; 0x1a42 <__fp_splitA+0x20>
    1a2a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a2c:	79 f0       	breq	.+30     	; 0x1a4c <__fp_splitA+0x2a>
    1a2e:	87 95       	ror	r24
    1a30:	08 95       	ret
    1a32:	12 16       	cp	r1, r18
    1a34:	13 06       	cpc	r1, r19
    1a36:	14 06       	cpc	r1, r20
    1a38:	55 1f       	adc	r21, r21
    1a3a:	f2 cf       	rjmp	.-28     	; 0x1a20 <__fp_split3+0xe>
    1a3c:	46 95       	lsr	r20
    1a3e:	f1 df       	rcall	.-30     	; 0x1a22 <__fp_splitA>
    1a40:	08 c0       	rjmp	.+16     	; 0x1a52 <__fp_splitA+0x30>
    1a42:	16 16       	cp	r1, r22
    1a44:	17 06       	cpc	r1, r23
    1a46:	18 06       	cpc	r1, r24
    1a48:	99 1f       	adc	r25, r25
    1a4a:	f1 cf       	rjmp	.-30     	; 0x1a2e <__fp_splitA+0xc>
    1a4c:	86 95       	lsr	r24
    1a4e:	71 05       	cpc	r23, r1
    1a50:	61 05       	cpc	r22, r1
    1a52:	08 94       	sec
    1a54:	08 95       	ret

00001a56 <__fp_zero>:
    1a56:	e8 94       	clt

00001a58 <__fp_szero>:
    1a58:	bb 27       	eor	r27, r27
    1a5a:	66 27       	eor	r22, r22
    1a5c:	77 27       	eor	r23, r23
    1a5e:	cb 01       	movw	r24, r22
    1a60:	97 f9       	bld	r25, 7
    1a62:	08 95       	ret

00001a64 <__mulsf3>:
    1a64:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <__mulsf3x>
    1a68:	0c 94 f8 0c 	jmp	0x19f0	; 0x19f0 <__fp_round>
    1a6c:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__fp_pscA>
    1a70:	38 f0       	brcs	.+14     	; 0x1a80 <__mulsf3+0x1c>
    1a72:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <__fp_pscB>
    1a76:	20 f0       	brcs	.+8      	; 0x1a80 <__mulsf3+0x1c>
    1a78:	95 23       	and	r25, r21
    1a7a:	11 f0       	breq	.+4      	; 0x1a80 <__mulsf3+0x1c>
    1a7c:	0c 94 e1 0c 	jmp	0x19c2	; 0x19c2 <__fp_inf>
    1a80:	0c 94 e7 0c 	jmp	0x19ce	; 0x19ce <__fp_nan>
    1a84:	11 24       	eor	r1, r1
    1a86:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__fp_szero>

00001a8a <__mulsf3x>:
    1a8a:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__fp_split3>
    1a8e:	70 f3       	brcs	.-36     	; 0x1a6c <__mulsf3+0x8>

00001a90 <__mulsf3_pse>:
    1a90:	95 9f       	mul	r25, r21
    1a92:	c1 f3       	breq	.-16     	; 0x1a84 <__mulsf3+0x20>
    1a94:	95 0f       	add	r25, r21
    1a96:	50 e0       	ldi	r21, 0x00	; 0
    1a98:	55 1f       	adc	r21, r21
    1a9a:	62 9f       	mul	r22, r18
    1a9c:	f0 01       	movw	r30, r0
    1a9e:	72 9f       	mul	r23, r18
    1aa0:	bb 27       	eor	r27, r27
    1aa2:	f0 0d       	add	r31, r0
    1aa4:	b1 1d       	adc	r27, r1
    1aa6:	63 9f       	mul	r22, r19
    1aa8:	aa 27       	eor	r26, r26
    1aaa:	f0 0d       	add	r31, r0
    1aac:	b1 1d       	adc	r27, r1
    1aae:	aa 1f       	adc	r26, r26
    1ab0:	64 9f       	mul	r22, r20
    1ab2:	66 27       	eor	r22, r22
    1ab4:	b0 0d       	add	r27, r0
    1ab6:	a1 1d       	adc	r26, r1
    1ab8:	66 1f       	adc	r22, r22
    1aba:	82 9f       	mul	r24, r18
    1abc:	22 27       	eor	r18, r18
    1abe:	b0 0d       	add	r27, r0
    1ac0:	a1 1d       	adc	r26, r1
    1ac2:	62 1f       	adc	r22, r18
    1ac4:	73 9f       	mul	r23, r19
    1ac6:	b0 0d       	add	r27, r0
    1ac8:	a1 1d       	adc	r26, r1
    1aca:	62 1f       	adc	r22, r18
    1acc:	83 9f       	mul	r24, r19
    1ace:	a0 0d       	add	r26, r0
    1ad0:	61 1d       	adc	r22, r1
    1ad2:	22 1f       	adc	r18, r18
    1ad4:	74 9f       	mul	r23, r20
    1ad6:	33 27       	eor	r19, r19
    1ad8:	a0 0d       	add	r26, r0
    1ada:	61 1d       	adc	r22, r1
    1adc:	23 1f       	adc	r18, r19
    1ade:	84 9f       	mul	r24, r20
    1ae0:	60 0d       	add	r22, r0
    1ae2:	21 1d       	adc	r18, r1
    1ae4:	82 2f       	mov	r24, r18
    1ae6:	76 2f       	mov	r23, r22
    1ae8:	6a 2f       	mov	r22, r26
    1aea:	11 24       	eor	r1, r1
    1aec:	9f 57       	subi	r25, 0x7F	; 127
    1aee:	50 40       	sbci	r21, 0x00	; 0
    1af0:	9a f0       	brmi	.+38     	; 0x1b18 <__mulsf3_pse+0x88>
    1af2:	f1 f0       	breq	.+60     	; 0x1b30 <__mulsf3_pse+0xa0>
    1af4:	88 23       	and	r24, r24
    1af6:	4a f0       	brmi	.+18     	; 0x1b0a <__mulsf3_pse+0x7a>
    1af8:	ee 0f       	add	r30, r30
    1afa:	ff 1f       	adc	r31, r31
    1afc:	bb 1f       	adc	r27, r27
    1afe:	66 1f       	adc	r22, r22
    1b00:	77 1f       	adc	r23, r23
    1b02:	88 1f       	adc	r24, r24
    1b04:	91 50       	subi	r25, 0x01	; 1
    1b06:	50 40       	sbci	r21, 0x00	; 0
    1b08:	a9 f7       	brne	.-22     	; 0x1af4 <__mulsf3_pse+0x64>
    1b0a:	9e 3f       	cpi	r25, 0xFE	; 254
    1b0c:	51 05       	cpc	r21, r1
    1b0e:	80 f0       	brcs	.+32     	; 0x1b30 <__mulsf3_pse+0xa0>
    1b10:	0c 94 e1 0c 	jmp	0x19c2	; 0x19c2 <__fp_inf>
    1b14:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__fp_szero>
    1b18:	5f 3f       	cpi	r21, 0xFF	; 255
    1b1a:	e4 f3       	brlt	.-8      	; 0x1b14 <__mulsf3_pse+0x84>
    1b1c:	98 3e       	cpi	r25, 0xE8	; 232
    1b1e:	d4 f3       	brlt	.-12     	; 0x1b14 <__mulsf3_pse+0x84>
    1b20:	86 95       	lsr	r24
    1b22:	77 95       	ror	r23
    1b24:	67 95       	ror	r22
    1b26:	b7 95       	ror	r27
    1b28:	f7 95       	ror	r31
    1b2a:	e7 95       	ror	r30
    1b2c:	9f 5f       	subi	r25, 0xFF	; 255
    1b2e:	c1 f7       	brne	.-16     	; 0x1b20 <__mulsf3_pse+0x90>
    1b30:	fe 2b       	or	r31, r30
    1b32:	88 0f       	add	r24, r24
    1b34:	91 1d       	adc	r25, r1
    1b36:	96 95       	lsr	r25
    1b38:	87 95       	ror	r24
    1b3a:	97 f9       	bld	r25, 7
    1b3c:	08 95       	ret

00001b3e <__divmodhi4>:
    1b3e:	97 fb       	bst	r25, 7
    1b40:	07 2e       	mov	r0, r23
    1b42:	16 f4       	brtc	.+4      	; 0x1b48 <__divmodhi4+0xa>
    1b44:	00 94       	com	r0
    1b46:	07 d0       	rcall	.+14     	; 0x1b56 <__divmodhi4_neg1>
    1b48:	77 fd       	sbrc	r23, 7
    1b4a:	09 d0       	rcall	.+18     	; 0x1b5e <__divmodhi4_neg2>
    1b4c:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__udivmodhi4>
    1b50:	07 fc       	sbrc	r0, 7
    1b52:	05 d0       	rcall	.+10     	; 0x1b5e <__divmodhi4_neg2>
    1b54:	3e f4       	brtc	.+14     	; 0x1b64 <__divmodhi4_exit>

00001b56 <__divmodhi4_neg1>:
    1b56:	90 95       	com	r25
    1b58:	81 95       	neg	r24
    1b5a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b5c:	08 95       	ret

00001b5e <__divmodhi4_neg2>:
    1b5e:	70 95       	com	r23
    1b60:	61 95       	neg	r22
    1b62:	7f 4f       	sbci	r23, 0xFF	; 255

00001b64 <__divmodhi4_exit>:
    1b64:	08 95       	ret

00001b66 <__udivmodhi4>:
    1b66:	aa 1b       	sub	r26, r26
    1b68:	bb 1b       	sub	r27, r27
    1b6a:	51 e1       	ldi	r21, 0x11	; 17
    1b6c:	07 c0       	rjmp	.+14     	; 0x1b7c <__udivmodhi4_ep>

00001b6e <__udivmodhi4_loop>:
    1b6e:	aa 1f       	adc	r26, r26
    1b70:	bb 1f       	adc	r27, r27
    1b72:	a6 17       	cp	r26, r22
    1b74:	b7 07       	cpc	r27, r23
    1b76:	10 f0       	brcs	.+4      	; 0x1b7c <__udivmodhi4_ep>
    1b78:	a6 1b       	sub	r26, r22
    1b7a:	b7 0b       	sbc	r27, r23

00001b7c <__udivmodhi4_ep>:
    1b7c:	88 1f       	adc	r24, r24
    1b7e:	99 1f       	adc	r25, r25
    1b80:	5a 95       	dec	r21
    1b82:	a9 f7       	brne	.-22     	; 0x1b6e <__udivmodhi4_loop>
    1b84:	80 95       	com	r24
    1b86:	90 95       	com	r25
    1b88:	bc 01       	movw	r22, r24
    1b8a:	cd 01       	movw	r24, r26
    1b8c:	08 95       	ret

00001b8e <memcpy>:
    1b8e:	fb 01       	movw	r30, r22
    1b90:	dc 01       	movw	r26, r24
    1b92:	02 c0       	rjmp	.+4      	; 0x1b98 <memcpy+0xa>
    1b94:	01 90       	ld	r0, Z+
    1b96:	0d 92       	st	X+, r0
    1b98:	41 50       	subi	r20, 0x01	; 1
    1b9a:	50 40       	sbci	r21, 0x00	; 0
    1b9c:	d8 f7       	brcc	.-10     	; 0x1b94 <memcpy+0x6>
    1b9e:	08 95       	ret

00001ba0 <_exit>:
    1ba0:	f8 94       	cli

00001ba2 <__stop_program>:
    1ba2:	ff cf       	rjmp	.-2      	; 0x1ba2 <__stop_program>
