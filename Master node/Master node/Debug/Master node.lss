
Master node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800100  00002028  000020bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002028  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000664  0080013e  0080013e  000020fa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000020fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000212c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000478  00000000  00000000  0000216c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004dd3  00000000  00000000  000025e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000014ac  00000000  00000000  000073b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002e32  00000000  00000000  00008863  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d14  00000000  00000000  0000b698  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000186b  00000000  00000000  0000c3ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000048ca  00000000  00000000  0000dc17  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000458  00000000  00000000  000124e1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 cd 0d 	jmp	0x1b9a	; 0x1b9a <__vector_1>
       8:	0c 94 fa 0d 	jmp	0x1bf4	; 0x1bf4 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__vector_10>
      2c:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__vector_11>
      30:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__vector_12>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e8 e2       	ldi	r30, 0x28	; 40
      7c:	f0 e2       	ldi	r31, 0x20	; 32
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ae 33       	cpi	r26, 0x3E	; 62
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	27 e0       	ldi	r18, 0x07	; 7
      8c:	ae e3       	ldi	r26, 0x3E	; 62
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a2 3a       	cpi	r26, 0xA2	; 162
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 29 02 	call	0x452	; 0x452 <main>
      9e:	0c 94 12 10 	jmp	0x2024	; 0x2024 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <INIT_ADC>:
      a6:	ec e7       	ldi	r30, 0x7C	; 124
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	80 81       	ld	r24, Z
      ac:	80 64       	ori	r24, 0x40	; 64
      ae:	80 83       	st	Z, r24
      b0:	ea e7       	ldi	r30, 0x7A	; 122
      b2:	f0 e0       	ldi	r31, 0x00	; 0
      b4:	80 81       	ld	r24, Z
      b6:	80 68       	ori	r24, 0x80	; 128
      b8:	80 83       	st	Z, r24
      ba:	80 81       	ld	r24, Z
      bc:	87 60       	ori	r24, 0x07	; 7
      be:	80 83       	st	Z, r24
      c0:	08 95       	ret

000000c2 <Analog_Read>:
      c2:	ec e7       	ldi	r30, 0x7C	; 124
      c4:	f0 e0       	ldi	r31, 0x00	; 0
      c6:	90 81       	ld	r25, Z
      c8:	89 2b       	or	r24, r25
      ca:	80 83       	st	Z, r24
      cc:	ea e7       	ldi	r30, 0x7A	; 122
      ce:	f0 e0       	ldi	r31, 0x00	; 0
      d0:	80 81       	ld	r24, Z
      d2:	80 64       	ori	r24, 0x40	; 64
      d4:	80 83       	st	Z, r24
      d6:	80 81       	ld	r24, Z
      d8:	86 fd       	sbrc	r24, 6
      da:	fd cf       	rjmp	.-6      	; 0xd6 <Analog_Read+0x14>
      dc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
      e0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
      e4:	08 95       	ret

000000e6 <__vector_12>:
int counts;
float dist;
uint16_t us_per_count;


ISR(TIMER1_COMPB_vect){
      e6:	1f 92       	push	r1
      e8:	0f 92       	push	r0
      ea:	0f b6       	in	r0, 0x3f	; 63
      ec:	0f 92       	push	r0
      ee:	11 24       	eor	r1, r1
      f0:	8f 93       	push	r24
      f2:	9f 93       	push	r25

    //Generate a 12us pulse to trigger the HR-SR04
    PORTB ^= ( 1 << PORTB1);
      f4:	95 b1       	in	r25, 0x05	; 5
      f6:	82 e0       	ldi	r24, 0x02	; 2
      f8:	98 27       	eor	r25, r24
      fa:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fc:	94 e0       	ldi	r25, 0x04	; 4
      fe:	9a 95       	dec	r25
     100:	f1 f7       	brne	.-4      	; 0xfe <__vector_12+0x18>
    _delay_us(12);
    PORTB ^= ( 1 << PORTB1);
     102:	95 b1       	in	r25, 0x05	; 5
     104:	89 27       	eor	r24, r25
     106:	85 b9       	out	0x05, r24	; 5
}
     108:	9f 91       	pop	r25
     10a:	8f 91       	pop	r24
     10c:	0f 90       	pop	r0
     10e:	0f be       	out	0x3f, r0	; 63
     110:	0f 90       	pop	r0
     112:	1f 90       	pop	r1
     114:	18 95       	reti

00000116 <__vector_10>:

ISR(TIMER1_CAPT_vect){
     116:	1f 92       	push	r1
     118:	0f 92       	push	r0
     11a:	0f b6       	in	r0, 0x3f	; 63
     11c:	0f 92       	push	r0
     11e:	11 24       	eor	r1, r1
     120:	cf 92       	push	r12
     122:	df 92       	push	r13
     124:	ef 92       	push	r14
     126:	ff 92       	push	r15
     128:	2f 93       	push	r18
     12a:	3f 93       	push	r19
     12c:	4f 93       	push	r20
     12e:	5f 93       	push	r21
     130:	6f 93       	push	r22
     132:	7f 93       	push	r23
     134:	8f 93       	push	r24
     136:	9f 93       	push	r25
     138:	af 93       	push	r26
     13a:	bf 93       	push	r27
     13c:	cf 93       	push	r28
     13e:	df 93       	push	r29
     140:	ef 93       	push	r30
     142:	ff 93       	push	r31

    if(TCCR1B & (1 << ICES1)){
     144:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     148:	86 ff       	sbrs	r24, 6
     14a:	0e c0       	rjmp	.+28     	; 0x168 <__vector_10+0x52>

        TCCR1B &= ~( 1 << ICES1);
     14c:	e1 e8       	ldi	r30, 0x81	; 129
     14e:	f0 e0       	ldi	r31, 0x00	; 0
     150:	80 81       	ld	r24, Z
     152:	8f 7b       	andi	r24, 0xBF	; 191
     154:	80 83       	st	Z, r24
        rising = ICR1;
     156:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     15a:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     15e:	90 93 97 07 	sts	0x0797, r25	; 0x800797 <rising+0x1>
     162:	80 93 96 07 	sts	0x0796, r24	; 0x800796 <rising>
     166:	42 c0       	rjmp	.+132    	; 0x1ec <__vector_10+0xd6>
    }
    else{
        TCCR1B |= (1 << ICES1);
     168:	e1 e8       	ldi	r30, 0x81	; 129
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	80 81       	ld	r24, Z
     16e:	80 64       	ori	r24, 0x40	; 64
     170:	80 83       	st	Z, r24
        falling = ICR1;
     172:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     176:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     17a:	70 93 8d 07 	sts	0x078D, r23	; 0x80078d <falling+0x1>
     17e:	60 93 8c 07 	sts	0x078C, r22	; 0x80078c <falling>
        counts = falling - rising;
     182:	80 91 96 07 	lds	r24, 0x0796	; 0x800796 <rising>
     186:	90 91 97 07 	lds	r25, 0x0797	; 0x800797 <rising+0x1>
     18a:	eb 01       	movw	r28, r22
     18c:	c8 1b       	sub	r28, r24
     18e:	d9 0b       	sbc	r29, r25
     190:	d0 93 95 07 	sts	0x0795, r29	; 0x800795 <counts+0x1>
     194:	c0 93 94 07 	sts	0x0794, r28	; 0x800794 <counts>
        dist = (float)us_per_count * counts * 10 / 580;
     198:	60 91 92 07 	lds	r22, 0x0792	; 0x800792 <us_per_count>
     19c:	70 91 93 07 	lds	r23, 0x0793	; 0x800793 <us_per_count+0x1>
     1a0:	80 e0       	ldi	r24, 0x00	; 0
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	0e 94 e6 0e 	call	0x1dcc	; 0x1dcc <__floatunsisf>
     1a8:	6b 01       	movw	r12, r22
     1aa:	7c 01       	movw	r14, r24
     1ac:	be 01       	movw	r22, r28
     1ae:	dd 0f       	add	r29, r29
     1b0:	88 0b       	sbc	r24, r24
     1b2:	99 0b       	sbc	r25, r25
     1b4:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <__floatsisf>
     1b8:	9b 01       	movw	r18, r22
     1ba:	ac 01       	movw	r20, r24
     1bc:	c7 01       	movw	r24, r14
     1be:	b6 01       	movw	r22, r12
     1c0:	0e 94 74 0f 	call	0x1ee8	; 0x1ee8 <__mulsf3>
     1c4:	20 e0       	ldi	r18, 0x00	; 0
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	40 e2       	ldi	r20, 0x20	; 32
     1ca:	51 e4       	ldi	r21, 0x41	; 65
     1cc:	0e 94 74 0f 	call	0x1ee8	; 0x1ee8 <__mulsf3>
     1d0:	20 e0       	ldi	r18, 0x00	; 0
     1d2:	30 e0       	ldi	r19, 0x00	; 0
     1d4:	41 e1       	ldi	r20, 0x11	; 17
     1d6:	54 e4       	ldi	r21, 0x44	; 68
     1d8:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__divsf3>
     1dc:	60 93 8e 07 	sts	0x078E, r22	; 0x80078e <dist>
     1e0:	70 93 8f 07 	sts	0x078F, r23	; 0x80078f <dist+0x1>
     1e4:	80 93 90 07 	sts	0x0790, r24	; 0x800790 <dist+0x2>
     1e8:	90 93 91 07 	sts	0x0791, r25	; 0x800791 <dist+0x3>
    }
}
     1ec:	ff 91       	pop	r31
     1ee:	ef 91       	pop	r30
     1f0:	df 91       	pop	r29
     1f2:	cf 91       	pop	r28
     1f4:	bf 91       	pop	r27
     1f6:	af 91       	pop	r26
     1f8:	9f 91       	pop	r25
     1fa:	8f 91       	pop	r24
     1fc:	7f 91       	pop	r23
     1fe:	6f 91       	pop	r22
     200:	5f 91       	pop	r21
     202:	4f 91       	pop	r20
     204:	3f 91       	pop	r19
     206:	2f 91       	pop	r18
     208:	ff 90       	pop	r15
     20a:	ef 90       	pop	r14
     20c:	df 90       	pop	r13
     20e:	cf 90       	pop	r12
     210:	0f 90       	pop	r0
     212:	0f be       	out	0x3f, r0	; 63
     214:	0f 90       	pop	r0
     216:	1f 90       	pop	r1
     218:	18 95       	reti

0000021a <init_ultrasonic_sensor>:


void init_ultrasonic_sensor(){

    //PORTB2 as output (Arduino PIN 10)
    DDRB |= (1 << PORTB1);  
     21a:	21 9a       	sbi	0x04, 1	; 4

    //****TIMER1 INIT****//

    //noice reduction enable
    TCCR1B |= (1<<ICNC1); 
     21c:	e1 e8       	ldi	r30, 0x81	; 129
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	80 81       	ld	r24, Z
     222:	80 68       	ori	r24, 0x80	; 128
     224:	80 83       	st	Z, r24

    //Prescale to 64
    TCCR1B |= (1<<CS10) | (1<<CS11); 
     226:	80 81       	ld	r24, Z
     228:	83 60       	ori	r24, 0x03	; 3
     22a:	80 83       	st	Z, r24

    //select CTC mode
    TCCR1B |= (1<<WGM12); 
     22c:	80 81       	ld	r24, Z
     22e:	88 60       	ori	r24, 0x08	; 8
     230:	80 83       	st	Z, r24

    //read Int. at: rising edge, falling edge
	TIMSK1 |= (1<<ICIE1) | (1<<OCIE1B);
     232:	af e6       	ldi	r26, 0x6F	; 111
     234:	b0 e0       	ldi	r27, 0x00	; 0
     236:	8c 91       	ld	r24, X
     238:	84 62       	ori	r24, 0x24	; 36
     23a:	8c 93       	st	X, r24

    //read Int. at rising edge
	TCCR1B |= (1<<ICES1);
     23c:	80 81       	ld	r24, Z
     23e:	80 64       	ori	r24, 0x40	; 64
     240:	80 83       	st	Z, r24

    //calculate TOP (70ms runtime for one cycle): 16MHz/64 = 25000 count/sec. = 25000/1000 = 2500 count/us / 100*70 = 17500 count/70ms
    OCR1B = 17500;
     242:	8c e5       	ldi	r24, 0x5C	; 92
     244:	94 e4       	ldi	r25, 0x44	; 68
     246:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     24a:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>

    //CPU-speed / Prescale = cycles/sec. 1sec/ freq./sec. = 4 (t= 4us/cycle)
    us_per_count = 4;
     24e:	84 e0       	ldi	r24, 0x04	; 4
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	90 93 93 07 	sts	0x0793, r25	; 0x800793 <us_per_count+0x1>
     256:	80 93 92 07 	sts	0x0792, r24	; 0x800792 <us_per_count>

    //activate global interrupt
    sei();
     25a:	78 94       	sei
     25c:	08 95       	ret

0000025e <read_dist>:

}

int read_dist(){
    return (int)dist;
     25e:	60 91 8e 07 	lds	r22, 0x078E	; 0x80078e <dist>
     262:	70 91 8f 07 	lds	r23, 0x078F	; 0x80078f <dist+0x1>
     266:	80 91 90 07 	lds	r24, 0x0790	; 0x800790 <dist+0x2>
     26a:	90 91 91 07 	lds	r25, 0x0791	; 0x800791 <dist+0x3>
     26e:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__fixsfsi>
     272:	cb 01       	movw	r24, r22
     274:	08 95       	ret

00000276 <i2c_write>:
     276:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     27a:	84 e8       	ldi	r24, 0x84	; 132
     27c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     280:	ec eb       	ldi	r30, 0xBC	; 188
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	80 81       	ld	r24, Z
     286:	88 23       	and	r24, r24
     288:	ec f7       	brge	.-6      	; 0x284 <i2c_write+0xe>
     28a:	08 95       	ret

0000028c <i2c_start>:
     28c:	84 ea       	ldi	r24, 0xA4	; 164
     28e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     292:	ec eb       	ldi	r30, 0xBC	; 188
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	80 81       	ld	r24, Z
     298:	88 23       	and	r24, r24
     29a:	ec f3       	brlt	.-6      	; 0x296 <i2c_start+0xa>
     29c:	e9 eb       	ldi	r30, 0xB9	; 185
     29e:	f0 e0       	ldi	r31, 0x00	; 0
     2a0:	80 81       	ld	r24, Z
     2a2:	88 7f       	andi	r24, 0xF8	; 248
     2a4:	88 30       	cpi	r24, 0x08	; 8
     2a6:	e1 f7       	brne	.-8      	; 0x2a0 <i2c_start+0x14>
     2a8:	08 95       	ret

000002aa <i2c_init>:
     2aa:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     2ae:	87 e4       	ldi	r24, 0x47	; 71
     2b0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     2b4:	84 e0       	ldi	r24, 0x04	; 4
     2b6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     2ba:	08 95       	ret

000002bc <ON_OFF_ISR>:
	vTaskSuspend(NULL);
}

void ON_OFF_ISR()
{
	flag = !flag;
     2bc:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <__data_end>
     2c0:	81 e0       	ldi	r24, 0x01	; 1
     2c2:	91 11       	cpse	r25, r1
     2c4:	80 e0       	ldi	r24, 0x00	; 0
     2c6:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <__data_end>
	flag |= on_off_ID;
     2ca:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <__data_end>
     2ce:	80 68       	ori	r24, 0x80	; 128
     2d0:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <__data_end>
	xQueueSendToFrontFromISR(xQueue,&flag,TICKS_TO_WAIT);
     2d4:	21 e0       	ldi	r18, 0x01	; 1
     2d6:	4a e0       	ldi	r20, 0x0A	; 10
     2d8:	50 e0       	ldi	r21, 0x00	; 0
     2da:	6e e3       	ldi	r22, 0x3E	; 62
     2dc:	71 e0       	ldi	r23, 0x01	; 1
     2de:	80 91 9e 07 	lds	r24, 0x079E	; 0x80079e <xQueue>
     2e2:	90 91 9f 07 	lds	r25, 0x079F	; 0x80079f <xQueue+0x1>
     2e6:	0e 94 91 06 	call	0xd22	; 0xd22 <xQueueGenericSendFromISR>
	xTaskResumeFromISR(on_off_Handle);
     2ea:	80 91 98 07 	lds	r24, 0x0798	; 0x800798 <on_off_Handle>
     2ee:	90 91 99 07 	lds	r25, 0x0799	; 0x800799 <on_off_Handle+0x1>
     2f2:	0e 94 4c 09 	call	0x1298	; 0x1298 <xTaskResumeFromISR>
     2f6:	08 95       	ret

000002f8 <ultrsonic_task>:
	for( ;; );
	return 0;
}

void ultrsonic_task()
{
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	00 d0       	rcall	.+0      	; 0x2fe <ultrsonic_task+0x6>
     2fe:	cd b7       	in	r28, 0x3d	; 61
     300:	de b7       	in	r29, 0x3e	; 62
	init_ultrasonic_sensor();
     302:	0e 94 0d 01 	call	0x21a	; 0x21a <init_ultrasonic_sensor>
	const TickType_t xDelay = 50 / portTICK_PERIOD_MS;
	int dist = 0;
     306:	1a 82       	std	Y+2, r1	; 0x02
     308:	19 82       	std	Y+1, r1	; 0x01
	for (;;)
	{
		dist=read_dist();
     30a:	0e 94 2f 01 	call	0x25e	; 0x25e <read_dist>
     30e:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__fixsfsi>
		if(dist < 20)
     312:	64 31       	cpi	r22, 0x14	; 20
     314:	71 05       	cpc	r23, r1
     316:	1c f0       	brlt	.+6      	; 0x31e <ultrsonic_task+0x26>
	init_ultrasonic_sensor();
	const TickType_t xDelay = 50 / portTICK_PERIOD_MS;
	int dist = 0;
	for (;;)
	{
		dist=read_dist();
     318:	7a 83       	std	Y+2, r23	; 0x02
     31a:	69 83       	std	Y+1, r22	; 0x01
     31c:	0f c0       	rjmp	.+30     	; 0x33c <ultrsonic_task+0x44>
		if(dist < 20)
		{
			dist &= ~ ID_MASK ;
     31e:	6f 73       	andi	r22, 0x3F	; 63
     320:	7a 83       	std	Y+2, r23	; 0x02
     322:	69 83       	std	Y+1, r22	; 0x01
			dist |= ultra_S_ID ; //add massege id in last 2 bit 
			xQueueSendToFront(xQueue,&dist,TICKS_TO_WAIT);
     324:	21 e0       	ldi	r18, 0x01	; 1
     326:	4a e0       	ldi	r20, 0x0A	; 10
     328:	50 e0       	ldi	r21, 0x00	; 0
     32a:	be 01       	movw	r22, r28
     32c:	6f 5f       	subi	r22, 0xFF	; 255
     32e:	7f 4f       	sbci	r23, 0xFF	; 255
     330:	80 91 9e 07 	lds	r24, 0x079E	; 0x80079e <xQueue>
     334:	90 91 9f 07 	lds	r25, 0x079F	; 0x80079f <xQueue+0x1>
     338:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <xQueueGenericSend>
		}
		vTaskDelay( xDelay );
     33c:	82 e3       	ldi	r24, 0x32	; 50
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	0e 94 21 0b 	call	0x1642	; 0x1642 <vTaskDelay>
	}
     344:	e2 cf       	rjmp	.-60     	; 0x30a <ultrsonic_task+0x12>

00000346 <task_ADC>:

}

void task_ADC()
{
     346:	cf 93       	push	r28
     348:	df 93       	push	r29
     34a:	1f 92       	push	r1
     34c:	cd b7       	in	r28, 0x3d	; 61
     34e:	de b7       	in	r29, 0x3e	; 62
	INIT_ADC();
     350:	0e 94 53 00 	call	0xa6	; 0xa6 <INIT_ADC>
	const TickType_t xDelay = 50 / portTICK_PERIOD_MS;
	for (;;)
	{
		unsigned char data = Analog_Read(0);
		data =(data*500)/1023;
     354:	0f 2e       	mov	r0, r31
     356:	f4 ef       	ldi	r31, 0xF4	; 244
     358:	ef 2e       	mov	r14, r31
     35a:	ff 24       	eor	r15, r15
     35c:	f3 94       	inc	r15
     35e:	f0 2d       	mov	r31, r0
     360:	0f ef       	ldi	r16, 0xFF	; 255
     362:	13 e0       	ldi	r17, 0x03	; 3
{
	INIT_ADC();
	const TickType_t xDelay = 50 / portTICK_PERIOD_MS;
	for (;;)
	{
		unsigned char data = Analog_Read(0);
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	0e 94 61 00 	call	0xc2	; 0xc2 <Analog_Read>
		data =(data*500)/1023;
     36a:	28 2f       	mov	r18, r24
     36c:	2e 9d       	mul	r18, r14
     36e:	c0 01       	movw	r24, r0
     370:	2f 9d       	mul	r18, r15
     372:	90 0d       	add	r25, r0
     374:	11 24       	eor	r1, r1
     376:	b8 01       	movw	r22, r16
     378:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__divmodhi4>
		if(data>30)
     37c:	6f 31       	cpi	r22, 0x1F	; 31
     37e:	10 f4       	brcc	.+4      	; 0x384 <task_ADC+0x3e>
	INIT_ADC();
	const TickType_t xDelay = 50 / portTICK_PERIOD_MS;
	for (;;)
	{
		unsigned char data = Analog_Read(0);
		data =(data*500)/1023;
     380:	69 83       	std	Y+1, r22	; 0x01
     382:	0f c0       	rjmp	.+30     	; 0x3a2 <task_ADC+0x5c>
		if(data>30)
		{
			data &= ~ ID_MASK ;
			data |= tempr_ID ;
     384:	6f 73       	andi	r22, 0x3F	; 63
     386:	60 64       	ori	r22, 0x40	; 64
     388:	69 83       	std	Y+1, r22	; 0x01
			xQueueSendToFront(xQueue,&data,TICKS_TO_WAIT);
     38a:	21 e0       	ldi	r18, 0x01	; 1
     38c:	4a e0       	ldi	r20, 0x0A	; 10
     38e:	50 e0       	ldi	r21, 0x00	; 0
     390:	be 01       	movw	r22, r28
     392:	6f 5f       	subi	r22, 0xFF	; 255
     394:	7f 4f       	sbci	r23, 0xFF	; 255
     396:	80 91 9e 07 	lds	r24, 0x079E	; 0x80079e <xQueue>
     39a:	90 91 9f 07 	lds	r25, 0x079F	; 0x80079f <xQueue+0x1>
     39e:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <xQueueGenericSend>
		}
		
		vTaskDelay( xDelay );
     3a2:	82 e3       	ldi	r24, 0x32	; 50
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	0e 94 21 0b 	call	0x1642	; 0x1642 <vTaskDelay>
	}
     3aa:	dc cf       	rjmp	.-72     	; 0x364 <task_ADC+0x1e>

000003ac <task_I2C>:
}


void task_I2C()
{
     3ac:	cf 93       	push	r28
     3ae:	df 93       	push	r29
     3b0:	1f 92       	push	r1
     3b2:	cd b7       	in	r28, 0x3d	; 61
     3b4:	de b7       	in	r29, 0x3e	; 62
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3b6:	2f ef       	ldi	r18, 0xFF	; 255
     3b8:	89 e6       	ldi	r24, 0x69	; 105
     3ba:	98 e1       	ldi	r25, 0x18	; 24
     3bc:	21 50       	subi	r18, 0x01	; 1
     3be:	80 40       	sbci	r24, 0x00	; 0
     3c0:	90 40       	sbci	r25, 0x00	; 0
     3c2:	e1 f7       	brne	.-8      	; 0x3bc <task_I2C+0x10>
     3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <task_I2C+0x1a>
     3c6:	00 00       	nop
	unsigned char data;
	_delay_ms(500);//wait slave to initialize
	i2c_init();
     3c8:	0e 94 55 01 	call	0x2aa	; 0x2aa <i2c_init>
	i2c_start();
     3cc:	0e 94 46 01 	call	0x28c	; 0x28c <i2c_start>
	i2c_write(0x02); //address
     3d0:	82 e0       	ldi	r24, 0x02	; 2
     3d2:	0e 94 3b 01 	call	0x276	; 0x276 <i2c_write>
	const TickType_t xDelay = 40 / portTICK_PERIOD_MS;
	for (;;)
	{
		if( uxQueueMessagesWaiting( xQueue ) != 0 )
     3d6:	80 91 9e 07 	lds	r24, 0x079E	; 0x80079e <xQueue>
     3da:	90 91 9f 07 	lds	r25, 0x079F	; 0x80079f <xQueue+0x1>
     3de:	0e 94 8c 07 	call	0xf18	; 0xf18 <uxQueueMessagesWaiting>
     3e2:	88 23       	and	r24, r24
     3e4:	79 f0       	breq	.+30     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
		{
			xQueueReceive(xQueue,&data,TICKS_TO_WAIT);
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	4a e0       	ldi	r20, 0x0A	; 10
     3ea:	50 e0       	ldi	r21, 0x00	; 0
     3ec:	be 01       	movw	r22, r28
     3ee:	6f 5f       	subi	r22, 0xFF	; 255
     3f0:	7f 4f       	sbci	r23, 0xFF	; 255
     3f2:	80 91 9e 07 	lds	r24, 0x079E	; 0x80079e <xQueue>
     3f6:	90 91 9f 07 	lds	r25, 0x079F	; 0x80079f <xQueue+0x1>
     3fa:	0e 94 c9 06 	call	0xd92	; 0xd92 <xQueueGenericReceive>
			i2c_write(data); //data
     3fe:	89 81       	ldd	r24, Y+1	; 0x01
     400:	0e 94 3b 01 	call	0x276	; 0x276 <i2c_write>
		}
		
		vTaskDelay( xDelay );
     404:	88 e2       	ldi	r24, 0x28	; 40
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	0e 94 21 0b 	call	0x1642	; 0x1642 <vTaskDelay>
	}
     40c:	e4 cf       	rjmp	.-56     	; 0x3d6 <task_I2C+0x2a>

0000040e <ON_OFF_task>:
	i2c_stop();
}
void ON_OFF_task()
{
	if(!flag)
     40e:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <__data_end>
     412:	81 11       	cpse	r24, r1
     414:	0d c0       	rjmp	.+26     	; 0x430 <ON_OFF_task+0x22>
	{
		vTaskSuspend(ultr_Handle);
     416:	80 91 a0 07 	lds	r24, 0x07A0	; 0x8007a0 <ultr_Handle>
     41a:	90 91 a1 07 	lds	r25, 0x07A1	; 0x8007a1 <ultr_Handle+0x1>
     41e:	0e 94 eb 0b 	call	0x17d6	; 0x17d6 <vTaskSuspend>
		vTaskSuspend(adc_Handle);
     422:	80 91 9a 07 	lds	r24, 0x079A	; 0x80079a <adc_Handle>
     426:	90 91 9b 07 	lds	r25, 0x079B	; 0x80079b <adc_Handle+0x1>
     42a:	0e 94 eb 0b 	call	0x17d6	; 0x17d6 <vTaskSuspend>
     42e:	0c c0       	rjmp	.+24     	; 0x448 <ON_OFF_task+0x3a>
	}
	else
	{
		vTaskResume(ultr_Handle);
     430:	80 91 a0 07 	lds	r24, 0x07A0	; 0x8007a0 <ultr_Handle>
     434:	90 91 a1 07 	lds	r25, 0x07A1	; 0x8007a1 <ultr_Handle+0x1>
     438:	0e 94 fd 08 	call	0x11fa	; 0x11fa <vTaskResume>
		vTaskResume(adc_Handle);
     43c:	80 91 9a 07 	lds	r24, 0x079A	; 0x80079a <adc_Handle>
     440:	90 91 9b 07 	lds	r25, 0x079B	; 0x80079b <adc_Handle+0x1>
     444:	0e 94 fd 08 	call	0x11fa	; 0x11fa <vTaskResume>
	}
	vTaskSuspend(NULL);
     448:	80 e0       	ldi	r24, 0x00	; 0
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	0e 94 eb 0b 	call	0x17d6	; 0x17d6 <vTaskSuspend>
     450:	08 95       	ret

00000452 <main>:

//SemaphoreHandle_t sem;
QueueHandle_t xQueue;
int main(void)
{ 
	cli(); 
     452:	f8 94       	cli
	// initialization 
	//interrupt mode (trigger on low input, any change, rising edge, or falling edge)
	attachInterrupt(0, ON_OFF_ISR, 3); //faling 
     454:	43 e0       	ldi	r20, 0x03	; 3
     456:	50 e0       	ldi	r21, 0x00	; 0
     458:	6e e5       	ldi	r22, 0x5E	; 94
     45a:	71 e0       	ldi	r23, 0x01	; 1
     45c:	80 e0       	ldi	r24, 0x00	; 0
     45e:	0e 94 aa 0d 	call	0x1b54	; 0x1b54 <attachInterrupt>
	//sem =  xSemaphoreCreateBinary();
	xTaskCreate(task_I2C,"task_I2C",0x100,NULL,0x04,i2c_Handle);
     462:	e0 90 9c 07 	lds	r14, 0x079C	; 0x80079c <i2c_Handle>
     466:	f0 90 9d 07 	lds	r15, 0x079D	; 0x80079d <i2c_Handle+0x1>
     46a:	a1 2c       	mov	r10, r1
     46c:	b1 2c       	mov	r11, r1
     46e:	c1 2c       	mov	r12, r1
     470:	d1 2c       	mov	r13, r1
     472:	04 e0       	ldi	r16, 0x04	; 4
     474:	20 e0       	ldi	r18, 0x00	; 0
     476:	30 e0       	ldi	r19, 0x00	; 0
     478:	40 e0       	ldi	r20, 0x00	; 0
     47a:	51 e0       	ldi	r21, 0x01	; 1
     47c:	64 e0       	ldi	r22, 0x04	; 4
     47e:	71 e0       	ldi	r23, 0x01	; 1
     480:	86 ed       	ldi	r24, 0xD6	; 214
     482:	91 e0       	ldi	r25, 0x01	; 1
     484:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <xTaskGenericCreate>
	//xTaskCreate(task_Generator,"task_Generator",0x100,NULL,0x02,NULL);
	xTaskCreate(task_ADC,"task_ADC",0x100,NULL,0x01,adc_Handle);
     488:	e0 90 9a 07 	lds	r14, 0x079A	; 0x80079a <adc_Handle>
     48c:	f0 90 9b 07 	lds	r15, 0x079B	; 0x80079b <adc_Handle+0x1>
     490:	01 e0       	ldi	r16, 0x01	; 1
     492:	20 e0       	ldi	r18, 0x00	; 0
     494:	30 e0       	ldi	r19, 0x00	; 0
     496:	40 e0       	ldi	r20, 0x00	; 0
     498:	51 e0       	ldi	r21, 0x01	; 1
     49a:	6d e0       	ldi	r22, 0x0D	; 13
     49c:	71 e0       	ldi	r23, 0x01	; 1
     49e:	83 ea       	ldi	r24, 0xA3	; 163
     4a0:	91 e0       	ldi	r25, 0x01	; 1
     4a2:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <xTaskGenericCreate>
	xTaskCreate(ultrsonic_task,"task_ultra",0x100,NULL,0x00,ultr_Handle);
     4a6:	e0 90 a0 07 	lds	r14, 0x07A0	; 0x8007a0 <ultr_Handle>
     4aa:	f0 90 a1 07 	lds	r15, 0x07A1	; 0x8007a1 <ultr_Handle+0x1>
     4ae:	00 e0       	ldi	r16, 0x00	; 0
     4b0:	20 e0       	ldi	r18, 0x00	; 0
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	40 e0       	ldi	r20, 0x00	; 0
     4b6:	51 e0       	ldi	r21, 0x01	; 1
     4b8:	66 e1       	ldi	r22, 0x16	; 22
     4ba:	71 e0       	ldi	r23, 0x01	; 1
     4bc:	8c e7       	ldi	r24, 0x7C	; 124
     4be:	91 e0       	ldi	r25, 0x01	; 1
     4c0:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <xTaskGenericCreate>
	xTaskCreate(ON_OFF_task,"task_on_off",0x100,NULL,0x03,on_off_Handle);
     4c4:	e0 90 98 07 	lds	r14, 0x0798	; 0x800798 <on_off_Handle>
     4c8:	f0 90 99 07 	lds	r15, 0x0799	; 0x800799 <on_off_Handle+0x1>
     4cc:	03 e0       	ldi	r16, 0x03	; 3
     4ce:	20 e0       	ldi	r18, 0x00	; 0
     4d0:	30 e0       	ldi	r19, 0x00	; 0
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	51 e0       	ldi	r21, 0x01	; 1
     4d6:	61 e2       	ldi	r22, 0x21	; 33
     4d8:	71 e0       	ldi	r23, 0x01	; 1
     4da:	87 e0       	ldi	r24, 0x07	; 7
     4dc:	92 e0       	ldi	r25, 0x02	; 2
     4de:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <xTaskGenericCreate>
	sei();
     4e2:	78 94       	sei
	vTaskStartScheduler();
     4e4:	0e 94 ad 09 	call	0x135a	; 0x135a <vTaskStartScheduler>
     4e8:	ff cf       	rjmp	.-2      	; 0x4e8 <main+0x96>

000004ea <vListInitialise>:
     4ea:	fc 01       	movw	r30, r24
     4ec:	03 96       	adiw	r24, 0x03	; 3
     4ee:	92 83       	std	Z+2, r25	; 0x02
     4f0:	81 83       	std	Z+1, r24	; 0x01
     4f2:	2f ef       	ldi	r18, 0xFF	; 255
     4f4:	3f ef       	ldi	r19, 0xFF	; 255
     4f6:	34 83       	std	Z+4, r19	; 0x04
     4f8:	23 83       	std	Z+3, r18	; 0x03
     4fa:	96 83       	std	Z+6, r25	; 0x06
     4fc:	85 83       	std	Z+5, r24	; 0x05
     4fe:	90 87       	std	Z+8, r25	; 0x08
     500:	87 83       	std	Z+7, r24	; 0x07
     502:	10 82       	st	Z, r1
     504:	08 95       	ret

00000506 <vListInitialiseItem>:
     506:	fc 01       	movw	r30, r24
     508:	11 86       	std	Z+9, r1	; 0x09
     50a:	10 86       	std	Z+8, r1	; 0x08
     50c:	08 95       	ret

0000050e <vListInsertEnd>:
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
     512:	9c 01       	movw	r18, r24
     514:	fb 01       	movw	r30, r22
     516:	dc 01       	movw	r26, r24
     518:	11 96       	adiw	r26, 0x01	; 1
     51a:	cd 91       	ld	r28, X+
     51c:	dc 91       	ld	r29, X
     51e:	12 97       	sbiw	r26, 0x02	; 2
     520:	d3 83       	std	Z+3, r29	; 0x03
     522:	c2 83       	std	Z+2, r28	; 0x02
     524:	8c 81       	ldd	r24, Y+4	; 0x04
     526:	9d 81       	ldd	r25, Y+5	; 0x05
     528:	95 83       	std	Z+5, r25	; 0x05
     52a:	84 83       	std	Z+4, r24	; 0x04
     52c:	8c 81       	ldd	r24, Y+4	; 0x04
     52e:	9d 81       	ldd	r25, Y+5	; 0x05
     530:	dc 01       	movw	r26, r24
     532:	13 96       	adiw	r26, 0x03	; 3
     534:	7c 93       	st	X, r23
     536:	6e 93       	st	-X, r22
     538:	12 97       	sbiw	r26, 0x02	; 2
     53a:	7d 83       	std	Y+5, r23	; 0x05
     53c:	6c 83       	std	Y+4, r22	; 0x04
     53e:	31 87       	std	Z+9, r19	; 0x09
     540:	20 87       	std	Z+8, r18	; 0x08
     542:	f9 01       	movw	r30, r18
     544:	80 81       	ld	r24, Z
     546:	8f 5f       	subi	r24, 0xFF	; 255
     548:	80 83       	st	Z, r24
     54a:	df 91       	pop	r29
     54c:	cf 91       	pop	r28
     54e:	08 95       	ret

00000550 <vListInsert>:
     550:	cf 93       	push	r28
     552:	df 93       	push	r29
     554:	eb 01       	movw	r28, r22
     556:	48 81       	ld	r20, Y
     558:	59 81       	ldd	r21, Y+1	; 0x01
     55a:	4f 3f       	cpi	r20, 0xFF	; 255
     55c:	2f ef       	ldi	r18, 0xFF	; 255
     55e:	52 07       	cpc	r21, r18
     560:	21 f4       	brne	.+8      	; 0x56a <vListInsert+0x1a>
     562:	fc 01       	movw	r30, r24
     564:	a7 81       	ldd	r26, Z+7	; 0x07
     566:	b0 85       	ldd	r27, Z+8	; 0x08
     568:	0d c0       	rjmp	.+26     	; 0x584 <vListInsert+0x34>
     56a:	dc 01       	movw	r26, r24
     56c:	13 96       	adiw	r26, 0x03	; 3
     56e:	01 c0       	rjmp	.+2      	; 0x572 <vListInsert+0x22>
     570:	df 01       	movw	r26, r30
     572:	12 96       	adiw	r26, 0x02	; 2
     574:	ed 91       	ld	r30, X+
     576:	fc 91       	ld	r31, X
     578:	13 97       	sbiw	r26, 0x03	; 3
     57a:	20 81       	ld	r18, Z
     57c:	31 81       	ldd	r19, Z+1	; 0x01
     57e:	42 17       	cp	r20, r18
     580:	53 07       	cpc	r21, r19
     582:	b0 f7       	brcc	.-20     	; 0x570 <vListInsert+0x20>
     584:	12 96       	adiw	r26, 0x02	; 2
     586:	ed 91       	ld	r30, X+
     588:	fc 91       	ld	r31, X
     58a:	13 97       	sbiw	r26, 0x03	; 3
     58c:	fb 83       	std	Y+3, r31	; 0x03
     58e:	ea 83       	std	Y+2, r30	; 0x02
     590:	d5 83       	std	Z+5, r29	; 0x05
     592:	c4 83       	std	Z+4, r28	; 0x04
     594:	bd 83       	std	Y+5, r27	; 0x05
     596:	ac 83       	std	Y+4, r26	; 0x04
     598:	13 96       	adiw	r26, 0x03	; 3
     59a:	dc 93       	st	X, r29
     59c:	ce 93       	st	-X, r28
     59e:	12 97       	sbiw	r26, 0x02	; 2
     5a0:	99 87       	std	Y+9, r25	; 0x09
     5a2:	88 87       	std	Y+8, r24	; 0x08
     5a4:	fc 01       	movw	r30, r24
     5a6:	20 81       	ld	r18, Z
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	20 83       	st	Z, r18
     5ac:	df 91       	pop	r29
     5ae:	cf 91       	pop	r28
     5b0:	08 95       	ret

000005b2 <uxListRemove>:
     5b2:	cf 93       	push	r28
     5b4:	df 93       	push	r29
     5b6:	fc 01       	movw	r30, r24
     5b8:	a0 85       	ldd	r26, Z+8	; 0x08
     5ba:	b1 85       	ldd	r27, Z+9	; 0x09
     5bc:	c2 81       	ldd	r28, Z+2	; 0x02
     5be:	d3 81       	ldd	r29, Z+3	; 0x03
     5c0:	84 81       	ldd	r24, Z+4	; 0x04
     5c2:	95 81       	ldd	r25, Z+5	; 0x05
     5c4:	9d 83       	std	Y+5, r25	; 0x05
     5c6:	8c 83       	std	Y+4, r24	; 0x04
     5c8:	c4 81       	ldd	r28, Z+4	; 0x04
     5ca:	d5 81       	ldd	r29, Z+5	; 0x05
     5cc:	82 81       	ldd	r24, Z+2	; 0x02
     5ce:	93 81       	ldd	r25, Z+3	; 0x03
     5d0:	9b 83       	std	Y+3, r25	; 0x03
     5d2:	8a 83       	std	Y+2, r24	; 0x02
     5d4:	11 96       	adiw	r26, 0x01	; 1
     5d6:	8d 91       	ld	r24, X+
     5d8:	9c 91       	ld	r25, X
     5da:	12 97       	sbiw	r26, 0x02	; 2
     5dc:	e8 17       	cp	r30, r24
     5de:	f9 07       	cpc	r31, r25
     5e0:	31 f4       	brne	.+12     	; 0x5ee <uxListRemove+0x3c>
     5e2:	84 81       	ldd	r24, Z+4	; 0x04
     5e4:	95 81       	ldd	r25, Z+5	; 0x05
     5e6:	12 96       	adiw	r26, 0x02	; 2
     5e8:	9c 93       	st	X, r25
     5ea:	8e 93       	st	-X, r24
     5ec:	11 97       	sbiw	r26, 0x01	; 1
     5ee:	11 86       	std	Z+9, r1	; 0x09
     5f0:	10 86       	std	Z+8, r1	; 0x08
     5f2:	8c 91       	ld	r24, X
     5f4:	81 50       	subi	r24, 0x01	; 1
     5f6:	8c 93       	st	X, r24
     5f8:	df 91       	pop	r29
     5fa:	cf 91       	pop	r28
     5fc:	08 95       	ret

000005fe <pxPortInitialiseStack>:
     5fe:	31 e1       	ldi	r19, 0x11	; 17
     600:	fc 01       	movw	r30, r24
     602:	30 83       	st	Z, r19
     604:	31 97       	sbiw	r30, 0x01	; 1
     606:	22 e2       	ldi	r18, 0x22	; 34
     608:	20 83       	st	Z, r18
     60a:	31 97       	sbiw	r30, 0x01	; 1
     60c:	a3 e3       	ldi	r26, 0x33	; 51
     60e:	a0 83       	st	Z, r26
     610:	31 97       	sbiw	r30, 0x01	; 1
     612:	60 83       	st	Z, r22
     614:	31 97       	sbiw	r30, 0x01	; 1
     616:	70 83       	st	Z, r23
     618:	31 97       	sbiw	r30, 0x01	; 1
     61a:	10 82       	st	Z, r1
     61c:	31 97       	sbiw	r30, 0x01	; 1
     61e:	60 e8       	ldi	r22, 0x80	; 128
     620:	60 83       	st	Z, r22
     622:	31 97       	sbiw	r30, 0x01	; 1
     624:	10 82       	st	Z, r1
     626:	31 97       	sbiw	r30, 0x01	; 1
     628:	62 e0       	ldi	r22, 0x02	; 2
     62a:	60 83       	st	Z, r22
     62c:	31 97       	sbiw	r30, 0x01	; 1
     62e:	63 e0       	ldi	r22, 0x03	; 3
     630:	60 83       	st	Z, r22
     632:	31 97       	sbiw	r30, 0x01	; 1
     634:	64 e0       	ldi	r22, 0x04	; 4
     636:	60 83       	st	Z, r22
     638:	31 97       	sbiw	r30, 0x01	; 1
     63a:	65 e0       	ldi	r22, 0x05	; 5
     63c:	60 83       	st	Z, r22
     63e:	31 97       	sbiw	r30, 0x01	; 1
     640:	66 e0       	ldi	r22, 0x06	; 6
     642:	60 83       	st	Z, r22
     644:	31 97       	sbiw	r30, 0x01	; 1
     646:	67 e0       	ldi	r22, 0x07	; 7
     648:	60 83       	st	Z, r22
     64a:	31 97       	sbiw	r30, 0x01	; 1
     64c:	68 e0       	ldi	r22, 0x08	; 8
     64e:	60 83       	st	Z, r22
     650:	31 97       	sbiw	r30, 0x01	; 1
     652:	69 e0       	ldi	r22, 0x09	; 9
     654:	60 83       	st	Z, r22
     656:	31 97       	sbiw	r30, 0x01	; 1
     658:	60 e1       	ldi	r22, 0x10	; 16
     65a:	60 83       	st	Z, r22
     65c:	31 97       	sbiw	r30, 0x01	; 1
     65e:	30 83       	st	Z, r19
     660:	31 97       	sbiw	r30, 0x01	; 1
     662:	32 e1       	ldi	r19, 0x12	; 18
     664:	30 83       	st	Z, r19
     666:	31 97       	sbiw	r30, 0x01	; 1
     668:	33 e1       	ldi	r19, 0x13	; 19
     66a:	30 83       	st	Z, r19
     66c:	31 97       	sbiw	r30, 0x01	; 1
     66e:	34 e1       	ldi	r19, 0x14	; 20
     670:	30 83       	st	Z, r19
     672:	31 97       	sbiw	r30, 0x01	; 1
     674:	35 e1       	ldi	r19, 0x15	; 21
     676:	30 83       	st	Z, r19
     678:	31 97       	sbiw	r30, 0x01	; 1
     67a:	36 e1       	ldi	r19, 0x16	; 22
     67c:	30 83       	st	Z, r19
     67e:	31 97       	sbiw	r30, 0x01	; 1
     680:	37 e1       	ldi	r19, 0x17	; 23
     682:	30 83       	st	Z, r19
     684:	31 97       	sbiw	r30, 0x01	; 1
     686:	38 e1       	ldi	r19, 0x18	; 24
     688:	30 83       	st	Z, r19
     68a:	31 97       	sbiw	r30, 0x01	; 1
     68c:	39 e1       	ldi	r19, 0x19	; 25
     68e:	30 83       	st	Z, r19
     690:	31 97       	sbiw	r30, 0x01	; 1
     692:	30 e2       	ldi	r19, 0x20	; 32
     694:	30 83       	st	Z, r19
     696:	31 97       	sbiw	r30, 0x01	; 1
     698:	31 e2       	ldi	r19, 0x21	; 33
     69a:	30 83       	st	Z, r19
     69c:	31 97       	sbiw	r30, 0x01	; 1
     69e:	20 83       	st	Z, r18
     6a0:	31 97       	sbiw	r30, 0x01	; 1
     6a2:	23 e2       	ldi	r18, 0x23	; 35
     6a4:	20 83       	st	Z, r18
     6a6:	31 97       	sbiw	r30, 0x01	; 1
     6a8:	40 83       	st	Z, r20
     6aa:	31 97       	sbiw	r30, 0x01	; 1
     6ac:	50 83       	st	Z, r21
     6ae:	31 97       	sbiw	r30, 0x01	; 1
     6b0:	26 e2       	ldi	r18, 0x26	; 38
     6b2:	20 83       	st	Z, r18
     6b4:	31 97       	sbiw	r30, 0x01	; 1
     6b6:	27 e2       	ldi	r18, 0x27	; 39
     6b8:	20 83       	st	Z, r18
     6ba:	31 97       	sbiw	r30, 0x01	; 1
     6bc:	28 e2       	ldi	r18, 0x28	; 40
     6be:	20 83       	st	Z, r18
     6c0:	31 97       	sbiw	r30, 0x01	; 1
     6c2:	29 e2       	ldi	r18, 0x29	; 41
     6c4:	20 83       	st	Z, r18
     6c6:	31 97       	sbiw	r30, 0x01	; 1
     6c8:	20 e3       	ldi	r18, 0x30	; 48
     6ca:	20 83       	st	Z, r18
     6cc:	31 97       	sbiw	r30, 0x01	; 1
     6ce:	21 e3       	ldi	r18, 0x31	; 49
     6d0:	20 83       	st	Z, r18
     6d2:	86 97       	sbiw	r24, 0x26	; 38
     6d4:	08 95       	ret

000006d6 <xPortStartScheduler>:
     6d6:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     6da:	8c e7       	ldi	r24, 0x7C	; 124
     6dc:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     6e0:	8b e0       	ldi	r24, 0x0B	; 11
     6e2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     6e6:	ef e6       	ldi	r30, 0x6F	; 111
     6e8:	f0 e0       	ldi	r31, 0x00	; 0
     6ea:	80 81       	ld	r24, Z
     6ec:	82 60       	ori	r24, 0x02	; 2
     6ee:	80 83       	st	Z, r24
     6f0:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
     6f4:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     6f8:	cd 91       	ld	r28, X+
     6fa:	cd bf       	out	0x3d, r28	; 61
     6fc:	dd 91       	ld	r29, X+
     6fe:	de bf       	out	0x3e, r29	; 62
     700:	ff 91       	pop	r31
     702:	ef 91       	pop	r30
     704:	df 91       	pop	r29
     706:	cf 91       	pop	r28
     708:	bf 91       	pop	r27
     70a:	af 91       	pop	r26
     70c:	9f 91       	pop	r25
     70e:	8f 91       	pop	r24
     710:	7f 91       	pop	r23
     712:	6f 91       	pop	r22
     714:	5f 91       	pop	r21
     716:	4f 91       	pop	r20
     718:	3f 91       	pop	r19
     71a:	2f 91       	pop	r18
     71c:	1f 91       	pop	r17
     71e:	0f 91       	pop	r16
     720:	ff 90       	pop	r15
     722:	ef 90       	pop	r14
     724:	df 90       	pop	r13
     726:	cf 90       	pop	r12
     728:	bf 90       	pop	r11
     72a:	af 90       	pop	r10
     72c:	9f 90       	pop	r9
     72e:	8f 90       	pop	r8
     730:	7f 90       	pop	r7
     732:	6f 90       	pop	r6
     734:	5f 90       	pop	r5
     736:	4f 90       	pop	r4
     738:	3f 90       	pop	r3
     73a:	2f 90       	pop	r2
     73c:	1f 90       	pop	r1
     73e:	0f 90       	pop	r0
     740:	0f be       	out	0x3f, r0	; 63
     742:	0f 90       	pop	r0
     744:	08 95       	ret
     746:	81 e0       	ldi	r24, 0x01	; 1
     748:	08 95       	ret

0000074a <vPortYield>:
     74a:	0f 92       	push	r0
     74c:	0f b6       	in	r0, 0x3f	; 63
     74e:	f8 94       	cli
     750:	0f 92       	push	r0
     752:	1f 92       	push	r1
     754:	11 24       	eor	r1, r1
     756:	2f 92       	push	r2
     758:	3f 92       	push	r3
     75a:	4f 92       	push	r4
     75c:	5f 92       	push	r5
     75e:	6f 92       	push	r6
     760:	7f 92       	push	r7
     762:	8f 92       	push	r8
     764:	9f 92       	push	r9
     766:	af 92       	push	r10
     768:	bf 92       	push	r11
     76a:	cf 92       	push	r12
     76c:	df 92       	push	r13
     76e:	ef 92       	push	r14
     770:	ff 92       	push	r15
     772:	0f 93       	push	r16
     774:	1f 93       	push	r17
     776:	2f 93       	push	r18
     778:	3f 93       	push	r19
     77a:	4f 93       	push	r20
     77c:	5f 93       	push	r21
     77e:	6f 93       	push	r22
     780:	7f 93       	push	r23
     782:	8f 93       	push	r24
     784:	9f 93       	push	r25
     786:	af 93       	push	r26
     788:	bf 93       	push	r27
     78a:	cf 93       	push	r28
     78c:	df 93       	push	r29
     78e:	ef 93       	push	r30
     790:	ff 93       	push	r31
     792:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
     796:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     79a:	0d b6       	in	r0, 0x3d	; 61
     79c:	0d 92       	st	X+, r0
     79e:	0e b6       	in	r0, 0x3e	; 62
     7a0:	0d 92       	st	X+, r0
     7a2:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <vTaskSwitchContext>
     7a6:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
     7aa:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     7ae:	cd 91       	ld	r28, X+
     7b0:	cd bf       	out	0x3d, r28	; 61
     7b2:	dd 91       	ld	r29, X+
     7b4:	de bf       	out	0x3e, r29	; 62
     7b6:	ff 91       	pop	r31
     7b8:	ef 91       	pop	r30
     7ba:	df 91       	pop	r29
     7bc:	cf 91       	pop	r28
     7be:	bf 91       	pop	r27
     7c0:	af 91       	pop	r26
     7c2:	9f 91       	pop	r25
     7c4:	8f 91       	pop	r24
     7c6:	7f 91       	pop	r23
     7c8:	6f 91       	pop	r22
     7ca:	5f 91       	pop	r21
     7cc:	4f 91       	pop	r20
     7ce:	3f 91       	pop	r19
     7d0:	2f 91       	pop	r18
     7d2:	1f 91       	pop	r17
     7d4:	0f 91       	pop	r16
     7d6:	ff 90       	pop	r15
     7d8:	ef 90       	pop	r14
     7da:	df 90       	pop	r13
     7dc:	cf 90       	pop	r12
     7de:	bf 90       	pop	r11
     7e0:	af 90       	pop	r10
     7e2:	9f 90       	pop	r9
     7e4:	8f 90       	pop	r8
     7e6:	7f 90       	pop	r7
     7e8:	6f 90       	pop	r6
     7ea:	5f 90       	pop	r5
     7ec:	4f 90       	pop	r4
     7ee:	3f 90       	pop	r3
     7f0:	2f 90       	pop	r2
     7f2:	1f 90       	pop	r1
     7f4:	0f 90       	pop	r0
     7f6:	0f be       	out	0x3f, r0	; 63
     7f8:	0f 90       	pop	r0
     7fa:	08 95       	ret

000007fc <vPortYieldFromTick>:
     7fc:	0f 92       	push	r0
     7fe:	0f b6       	in	r0, 0x3f	; 63
     800:	f8 94       	cli
     802:	0f 92       	push	r0
     804:	1f 92       	push	r1
     806:	11 24       	eor	r1, r1
     808:	2f 92       	push	r2
     80a:	3f 92       	push	r3
     80c:	4f 92       	push	r4
     80e:	5f 92       	push	r5
     810:	6f 92       	push	r6
     812:	7f 92       	push	r7
     814:	8f 92       	push	r8
     816:	9f 92       	push	r9
     818:	af 92       	push	r10
     81a:	bf 92       	push	r11
     81c:	cf 92       	push	r12
     81e:	df 92       	push	r13
     820:	ef 92       	push	r14
     822:	ff 92       	push	r15
     824:	0f 93       	push	r16
     826:	1f 93       	push	r17
     828:	2f 93       	push	r18
     82a:	3f 93       	push	r19
     82c:	4f 93       	push	r20
     82e:	5f 93       	push	r21
     830:	6f 93       	push	r22
     832:	7f 93       	push	r23
     834:	8f 93       	push	r24
     836:	9f 93       	push	r25
     838:	af 93       	push	r26
     83a:	bf 93       	push	r27
     83c:	cf 93       	push	r28
     83e:	df 93       	push	r29
     840:	ef 93       	push	r30
     842:	ff 93       	push	r31
     844:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
     848:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     84c:	0d b6       	in	r0, 0x3d	; 61
     84e:	0d 92       	st	X+, r0
     850:	0e b6       	in	r0, 0x3e	; 62
     852:	0d 92       	st	X+, r0
     854:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <xTaskIncrementTick>
     858:	81 11       	cpse	r24, r1
     85a:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <vTaskSwitchContext>
     85e:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
     862:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     866:	cd 91       	ld	r28, X+
     868:	cd bf       	out	0x3d, r28	; 61
     86a:	dd 91       	ld	r29, X+
     86c:	de bf       	out	0x3e, r29	; 62
     86e:	ff 91       	pop	r31
     870:	ef 91       	pop	r30
     872:	df 91       	pop	r29
     874:	cf 91       	pop	r28
     876:	bf 91       	pop	r27
     878:	af 91       	pop	r26
     87a:	9f 91       	pop	r25
     87c:	8f 91       	pop	r24
     87e:	7f 91       	pop	r23
     880:	6f 91       	pop	r22
     882:	5f 91       	pop	r21
     884:	4f 91       	pop	r20
     886:	3f 91       	pop	r19
     888:	2f 91       	pop	r18
     88a:	1f 91       	pop	r17
     88c:	0f 91       	pop	r16
     88e:	ff 90       	pop	r15
     890:	ef 90       	pop	r14
     892:	df 90       	pop	r13
     894:	cf 90       	pop	r12
     896:	bf 90       	pop	r11
     898:	af 90       	pop	r10
     89a:	9f 90       	pop	r9
     89c:	8f 90       	pop	r8
     89e:	7f 90       	pop	r7
     8a0:	6f 90       	pop	r6
     8a2:	5f 90       	pop	r5
     8a4:	4f 90       	pop	r4
     8a6:	3f 90       	pop	r3
     8a8:	2f 90       	pop	r2
     8aa:	1f 90       	pop	r1
     8ac:	0f 90       	pop	r0
     8ae:	0f be       	out	0x3f, r0	; 63
     8b0:	0f 90       	pop	r0
     8b2:	08 95       	ret

000008b4 <__vector_11>:
     8b4:	0e 94 fe 03 	call	0x7fc	; 0x7fc <vPortYieldFromTick>
     8b8:	18 95       	reti

000008ba <pvPortMalloc>:
     8ba:	0f 93       	push	r16
     8bc:	1f 93       	push	r17
     8be:	cf 93       	push	r28
     8c0:	df 93       	push	r29
     8c2:	ec 01       	movw	r28, r24
     8c4:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <vTaskSuspendAll>
     8c8:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <xHeapHasBeenInitialised.2023>
     8cc:	81 11       	cpse	r24, r1
     8ce:	1d c0       	rjmp	.+58     	; 0x90a <__stack+0xb>
     8d0:	e4 e4       	ldi	r30, 0x44	; 68
     8d2:	f1 e0       	ldi	r31, 0x01	; 1
     8d4:	89 e4       	ldi	r24, 0x49	; 73
     8d6:	91 e0       	ldi	r25, 0x01	; 1
     8d8:	91 83       	std	Z+1, r25	; 0x01
     8da:	80 83       	st	Z, r24
     8dc:	13 82       	std	Z+3, r1	; 0x03
     8de:	12 82       	std	Z+2, r1	; 0x02
     8e0:	e0 e4       	ldi	r30, 0x40	; 64
     8e2:	f1 e0       	ldi	r31, 0x01	; 1
     8e4:	8b ed       	ldi	r24, 0xDB	; 219
     8e6:	95 e0       	ldi	r25, 0x05	; 5
     8e8:	93 83       	std	Z+3, r25	; 0x03
     8ea:	82 83       	std	Z+2, r24	; 0x02
     8ec:	11 82       	std	Z+1, r1	; 0x01
     8ee:	10 82       	st	Z, r1
     8f0:	a8 e4       	ldi	r26, 0x48	; 72
     8f2:	b1 e0       	ldi	r27, 0x01	; 1
     8f4:	14 96       	adiw	r26, 0x04	; 4
     8f6:	9c 93       	st	X, r25
     8f8:	8e 93       	st	-X, r24
     8fa:	13 97       	sbiw	r26, 0x03	; 3
     8fc:	12 96       	adiw	r26, 0x02	; 2
     8fe:	fc 93       	st	X, r31
     900:	ee 93       	st	-X, r30
     902:	11 97       	sbiw	r26, 0x01	; 1
     904:	81 e0       	ldi	r24, 0x01	; 1
     906:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <xHeapHasBeenInitialised.2023>
     90a:	20 97       	sbiw	r28, 0x00	; 0
     90c:	09 f4       	brne	.+2      	; 0x910 <__stack+0x11>
     90e:	5f c0       	rjmp	.+190    	; 0x9ce <__stack+0xcf>
     910:	9e 01       	movw	r18, r28
     912:	2c 5f       	subi	r18, 0xFC	; 252
     914:	3f 4f       	sbci	r19, 0xFF	; 255
     916:	23 96       	adiw	r28, 0x03	; 3
     918:	ca 3d       	cpi	r28, 0xDA	; 218
     91a:	d5 40       	sbci	r29, 0x05	; 5
     91c:	08 f0       	brcs	.+2      	; 0x920 <__stack+0x21>
     91e:	5a c0       	rjmp	.+180    	; 0x9d4 <__stack+0xd5>
     920:	e0 91 44 01 	lds	r30, 0x0144	; 0x800144 <xStart>
     924:	f0 91 45 01 	lds	r31, 0x0145	; 0x800145 <xStart+0x1>
     928:	a4 e4       	ldi	r26, 0x44	; 68
     92a:	b1 e0       	ldi	r27, 0x01	; 1
     92c:	02 c0       	rjmp	.+4      	; 0x932 <__stack+0x33>
     92e:	df 01       	movw	r26, r30
     930:	fc 01       	movw	r30, r24
     932:	82 81       	ldd	r24, Z+2	; 0x02
     934:	93 81       	ldd	r25, Z+3	; 0x03
     936:	82 17       	cp	r24, r18
     938:	93 07       	cpc	r25, r19
     93a:	20 f4       	brcc	.+8      	; 0x944 <__stack+0x45>
     93c:	80 81       	ld	r24, Z
     93e:	91 81       	ldd	r25, Z+1	; 0x01
     940:	00 97       	sbiw	r24, 0x00	; 0
     942:	a9 f7       	brne	.-22     	; 0x92e <__stack+0x2f>
     944:	c1 e0       	ldi	r28, 0x01	; 1
     946:	e0 34       	cpi	r30, 0x40	; 64
     948:	fc 07       	cpc	r31, r28
     94a:	09 f4       	brne	.+2      	; 0x94e <__stack+0x4f>
     94c:	46 c0       	rjmp	.+140    	; 0x9da <__stack+0xdb>
     94e:	cd 91       	ld	r28, X+
     950:	dc 91       	ld	r29, X
     952:	11 97       	sbiw	r26, 0x01	; 1
     954:	8e 01       	movw	r16, r28
     956:	0c 5f       	subi	r16, 0xFC	; 252
     958:	1f 4f       	sbci	r17, 0xFF	; 255
     95a:	80 81       	ld	r24, Z
     95c:	91 81       	ldd	r25, Z+1	; 0x01
     95e:	8d 93       	st	X+, r24
     960:	9c 93       	st	X, r25
     962:	82 81       	ldd	r24, Z+2	; 0x02
     964:	93 81       	ldd	r25, Z+3	; 0x03
     966:	82 1b       	sub	r24, r18
     968:	93 0b       	sbc	r25, r19
     96a:	89 30       	cpi	r24, 0x09	; 9
     96c:	91 05       	cpc	r25, r1
     96e:	10 f1       	brcs	.+68     	; 0x9b4 <__stack+0xb5>
     970:	bf 01       	movw	r22, r30
     972:	62 0f       	add	r22, r18
     974:	73 1f       	adc	r23, r19
     976:	db 01       	movw	r26, r22
     978:	13 96       	adiw	r26, 0x03	; 3
     97a:	9c 93       	st	X, r25
     97c:	8e 93       	st	-X, r24
     97e:	12 97       	sbiw	r26, 0x02	; 2
     980:	33 83       	std	Z+3, r19	; 0x03
     982:	22 83       	std	Z+2, r18	; 0x02
     984:	12 96       	adiw	r26, 0x02	; 2
     986:	4d 91       	ld	r20, X+
     988:	5c 91       	ld	r21, X
     98a:	13 97       	sbiw	r26, 0x03	; 3
     98c:	84 e4       	ldi	r24, 0x44	; 68
     98e:	91 e0       	ldi	r25, 0x01	; 1
     990:	01 c0       	rjmp	.+2      	; 0x994 <__stack+0x95>
     992:	cd 01       	movw	r24, r26
     994:	ec 01       	movw	r28, r24
     996:	a8 81       	ld	r26, Y
     998:	b9 81       	ldd	r27, Y+1	; 0x01
     99a:	12 96       	adiw	r26, 0x02	; 2
     99c:	2d 91       	ld	r18, X+
     99e:	3c 91       	ld	r19, X
     9a0:	13 97       	sbiw	r26, 0x03	; 3
     9a2:	24 17       	cp	r18, r20
     9a4:	35 07       	cpc	r19, r21
     9a6:	a8 f3       	brcs	.-22     	; 0x992 <__stack+0x93>
     9a8:	eb 01       	movw	r28, r22
     9aa:	b9 83       	std	Y+1, r27	; 0x01
     9ac:	a8 83       	st	Y, r26
     9ae:	dc 01       	movw	r26, r24
     9b0:	6d 93       	st	X+, r22
     9b2:	7c 93       	st	X, r23
     9b4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     9b8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     9bc:	22 81       	ldd	r18, Z+2	; 0x02
     9be:	33 81       	ldd	r19, Z+3	; 0x03
     9c0:	82 1b       	sub	r24, r18
     9c2:	93 0b       	sbc	r25, r19
     9c4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     9c8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     9cc:	08 c0       	rjmp	.+16     	; 0x9de <__stack+0xdf>
     9ce:	00 e0       	ldi	r16, 0x00	; 0
     9d0:	10 e0       	ldi	r17, 0x00	; 0
     9d2:	05 c0       	rjmp	.+10     	; 0x9de <__stack+0xdf>
     9d4:	00 e0       	ldi	r16, 0x00	; 0
     9d6:	10 e0       	ldi	r17, 0x00	; 0
     9d8:	02 c0       	rjmp	.+4      	; 0x9de <__stack+0xdf>
     9da:	00 e0       	ldi	r16, 0x00	; 0
     9dc:	10 e0       	ldi	r17, 0x00	; 0
     9de:	0e 94 9f 0a 	call	0x153e	; 0x153e <xTaskResumeAll>
     9e2:	c8 01       	movw	r24, r16
     9e4:	df 91       	pop	r29
     9e6:	cf 91       	pop	r28
     9e8:	1f 91       	pop	r17
     9ea:	0f 91       	pop	r16
     9ec:	08 95       	ret

000009ee <vPortFree>:
     9ee:	0f 93       	push	r16
     9f0:	1f 93       	push	r17
     9f2:	cf 93       	push	r28
     9f4:	df 93       	push	r29
     9f6:	00 97       	sbiw	r24, 0x00	; 0
     9f8:	41 f1       	breq	.+80     	; 0xa4a <vPortFree+0x5c>
     9fa:	ec 01       	movw	r28, r24
     9fc:	8c 01       	movw	r16, r24
     9fe:	04 50       	subi	r16, 0x04	; 4
     a00:	11 09       	sbc	r17, r1
     a02:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <vTaskSuspendAll>
     a06:	f8 01       	movw	r30, r16
     a08:	42 81       	ldd	r20, Z+2	; 0x02
     a0a:	53 81       	ldd	r21, Z+3	; 0x03
     a0c:	a4 e4       	ldi	r26, 0x44	; 68
     a0e:	b1 e0       	ldi	r27, 0x01	; 1
     a10:	01 c0       	rjmp	.+2      	; 0xa14 <vPortFree+0x26>
     a12:	df 01       	movw	r26, r30
     a14:	ed 91       	ld	r30, X+
     a16:	fc 91       	ld	r31, X
     a18:	11 97       	sbiw	r26, 0x01	; 1
     a1a:	22 81       	ldd	r18, Z+2	; 0x02
     a1c:	33 81       	ldd	r19, Z+3	; 0x03
     a1e:	24 17       	cp	r18, r20
     a20:	35 07       	cpc	r19, r21
     a22:	b8 f3       	brcs	.-18     	; 0xa12 <vPortFree+0x24>
     a24:	24 97       	sbiw	r28, 0x04	; 4
     a26:	f9 83       	std	Y+1, r31	; 0x01
     a28:	e8 83       	st	Y, r30
     a2a:	0d 93       	st	X+, r16
     a2c:	1c 93       	st	X, r17
     a2e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     a32:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     a36:	8a 81       	ldd	r24, Y+2	; 0x02
     a38:	9b 81       	ldd	r25, Y+3	; 0x03
     a3a:	82 0f       	add	r24, r18
     a3c:	93 1f       	adc	r25, r19
     a3e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     a42:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     a46:	0e 94 9f 0a 	call	0x153e	; 0x153e <xTaskResumeAll>
     a4a:	df 91       	pop	r29
     a4c:	cf 91       	pop	r28
     a4e:	1f 91       	pop	r17
     a50:	0f 91       	pop	r16
     a52:	08 95       	ret

00000a54 <prvCopyDataToQueue>:
     a54:	1f 93       	push	r17
     a56:	cf 93       	push	r28
     a58:	df 93       	push	r29
     a5a:	ec 01       	movw	r28, r24
     a5c:	14 2f       	mov	r17, r20
     a5e:	4c 8d       	ldd	r20, Y+28	; 0x1c
     a60:	41 11       	cpse	r20, r1
     a62:	0c c0       	rjmp	.+24     	; 0xa7c <prvCopyDataToQueue+0x28>
     a64:	88 81       	ld	r24, Y
     a66:	99 81       	ldd	r25, Y+1	; 0x01
     a68:	89 2b       	or	r24, r25
     a6a:	09 f0       	breq	.+2      	; 0xa6e <prvCopyDataToQueue+0x1a>
     a6c:	45 c0       	rjmp	.+138    	; 0xaf8 <prvCopyDataToQueue+0xa4>
     a6e:	8a 81       	ldd	r24, Y+2	; 0x02
     a70:	9b 81       	ldd	r25, Y+3	; 0x03
     a72:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <xTaskPriorityDisinherit>
     a76:	1b 82       	std	Y+3, r1	; 0x03
     a78:	1a 82       	std	Y+2, r1	; 0x02
     a7a:	45 c0       	rjmp	.+138    	; 0xb06 <prvCopyDataToQueue+0xb2>
     a7c:	11 11       	cpse	r17, r1
     a7e:	17 c0       	rjmp	.+46     	; 0xaae <prvCopyDataToQueue+0x5a>
     a80:	50 e0       	ldi	r21, 0x00	; 0
     a82:	8c 81       	ldd	r24, Y+4	; 0x04
     a84:	9d 81       	ldd	r25, Y+5	; 0x05
     a86:	0e 94 09 10 	call	0x2012	; 0x2012 <memcpy>
     a8a:	2c 8d       	ldd	r18, Y+28	; 0x1c
     a8c:	8c 81       	ldd	r24, Y+4	; 0x04
     a8e:	9d 81       	ldd	r25, Y+5	; 0x05
     a90:	82 0f       	add	r24, r18
     a92:	91 1d       	adc	r25, r1
     a94:	9d 83       	std	Y+5, r25	; 0x05
     a96:	8c 83       	std	Y+4, r24	; 0x04
     a98:	2a 81       	ldd	r18, Y+2	; 0x02
     a9a:	3b 81       	ldd	r19, Y+3	; 0x03
     a9c:	82 17       	cp	r24, r18
     a9e:	93 07       	cpc	r25, r19
     aa0:	68 f1       	brcs	.+90     	; 0xafc <prvCopyDataToQueue+0xa8>
     aa2:	88 81       	ld	r24, Y
     aa4:	99 81       	ldd	r25, Y+1	; 0x01
     aa6:	9d 83       	std	Y+5, r25	; 0x05
     aa8:	8c 83       	std	Y+4, r24	; 0x04
     aaa:	80 e0       	ldi	r24, 0x00	; 0
     aac:	2c c0       	rjmp	.+88     	; 0xb06 <prvCopyDataToQueue+0xb2>
     aae:	50 e0       	ldi	r21, 0x00	; 0
     ab0:	8e 81       	ldd	r24, Y+6	; 0x06
     ab2:	9f 81       	ldd	r25, Y+7	; 0x07
     ab4:	0e 94 09 10 	call	0x2012	; 0x2012 <memcpy>
     ab8:	8c 8d       	ldd	r24, Y+28	; 0x1c
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	91 95       	neg	r25
     abe:	81 95       	neg	r24
     ac0:	91 09       	sbc	r25, r1
     ac2:	2e 81       	ldd	r18, Y+6	; 0x06
     ac4:	3f 81       	ldd	r19, Y+7	; 0x07
     ac6:	28 0f       	add	r18, r24
     ac8:	39 1f       	adc	r19, r25
     aca:	3f 83       	std	Y+7, r19	; 0x07
     acc:	2e 83       	std	Y+6, r18	; 0x06
     ace:	48 81       	ld	r20, Y
     ad0:	59 81       	ldd	r21, Y+1	; 0x01
     ad2:	24 17       	cp	r18, r20
     ad4:	35 07       	cpc	r19, r21
     ad6:	30 f4       	brcc	.+12     	; 0xae4 <prvCopyDataToQueue+0x90>
     ad8:	2a 81       	ldd	r18, Y+2	; 0x02
     ada:	3b 81       	ldd	r19, Y+3	; 0x03
     adc:	82 0f       	add	r24, r18
     ade:	93 1f       	adc	r25, r19
     ae0:	9f 83       	std	Y+7, r25	; 0x07
     ae2:	8e 83       	std	Y+6, r24	; 0x06
     ae4:	12 30       	cpi	r17, 0x02	; 2
     ae6:	61 f4       	brne	.+24     	; 0xb00 <prvCopyDataToQueue+0xac>
     ae8:	8a 8d       	ldd	r24, Y+26	; 0x1a
     aea:	88 23       	and	r24, r24
     aec:	59 f0       	breq	.+22     	; 0xb04 <prvCopyDataToQueue+0xb0>
     aee:	8a 8d       	ldd	r24, Y+26	; 0x1a
     af0:	81 50       	subi	r24, 0x01	; 1
     af2:	8a 8f       	std	Y+26, r24	; 0x1a
     af4:	80 e0       	ldi	r24, 0x00	; 0
     af6:	07 c0       	rjmp	.+14     	; 0xb06 <prvCopyDataToQueue+0xb2>
     af8:	80 e0       	ldi	r24, 0x00	; 0
     afa:	05 c0       	rjmp	.+10     	; 0xb06 <prvCopyDataToQueue+0xb2>
     afc:	80 e0       	ldi	r24, 0x00	; 0
     afe:	03 c0       	rjmp	.+6      	; 0xb06 <prvCopyDataToQueue+0xb2>
     b00:	80 e0       	ldi	r24, 0x00	; 0
     b02:	01 c0       	rjmp	.+2      	; 0xb06 <prvCopyDataToQueue+0xb2>
     b04:	80 e0       	ldi	r24, 0x00	; 0
     b06:	9a 8d       	ldd	r25, Y+26	; 0x1a
     b08:	9f 5f       	subi	r25, 0xFF	; 255
     b0a:	9a 8f       	std	Y+26, r25	; 0x1a
     b0c:	df 91       	pop	r29
     b0e:	cf 91       	pop	r28
     b10:	1f 91       	pop	r17
     b12:	08 95       	ret

00000b14 <prvCopyDataFromQueue>:
     b14:	fc 01       	movw	r30, r24
     b16:	44 8d       	ldd	r20, Z+28	; 0x1c
     b18:	44 23       	and	r20, r20
     b1a:	a9 f0       	breq	.+42     	; 0xb46 <prvCopyDataFromQueue+0x32>
     b1c:	50 e0       	ldi	r21, 0x00	; 0
     b1e:	26 81       	ldd	r18, Z+6	; 0x06
     b20:	37 81       	ldd	r19, Z+7	; 0x07
     b22:	24 0f       	add	r18, r20
     b24:	35 1f       	adc	r19, r21
     b26:	37 83       	std	Z+7, r19	; 0x07
     b28:	26 83       	std	Z+6, r18	; 0x06
     b2a:	82 81       	ldd	r24, Z+2	; 0x02
     b2c:	93 81       	ldd	r25, Z+3	; 0x03
     b2e:	28 17       	cp	r18, r24
     b30:	39 07       	cpc	r19, r25
     b32:	20 f0       	brcs	.+8      	; 0xb3c <prvCopyDataFromQueue+0x28>
     b34:	80 81       	ld	r24, Z
     b36:	91 81       	ldd	r25, Z+1	; 0x01
     b38:	97 83       	std	Z+7, r25	; 0x07
     b3a:	86 83       	std	Z+6, r24	; 0x06
     b3c:	cb 01       	movw	r24, r22
     b3e:	66 81       	ldd	r22, Z+6	; 0x06
     b40:	77 81       	ldd	r23, Z+7	; 0x07
     b42:	0e 94 09 10 	call	0x2012	; 0x2012 <memcpy>
     b46:	08 95       	ret

00000b48 <prvUnlockQueue>:
     b48:	0f 93       	push	r16
     b4a:	1f 93       	push	r17
     b4c:	cf 93       	push	r28
     b4e:	df 93       	push	r29
     b50:	ec 01       	movw	r28, r24
     b52:	0f b6       	in	r0, 0x3f	; 63
     b54:	f8 94       	cli
     b56:	0f 92       	push	r0
     b58:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b5a:	18 16       	cp	r1, r24
     b5c:	bc f4       	brge	.+46     	; 0xb8c <prvUnlockQueue+0x44>
     b5e:	89 89       	ldd	r24, Y+17	; 0x11
     b60:	81 11       	cpse	r24, r1
     b62:	05 c0       	rjmp	.+10     	; 0xb6e <prvUnlockQueue+0x26>
     b64:	13 c0       	rjmp	.+38     	; 0xb8c <prvUnlockQueue+0x44>
     b66:	89 89       	ldd	r24, Y+17	; 0x11
     b68:	81 11       	cpse	r24, r1
     b6a:	04 c0       	rjmp	.+8      	; 0xb74 <prvUnlockQueue+0x2c>
     b6c:	0f c0       	rjmp	.+30     	; 0xb8c <prvUnlockQueue+0x44>
     b6e:	8e 01       	movw	r16, r28
     b70:	0f 5e       	subi	r16, 0xEF	; 239
     b72:	1f 4f       	sbci	r17, 0xFF	; 255
     b74:	c8 01       	movw	r24, r16
     b76:	0e 94 66 0c 	call	0x18cc	; 0x18cc <xTaskRemoveFromEventList>
     b7a:	81 11       	cpse	r24, r1
     b7c:	0e 94 f2 0c 	call	0x19e4	; 0x19e4 <vTaskMissedYield>
     b80:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b82:	81 50       	subi	r24, 0x01	; 1
     b84:	8e 8f       	std	Y+30, r24	; 0x1e
     b86:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b88:	18 16       	cp	r1, r24
     b8a:	6c f3       	brlt	.-38     	; 0xb66 <prvUnlockQueue+0x1e>
     b8c:	8f ef       	ldi	r24, 0xFF	; 255
     b8e:	8e 8f       	std	Y+30, r24	; 0x1e
     b90:	0f 90       	pop	r0
     b92:	0f be       	out	0x3f, r0	; 63
     b94:	0f b6       	in	r0, 0x3f	; 63
     b96:	f8 94       	cli
     b98:	0f 92       	push	r0
     b9a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b9c:	18 16       	cp	r1, r24
     b9e:	bc f4       	brge	.+46     	; 0xbce <prvUnlockQueue+0x86>
     ba0:	88 85       	ldd	r24, Y+8	; 0x08
     ba2:	81 11       	cpse	r24, r1
     ba4:	05 c0       	rjmp	.+10     	; 0xbb0 <prvUnlockQueue+0x68>
     ba6:	13 c0       	rjmp	.+38     	; 0xbce <prvUnlockQueue+0x86>
     ba8:	88 85       	ldd	r24, Y+8	; 0x08
     baa:	81 11       	cpse	r24, r1
     bac:	04 c0       	rjmp	.+8      	; 0xbb6 <prvUnlockQueue+0x6e>
     bae:	0f c0       	rjmp	.+30     	; 0xbce <prvUnlockQueue+0x86>
     bb0:	8e 01       	movw	r16, r28
     bb2:	08 5f       	subi	r16, 0xF8	; 248
     bb4:	1f 4f       	sbci	r17, 0xFF	; 255
     bb6:	c8 01       	movw	r24, r16
     bb8:	0e 94 66 0c 	call	0x18cc	; 0x18cc <xTaskRemoveFromEventList>
     bbc:	81 11       	cpse	r24, r1
     bbe:	0e 94 f2 0c 	call	0x19e4	; 0x19e4 <vTaskMissedYield>
     bc2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     bc4:	81 50       	subi	r24, 0x01	; 1
     bc6:	8d 8f       	std	Y+29, r24	; 0x1d
     bc8:	8d 8d       	ldd	r24, Y+29	; 0x1d
     bca:	18 16       	cp	r1, r24
     bcc:	6c f3       	brlt	.-38     	; 0xba8 <prvUnlockQueue+0x60>
     bce:	8f ef       	ldi	r24, 0xFF	; 255
     bd0:	8d 8f       	std	Y+29, r24	; 0x1d
     bd2:	0f 90       	pop	r0
     bd4:	0f be       	out	0x3f, r0	; 63
     bd6:	df 91       	pop	r29
     bd8:	cf 91       	pop	r28
     bda:	1f 91       	pop	r17
     bdc:	0f 91       	pop	r16
     bde:	08 95       	ret

00000be0 <xQueueGenericSend>:
     be0:	9f 92       	push	r9
     be2:	af 92       	push	r10
     be4:	bf 92       	push	r11
     be6:	cf 92       	push	r12
     be8:	df 92       	push	r13
     bea:	ef 92       	push	r14
     bec:	ff 92       	push	r15
     bee:	0f 93       	push	r16
     bf0:	1f 93       	push	r17
     bf2:	cf 93       	push	r28
     bf4:	df 93       	push	r29
     bf6:	00 d0       	rcall	.+0      	; 0xbf8 <xQueueGenericSend+0x18>
     bf8:	00 d0       	rcall	.+0      	; 0xbfa <xQueueGenericSend+0x1a>
     bfa:	1f 92       	push	r1
     bfc:	cd b7       	in	r28, 0x3d	; 61
     bfe:	de b7       	in	r29, 0x3e	; 62
     c00:	8c 01       	movw	r16, r24
     c02:	6b 01       	movw	r12, r22
     c04:	5d 83       	std	Y+5, r21	; 0x05
     c06:	4c 83       	std	Y+4, r20	; 0x04
     c08:	a2 2e       	mov	r10, r18
     c0a:	b1 2c       	mov	r11, r1
     c0c:	99 24       	eor	r9, r9
     c0e:	93 94       	inc	r9
     c10:	7c 01       	movw	r14, r24
     c12:	88 e0       	ldi	r24, 0x08	; 8
     c14:	e8 0e       	add	r14, r24
     c16:	f1 1c       	adc	r15, r1
     c18:	0f b6       	in	r0, 0x3f	; 63
     c1a:	f8 94       	cli
     c1c:	0f 92       	push	r0
     c1e:	f8 01       	movw	r30, r16
     c20:	92 8d       	ldd	r25, Z+26	; 0x1a
     c22:	83 8d       	ldd	r24, Z+27	; 0x1b
     c24:	98 17       	cp	r25, r24
     c26:	18 f0       	brcs	.+6      	; 0xc2e <xQueueGenericSend+0x4e>
     c28:	f2 e0       	ldi	r31, 0x02	; 2
     c2a:	af 12       	cpse	r10, r31
     c2c:	19 c0       	rjmp	.+50     	; 0xc60 <xQueueGenericSend+0x80>
     c2e:	4a 2d       	mov	r20, r10
     c30:	b6 01       	movw	r22, r12
     c32:	c8 01       	movw	r24, r16
     c34:	0e 94 2a 05 	call	0xa54	; 0xa54 <prvCopyDataToQueue>
     c38:	f8 01       	movw	r30, r16
     c3a:	91 89       	ldd	r25, Z+17	; 0x11
     c3c:	99 23       	and	r25, r25
     c3e:	49 f0       	breq	.+18     	; 0xc52 <xQueueGenericSend+0x72>
     c40:	c8 01       	movw	r24, r16
     c42:	41 96       	adiw	r24, 0x11	; 17
     c44:	0e 94 66 0c 	call	0x18cc	; 0x18cc <xTaskRemoveFromEventList>
     c48:	81 30       	cpi	r24, 0x01	; 1
     c4a:	31 f4       	brne	.+12     	; 0xc58 <xQueueGenericSend+0x78>
     c4c:	0e 94 a5 03 	call	0x74a	; 0x74a <vPortYield>
     c50:	03 c0       	rjmp	.+6      	; 0xc58 <xQueueGenericSend+0x78>
     c52:	81 11       	cpse	r24, r1
     c54:	0e 94 a5 03 	call	0x74a	; 0x74a <vPortYield>
     c58:	0f 90       	pop	r0
     c5a:	0f be       	out	0x3f, r0	; 63
     c5c:	81 e0       	ldi	r24, 0x01	; 1
     c5e:	50 c0       	rjmp	.+160    	; 0xd00 <xQueueGenericSend+0x120>
     c60:	8c 81       	ldd	r24, Y+4	; 0x04
     c62:	9d 81       	ldd	r25, Y+5	; 0x05
     c64:	89 2b       	or	r24, r25
     c66:	21 f4       	brne	.+8      	; 0xc70 <xQueueGenericSend+0x90>
     c68:	0f 90       	pop	r0
     c6a:	0f be       	out	0x3f, r0	; 63
     c6c:	80 e0       	ldi	r24, 0x00	; 0
     c6e:	48 c0       	rjmp	.+144    	; 0xd00 <xQueueGenericSend+0x120>
     c70:	b1 10       	cpse	r11, r1
     c72:	05 c0       	rjmp	.+10     	; 0xc7e <xQueueGenericSend+0x9e>
     c74:	ce 01       	movw	r24, r28
     c76:	01 96       	adiw	r24, 0x01	; 1
     c78:	0e 94 ae 0c 	call	0x195c	; 0x195c <vTaskSetTimeOutState>
     c7c:	b9 2c       	mov	r11, r9
     c7e:	0f 90       	pop	r0
     c80:	0f be       	out	0x3f, r0	; 63
     c82:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <vTaskSuspendAll>
     c86:	0f b6       	in	r0, 0x3f	; 63
     c88:	f8 94       	cli
     c8a:	0f 92       	push	r0
     c8c:	f8 01       	movw	r30, r16
     c8e:	85 8d       	ldd	r24, Z+29	; 0x1d
     c90:	8f 3f       	cpi	r24, 0xFF	; 255
     c92:	09 f4       	brne	.+2      	; 0xc96 <xQueueGenericSend+0xb6>
     c94:	15 8e       	std	Z+29, r1	; 0x1d
     c96:	f8 01       	movw	r30, r16
     c98:	86 8d       	ldd	r24, Z+30	; 0x1e
     c9a:	8f 3f       	cpi	r24, 0xFF	; 255
     c9c:	09 f4       	brne	.+2      	; 0xca0 <xQueueGenericSend+0xc0>
     c9e:	16 8e       	std	Z+30, r1	; 0x1e
     ca0:	0f 90       	pop	r0
     ca2:	0f be       	out	0x3f, r0	; 63
     ca4:	be 01       	movw	r22, r28
     ca6:	6c 5f       	subi	r22, 0xFC	; 252
     ca8:	7f 4f       	sbci	r23, 0xFF	; 255
     caa:	ce 01       	movw	r24, r28
     cac:	01 96       	adiw	r24, 0x01	; 1
     cae:	0e 94 b9 0c 	call	0x1972	; 0x1972 <xTaskCheckForTimeOut>
     cb2:	81 11       	cpse	r24, r1
     cb4:	1f c0       	rjmp	.+62     	; 0xcf4 <xQueueGenericSend+0x114>
     cb6:	0f b6       	in	r0, 0x3f	; 63
     cb8:	f8 94       	cli
     cba:	0f 92       	push	r0
     cbc:	f8 01       	movw	r30, r16
     cbe:	92 8d       	ldd	r25, Z+26	; 0x1a
     cc0:	0f 90       	pop	r0
     cc2:	0f be       	out	0x3f, r0	; 63
     cc4:	83 8d       	ldd	r24, Z+27	; 0x1b
     cc6:	98 13       	cpse	r25, r24
     cc8:	0f c0       	rjmp	.+30     	; 0xce8 <xQueueGenericSend+0x108>
     cca:	6c 81       	ldd	r22, Y+4	; 0x04
     ccc:	7d 81       	ldd	r23, Y+5	; 0x05
     cce:	c7 01       	movw	r24, r14
     cd0:	0e 94 3a 0c 	call	0x1874	; 0x1874 <vTaskPlaceOnEventList>
     cd4:	c8 01       	movw	r24, r16
     cd6:	0e 94 a4 05 	call	0xb48	; 0xb48 <prvUnlockQueue>
     cda:	0e 94 9f 0a 	call	0x153e	; 0x153e <xTaskResumeAll>
     cde:	81 11       	cpse	r24, r1
     ce0:	9b cf       	rjmp	.-202    	; 0xc18 <xQueueGenericSend+0x38>
     ce2:	0e 94 a5 03 	call	0x74a	; 0x74a <vPortYield>
     ce6:	98 cf       	rjmp	.-208    	; 0xc18 <xQueueGenericSend+0x38>
     ce8:	c8 01       	movw	r24, r16
     cea:	0e 94 a4 05 	call	0xb48	; 0xb48 <prvUnlockQueue>
     cee:	0e 94 9f 0a 	call	0x153e	; 0x153e <xTaskResumeAll>
     cf2:	92 cf       	rjmp	.-220    	; 0xc18 <xQueueGenericSend+0x38>
     cf4:	c8 01       	movw	r24, r16
     cf6:	0e 94 a4 05 	call	0xb48	; 0xb48 <prvUnlockQueue>
     cfa:	0e 94 9f 0a 	call	0x153e	; 0x153e <xTaskResumeAll>
     cfe:	80 e0       	ldi	r24, 0x00	; 0
     d00:	0f 90       	pop	r0
     d02:	0f 90       	pop	r0
     d04:	0f 90       	pop	r0
     d06:	0f 90       	pop	r0
     d08:	0f 90       	pop	r0
     d0a:	df 91       	pop	r29
     d0c:	cf 91       	pop	r28
     d0e:	1f 91       	pop	r17
     d10:	0f 91       	pop	r16
     d12:	ff 90       	pop	r15
     d14:	ef 90       	pop	r14
     d16:	df 90       	pop	r13
     d18:	cf 90       	pop	r12
     d1a:	bf 90       	pop	r11
     d1c:	af 90       	pop	r10
     d1e:	9f 90       	pop	r9
     d20:	08 95       	ret

00000d22 <xQueueGenericSendFromISR>:
     d22:	0f 93       	push	r16
     d24:	1f 93       	push	r17
     d26:	cf 93       	push	r28
     d28:	df 93       	push	r29
     d2a:	fa 01       	movw	r30, r20
     d2c:	dc 01       	movw	r26, r24
     d2e:	5a 96       	adiw	r26, 0x1a	; 26
     d30:	5c 91       	ld	r21, X
     d32:	5a 97       	sbiw	r26, 0x1a	; 26
     d34:	5b 96       	adiw	r26, 0x1b	; 27
     d36:	3c 91       	ld	r19, X
     d38:	53 17       	cp	r21, r19
     d3a:	10 f0       	brcs	.+4      	; 0xd40 <xQueueGenericSendFromISR+0x1e>
     d3c:	22 30       	cpi	r18, 0x02	; 2
     d3e:	e9 f4       	brne	.+58     	; 0xd7a <xQueueGenericSendFromISR+0x58>
     d40:	42 2f       	mov	r20, r18
     d42:	8f 01       	movw	r16, r30
     d44:	ec 01       	movw	r28, r24
     d46:	0e 94 2a 05 	call	0xa54	; 0xa54 <prvCopyDataToQueue>
     d4a:	8e 8d       	ldd	r24, Y+30	; 0x1e
     d4c:	8f 3f       	cpi	r24, 0xFF	; 255
     d4e:	81 f4       	brne	.+32     	; 0xd70 <xQueueGenericSendFromISR+0x4e>
     d50:	89 89       	ldd	r24, Y+17	; 0x11
     d52:	88 23       	and	r24, r24
     d54:	a1 f0       	breq	.+40     	; 0xd7e <xQueueGenericSendFromISR+0x5c>
     d56:	ce 01       	movw	r24, r28
     d58:	41 96       	adiw	r24, 0x11	; 17
     d5a:	0e 94 66 0c 	call	0x18cc	; 0x18cc <xTaskRemoveFromEventList>
     d5e:	88 23       	and	r24, r24
     d60:	81 f0       	breq	.+32     	; 0xd82 <xQueueGenericSendFromISR+0x60>
     d62:	01 15       	cp	r16, r1
     d64:	11 05       	cpc	r17, r1
     d66:	79 f0       	breq	.+30     	; 0xd86 <xQueueGenericSendFromISR+0x64>
     d68:	81 e0       	ldi	r24, 0x01	; 1
     d6a:	f8 01       	movw	r30, r16
     d6c:	80 83       	st	Z, r24
     d6e:	0c c0       	rjmp	.+24     	; 0xd88 <xQueueGenericSendFromISR+0x66>
     d70:	8e 8d       	ldd	r24, Y+30	; 0x1e
     d72:	8f 5f       	subi	r24, 0xFF	; 255
     d74:	8e 8f       	std	Y+30, r24	; 0x1e
     d76:	81 e0       	ldi	r24, 0x01	; 1
     d78:	07 c0       	rjmp	.+14     	; 0xd88 <xQueueGenericSendFromISR+0x66>
     d7a:	80 e0       	ldi	r24, 0x00	; 0
     d7c:	05 c0       	rjmp	.+10     	; 0xd88 <xQueueGenericSendFromISR+0x66>
     d7e:	81 e0       	ldi	r24, 0x01	; 1
     d80:	03 c0       	rjmp	.+6      	; 0xd88 <xQueueGenericSendFromISR+0x66>
     d82:	81 e0       	ldi	r24, 0x01	; 1
     d84:	01 c0       	rjmp	.+2      	; 0xd88 <xQueueGenericSendFromISR+0x66>
     d86:	81 e0       	ldi	r24, 0x01	; 1
     d88:	df 91       	pop	r29
     d8a:	cf 91       	pop	r28
     d8c:	1f 91       	pop	r17
     d8e:	0f 91       	pop	r16
     d90:	08 95       	ret

00000d92 <xQueueGenericReceive>:
     d92:	9f 92       	push	r9
     d94:	af 92       	push	r10
     d96:	bf 92       	push	r11
     d98:	cf 92       	push	r12
     d9a:	df 92       	push	r13
     d9c:	ef 92       	push	r14
     d9e:	ff 92       	push	r15
     da0:	0f 93       	push	r16
     da2:	1f 93       	push	r17
     da4:	cf 93       	push	r28
     da6:	df 93       	push	r29
     da8:	00 d0       	rcall	.+0      	; 0xdaa <xQueueGenericReceive+0x18>
     daa:	00 d0       	rcall	.+0      	; 0xdac <xQueueGenericReceive+0x1a>
     dac:	1f 92       	push	r1
     dae:	cd b7       	in	r28, 0x3d	; 61
     db0:	de b7       	in	r29, 0x3e	; 62
     db2:	8c 01       	movw	r16, r24
     db4:	6b 01       	movw	r12, r22
     db6:	5d 83       	std	Y+5, r21	; 0x05
     db8:	4c 83       	std	Y+4, r20	; 0x04
     dba:	92 2e       	mov	r9, r18
     dbc:	b1 2c       	mov	r11, r1
     dbe:	aa 24       	eor	r10, r10
     dc0:	a3 94       	inc	r10
     dc2:	7c 01       	movw	r14, r24
     dc4:	81 e1       	ldi	r24, 0x11	; 17
     dc6:	e8 0e       	add	r14, r24
     dc8:	f1 1c       	adc	r15, r1
     dca:	0f b6       	in	r0, 0x3f	; 63
     dcc:	f8 94       	cli
     dce:	0f 92       	push	r0
     dd0:	f8 01       	movw	r30, r16
     dd2:	82 8d       	ldd	r24, Z+26	; 0x1a
     dd4:	88 23       	and	r24, r24
     dd6:	99 f1       	breq	.+102    	; 0xe3e <xQueueGenericReceive+0xac>
     dd8:	e6 80       	ldd	r14, Z+6	; 0x06
     dda:	f7 80       	ldd	r15, Z+7	; 0x07
     ddc:	b6 01       	movw	r22, r12
     dde:	c8 01       	movw	r24, r16
     de0:	0e 94 8a 05 	call	0xb14	; 0xb14 <prvCopyDataFromQueue>
     de4:	91 10       	cpse	r9, r1
     de6:	1a c0       	rjmp	.+52     	; 0xe1c <xQueueGenericReceive+0x8a>
     de8:	f8 01       	movw	r30, r16
     dea:	82 8d       	ldd	r24, Z+26	; 0x1a
     dec:	81 50       	subi	r24, 0x01	; 1
     dee:	82 8f       	std	Z+26, r24	; 0x1a
     df0:	80 81       	ld	r24, Z
     df2:	91 81       	ldd	r25, Z+1	; 0x01
     df4:	89 2b       	or	r24, r25
     df6:	29 f4       	brne	.+10     	; 0xe02 <xQueueGenericReceive+0x70>
     df8:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <pvTaskIncrementMutexHeldCount>
     dfc:	f8 01       	movw	r30, r16
     dfe:	93 83       	std	Z+3, r25	; 0x03
     e00:	82 83       	std	Z+2, r24	; 0x02
     e02:	f8 01       	movw	r30, r16
     e04:	80 85       	ldd	r24, Z+8	; 0x08
     e06:	88 23       	and	r24, r24
     e08:	b1 f0       	breq	.+44     	; 0xe36 <xQueueGenericReceive+0xa4>
     e0a:	c8 01       	movw	r24, r16
     e0c:	08 96       	adiw	r24, 0x08	; 8
     e0e:	0e 94 66 0c 	call	0x18cc	; 0x18cc <xTaskRemoveFromEventList>
     e12:	81 30       	cpi	r24, 0x01	; 1
     e14:	81 f4       	brne	.+32     	; 0xe36 <xQueueGenericReceive+0xa4>
     e16:	0e 94 a5 03 	call	0x74a	; 0x74a <vPortYield>
     e1a:	0d c0       	rjmp	.+26     	; 0xe36 <xQueueGenericReceive+0xa4>
     e1c:	f8 01       	movw	r30, r16
     e1e:	f7 82       	std	Z+7, r15	; 0x07
     e20:	e6 82       	std	Z+6, r14	; 0x06
     e22:	81 89       	ldd	r24, Z+17	; 0x11
     e24:	88 23       	and	r24, r24
     e26:	39 f0       	breq	.+14     	; 0xe36 <xQueueGenericReceive+0xa4>
     e28:	c8 01       	movw	r24, r16
     e2a:	41 96       	adiw	r24, 0x11	; 17
     e2c:	0e 94 66 0c 	call	0x18cc	; 0x18cc <xTaskRemoveFromEventList>
     e30:	81 11       	cpse	r24, r1
     e32:	0e 94 a5 03 	call	0x74a	; 0x74a <vPortYield>
     e36:	0f 90       	pop	r0
     e38:	0f be       	out	0x3f, r0	; 63
     e3a:	81 e0       	ldi	r24, 0x01	; 1
     e3c:	5c c0       	rjmp	.+184    	; 0xef6 <xQueueGenericReceive+0x164>
     e3e:	8c 81       	ldd	r24, Y+4	; 0x04
     e40:	9d 81       	ldd	r25, Y+5	; 0x05
     e42:	89 2b       	or	r24, r25
     e44:	21 f4       	brne	.+8      	; 0xe4e <xQueueGenericReceive+0xbc>
     e46:	0f 90       	pop	r0
     e48:	0f be       	out	0x3f, r0	; 63
     e4a:	80 e0       	ldi	r24, 0x00	; 0
     e4c:	54 c0       	rjmp	.+168    	; 0xef6 <xQueueGenericReceive+0x164>
     e4e:	b1 10       	cpse	r11, r1
     e50:	05 c0       	rjmp	.+10     	; 0xe5c <xQueueGenericReceive+0xca>
     e52:	ce 01       	movw	r24, r28
     e54:	01 96       	adiw	r24, 0x01	; 1
     e56:	0e 94 ae 0c 	call	0x195c	; 0x195c <vTaskSetTimeOutState>
     e5a:	ba 2c       	mov	r11, r10
     e5c:	0f 90       	pop	r0
     e5e:	0f be       	out	0x3f, r0	; 63
     e60:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <vTaskSuspendAll>
     e64:	0f b6       	in	r0, 0x3f	; 63
     e66:	f8 94       	cli
     e68:	0f 92       	push	r0
     e6a:	f8 01       	movw	r30, r16
     e6c:	85 8d       	ldd	r24, Z+29	; 0x1d
     e6e:	8f 3f       	cpi	r24, 0xFF	; 255
     e70:	09 f4       	brne	.+2      	; 0xe74 <xQueueGenericReceive+0xe2>
     e72:	15 8e       	std	Z+29, r1	; 0x1d
     e74:	f8 01       	movw	r30, r16
     e76:	86 8d       	ldd	r24, Z+30	; 0x1e
     e78:	8f 3f       	cpi	r24, 0xFF	; 255
     e7a:	09 f4       	brne	.+2      	; 0xe7e <xQueueGenericReceive+0xec>
     e7c:	16 8e       	std	Z+30, r1	; 0x1e
     e7e:	0f 90       	pop	r0
     e80:	0f be       	out	0x3f, r0	; 63
     e82:	be 01       	movw	r22, r28
     e84:	6c 5f       	subi	r22, 0xFC	; 252
     e86:	7f 4f       	sbci	r23, 0xFF	; 255
     e88:	ce 01       	movw	r24, r28
     e8a:	01 96       	adiw	r24, 0x01	; 1
     e8c:	0e 94 b9 0c 	call	0x1972	; 0x1972 <xTaskCheckForTimeOut>
     e90:	81 11       	cpse	r24, r1
     e92:	2b c0       	rjmp	.+86     	; 0xeea <xQueueGenericReceive+0x158>
     e94:	0f b6       	in	r0, 0x3f	; 63
     e96:	f8 94       	cli
     e98:	0f 92       	push	r0
     e9a:	f8 01       	movw	r30, r16
     e9c:	82 8d       	ldd	r24, Z+26	; 0x1a
     e9e:	0f 90       	pop	r0
     ea0:	0f be       	out	0x3f, r0	; 63
     ea2:	81 11       	cpse	r24, r1
     ea4:	1c c0       	rjmp	.+56     	; 0xede <xQueueGenericReceive+0x14c>
     ea6:	80 81       	ld	r24, Z
     ea8:	91 81       	ldd	r25, Z+1	; 0x01
     eaa:	89 2b       	or	r24, r25
     eac:	49 f4       	brne	.+18     	; 0xec0 <xQueueGenericReceive+0x12e>
     eae:	0f b6       	in	r0, 0x3f	; 63
     eb0:	f8 94       	cli
     eb2:	0f 92       	push	r0
     eb4:	82 81       	ldd	r24, Z+2	; 0x02
     eb6:	93 81       	ldd	r25, Z+3	; 0x03
     eb8:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <vTaskPriorityInherit>
     ebc:	0f 90       	pop	r0
     ebe:	0f be       	out	0x3f, r0	; 63
     ec0:	6c 81       	ldd	r22, Y+4	; 0x04
     ec2:	7d 81       	ldd	r23, Y+5	; 0x05
     ec4:	c7 01       	movw	r24, r14
     ec6:	0e 94 3a 0c 	call	0x1874	; 0x1874 <vTaskPlaceOnEventList>
     eca:	c8 01       	movw	r24, r16
     ecc:	0e 94 a4 05 	call	0xb48	; 0xb48 <prvUnlockQueue>
     ed0:	0e 94 9f 0a 	call	0x153e	; 0x153e <xTaskResumeAll>
     ed4:	81 11       	cpse	r24, r1
     ed6:	79 cf       	rjmp	.-270    	; 0xdca <xQueueGenericReceive+0x38>
     ed8:	0e 94 a5 03 	call	0x74a	; 0x74a <vPortYield>
     edc:	76 cf       	rjmp	.-276    	; 0xdca <xQueueGenericReceive+0x38>
     ede:	c8 01       	movw	r24, r16
     ee0:	0e 94 a4 05 	call	0xb48	; 0xb48 <prvUnlockQueue>
     ee4:	0e 94 9f 0a 	call	0x153e	; 0x153e <xTaskResumeAll>
     ee8:	70 cf       	rjmp	.-288    	; 0xdca <xQueueGenericReceive+0x38>
     eea:	c8 01       	movw	r24, r16
     eec:	0e 94 a4 05 	call	0xb48	; 0xb48 <prvUnlockQueue>
     ef0:	0e 94 9f 0a 	call	0x153e	; 0x153e <xTaskResumeAll>
     ef4:	80 e0       	ldi	r24, 0x00	; 0
     ef6:	0f 90       	pop	r0
     ef8:	0f 90       	pop	r0
     efa:	0f 90       	pop	r0
     efc:	0f 90       	pop	r0
     efe:	0f 90       	pop	r0
     f00:	df 91       	pop	r29
     f02:	cf 91       	pop	r28
     f04:	1f 91       	pop	r17
     f06:	0f 91       	pop	r16
     f08:	ff 90       	pop	r15
     f0a:	ef 90       	pop	r14
     f0c:	df 90       	pop	r13
     f0e:	cf 90       	pop	r12
     f10:	bf 90       	pop	r11
     f12:	af 90       	pop	r10
     f14:	9f 90       	pop	r9
     f16:	08 95       	ret

00000f18 <uxQueueMessagesWaiting>:
     f18:	0f b6       	in	r0, 0x3f	; 63
     f1a:	f8 94       	cli
     f1c:	0f 92       	push	r0
     f1e:	fc 01       	movw	r30, r24
     f20:	82 8d       	ldd	r24, Z+26	; 0x1a
     f22:	0f 90       	pop	r0
     f24:	0f be       	out	0x3f, r0	; 63
     f26:	08 95       	ret

00000f28 <prvResetNextTaskUnblockTime>:
     f28:	e0 91 4e 07 	lds	r30, 0x074E	; 0x80074e <pxDelayedTaskList>
     f2c:	f0 91 4f 07 	lds	r31, 0x074F	; 0x80074f <pxDelayedTaskList+0x1>
     f30:	80 81       	ld	r24, Z
     f32:	81 11       	cpse	r24, r1
     f34:	07 c0       	rjmp	.+14     	; 0xf44 <prvResetNextTaskUnblockTime+0x1c>
     f36:	8f ef       	ldi	r24, 0xFF	; 255
     f38:	9f ef       	ldi	r25, 0xFF	; 255
     f3a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
     f3e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
     f42:	08 95       	ret
     f44:	e0 91 4e 07 	lds	r30, 0x074E	; 0x80074e <pxDelayedTaskList>
     f48:	f0 91 4f 07 	lds	r31, 0x074F	; 0x80074f <pxDelayedTaskList+0x1>
     f4c:	05 80       	ldd	r0, Z+5	; 0x05
     f4e:	f6 81       	ldd	r31, Z+6	; 0x06
     f50:	e0 2d       	mov	r30, r0
     f52:	06 80       	ldd	r0, Z+6	; 0x06
     f54:	f7 81       	ldd	r31, Z+7	; 0x07
     f56:	e0 2d       	mov	r30, r0
     f58:	82 81       	ldd	r24, Z+2	; 0x02
     f5a:	93 81       	ldd	r25, Z+3	; 0x03
     f5c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
     f60:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
     f64:	08 95       	ret

00000f66 <prvAddCurrentTaskToDelayedList>:
     f66:	cf 93       	push	r28
     f68:	df 93       	push	r29
     f6a:	ec 01       	movw	r28, r24
     f6c:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
     f70:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     f74:	93 83       	std	Z+3, r25	; 0x03
     f76:	82 83       	std	Z+2, r24	; 0x02
     f78:	80 91 2b 07 	lds	r24, 0x072B	; 0x80072b <xTickCount>
     f7c:	90 91 2c 07 	lds	r25, 0x072C	; 0x80072c <xTickCount+0x1>
     f80:	c8 17       	cp	r28, r24
     f82:	d9 07       	cpc	r29, r25
     f84:	68 f4       	brcc	.+26     	; 0xfa0 <prvAddCurrentTaskToDelayedList+0x3a>
     f86:	60 91 86 07 	lds	r22, 0x0786	; 0x800786 <pxCurrentTCB>
     f8a:	70 91 87 07 	lds	r23, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     f8e:	80 91 4c 07 	lds	r24, 0x074C	; 0x80074c <pxOverflowDelayedTaskList>
     f92:	90 91 4d 07 	lds	r25, 0x074D	; 0x80074d <pxOverflowDelayedTaskList+0x1>
     f96:	6e 5f       	subi	r22, 0xFE	; 254
     f98:	7f 4f       	sbci	r23, 0xFF	; 255
     f9a:	0e 94 a8 02 	call	0x550	; 0x550 <vListInsert>
     f9e:	17 c0       	rjmp	.+46     	; 0xfce <prvAddCurrentTaskToDelayedList+0x68>
     fa0:	60 91 86 07 	lds	r22, 0x0786	; 0x800786 <pxCurrentTCB>
     fa4:	70 91 87 07 	lds	r23, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
     fa8:	80 91 4e 07 	lds	r24, 0x074E	; 0x80074e <pxDelayedTaskList>
     fac:	90 91 4f 07 	lds	r25, 0x074F	; 0x80074f <pxDelayedTaskList+0x1>
     fb0:	6e 5f       	subi	r22, 0xFE	; 254
     fb2:	7f 4f       	sbci	r23, 0xFF	; 255
     fb4:	0e 94 a8 02 	call	0x550	; 0x550 <vListInsert>
     fb8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <xNextTaskUnblockTime>
     fbc:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <xNextTaskUnblockTime+0x1>
     fc0:	c8 17       	cp	r28, r24
     fc2:	d9 07       	cpc	r29, r25
     fc4:	20 f4       	brcc	.+8      	; 0xfce <prvAddCurrentTaskToDelayedList+0x68>
     fc6:	d0 93 03 01 	sts	0x0103, r29	; 0x800103 <xNextTaskUnblockTime+0x1>
     fca:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <xNextTaskUnblockTime>
     fce:	df 91       	pop	r29
     fd0:	cf 91       	pop	r28
     fd2:	08 95       	ret

00000fd4 <xTaskGenericCreate>:
     fd4:	4f 92       	push	r4
     fd6:	5f 92       	push	r5
     fd8:	6f 92       	push	r6
     fda:	7f 92       	push	r7
     fdc:	8f 92       	push	r8
     fde:	9f 92       	push	r9
     fe0:	af 92       	push	r10
     fe2:	bf 92       	push	r11
     fe4:	cf 92       	push	r12
     fe6:	df 92       	push	r13
     fe8:	ef 92       	push	r14
     fea:	ff 92       	push	r15
     fec:	0f 93       	push	r16
     fee:	1f 93       	push	r17
     ff0:	cf 93       	push	r28
     ff2:	df 93       	push	r29
     ff4:	4c 01       	movw	r8, r24
     ff6:	eb 01       	movw	r28, r22
     ff8:	5a 01       	movw	r10, r20
     ffa:	29 01       	movw	r4, r18
     ffc:	c1 14       	cp	r12, r1
     ffe:	d1 04       	cpc	r13, r1
    1000:	39 f4       	brne	.+14     	; 0x1010 <xTaskGenericCreate+0x3c>
    1002:	ca 01       	movw	r24, r20
    1004:	0e 94 5d 04 	call	0x8ba	; 0x8ba <pvPortMalloc>
    1008:	6c 01       	movw	r12, r24
    100a:	89 2b       	or	r24, r25
    100c:	09 f4       	brne	.+2      	; 0x1010 <xTaskGenericCreate+0x3c>
    100e:	e3 c0       	rjmp	.+454    	; 0x11d6 <xTaskGenericCreate+0x202>
    1010:	88 e2       	ldi	r24, 0x28	; 40
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	0e 94 5d 04 	call	0x8ba	; 0x8ba <pvPortMalloc>
    1018:	3c 01       	movw	r6, r24
    101a:	00 97       	sbiw	r24, 0x00	; 0
    101c:	79 f0       	breq	.+30     	; 0x103c <xTaskGenericCreate+0x68>
    101e:	fc 01       	movw	r30, r24
    1020:	d0 8e       	std	Z+24, r13	; 0x18
    1022:	c7 8a       	std	Z+23, r12	; 0x17
    1024:	f1 e0       	ldi	r31, 0x01	; 1
    1026:	af 1a       	sub	r10, r31
    1028:	b1 08       	sbc	r11, r1
    102a:	ca 0c       	add	r12, r10
    102c:	db 1c       	adc	r13, r11
    102e:	88 81       	ld	r24, Y
    1030:	f3 01       	movw	r30, r6
    1032:	81 8f       	std	Z+25, r24	; 0x19
    1034:	88 81       	ld	r24, Y
    1036:	81 11       	cpse	r24, r1
    1038:	05 c0       	rjmp	.+10     	; 0x1044 <xTaskGenericCreate+0x70>
    103a:	14 c0       	rjmp	.+40     	; 0x1064 <xTaskGenericCreate+0x90>
    103c:	c6 01       	movw	r24, r12
    103e:	0e 94 f7 04 	call	0x9ee	; 0x9ee <vPortFree>
    1042:	c9 c0       	rjmp	.+402    	; 0x11d6 <xTaskGenericCreate+0x202>
    1044:	d3 01       	movw	r26, r6
    1046:	5a 96       	adiw	r26, 0x1a	; 26
    1048:	fe 01       	movw	r30, r28
    104a:	31 96       	adiw	r30, 0x01	; 1
    104c:	9e 01       	movw	r18, r28
    104e:	28 5f       	subi	r18, 0xF8	; 248
    1050:	3f 4f       	sbci	r19, 0xFF	; 255
    1052:	ef 01       	movw	r28, r30
    1054:	81 91       	ld	r24, Z+
    1056:	8d 93       	st	X+, r24
    1058:	88 81       	ld	r24, Y
    105a:	88 23       	and	r24, r24
    105c:	19 f0       	breq	.+6      	; 0x1064 <xTaskGenericCreate+0x90>
    105e:	e2 17       	cp	r30, r18
    1060:	f3 07       	cpc	r31, r19
    1062:	b9 f7       	brne	.-18     	; 0x1052 <xTaskGenericCreate+0x7e>
    1064:	f3 01       	movw	r30, r6
    1066:	10 a2       	std	Z+32, r1	; 0x20
    1068:	10 2f       	mov	r17, r16
    106a:	04 30       	cpi	r16, 0x04	; 4
    106c:	08 f0       	brcs	.+2      	; 0x1070 <xTaskGenericCreate+0x9c>
    106e:	13 e0       	ldi	r17, 0x03	; 3
    1070:	f3 01       	movw	r30, r6
    1072:	16 8b       	std	Z+22, r17	; 0x16
    1074:	11 a3       	std	Z+33, r17	; 0x21
    1076:	12 a2       	std	Z+34, r1	; 0x22
    1078:	e3 01       	movw	r28, r6
    107a:	22 96       	adiw	r28, 0x02	; 2
    107c:	ce 01       	movw	r24, r28
    107e:	0e 94 83 02 	call	0x506	; 0x506 <vListInitialiseItem>
    1082:	c3 01       	movw	r24, r6
    1084:	0c 96       	adiw	r24, 0x0c	; 12
    1086:	0e 94 83 02 	call	0x506	; 0x506 <vListInitialiseItem>
    108a:	f3 01       	movw	r30, r6
    108c:	71 86       	std	Z+9, r7	; 0x09
    108e:	60 86       	std	Z+8, r6	; 0x08
    1090:	84 e0       	ldi	r24, 0x04	; 4
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	81 1b       	sub	r24, r17
    1096:	91 09       	sbc	r25, r1
    1098:	95 87       	std	Z+13, r25	; 0x0d
    109a:	84 87       	std	Z+12, r24	; 0x0c
    109c:	73 8a       	std	Z+19, r7	; 0x13
    109e:	62 8a       	std	Z+18, r6	; 0x12
    10a0:	13 a2       	std	Z+35, r1	; 0x23
    10a2:	14 a2       	std	Z+36, r1	; 0x24
    10a4:	15 a2       	std	Z+37, r1	; 0x25
    10a6:	16 a2       	std	Z+38, r1	; 0x26
    10a8:	17 a2       	std	Z+39, r1	; 0x27
    10aa:	a2 01       	movw	r20, r4
    10ac:	b4 01       	movw	r22, r8
    10ae:	c6 01       	movw	r24, r12
    10b0:	0e 94 ff 02 	call	0x5fe	; 0x5fe <pxPortInitialiseStack>
    10b4:	f3 01       	movw	r30, r6
    10b6:	91 83       	std	Z+1, r25	; 0x01
    10b8:	80 83       	st	Z, r24
    10ba:	e1 14       	cp	r14, r1
    10bc:	f1 04       	cpc	r15, r1
    10be:	19 f0       	breq	.+6      	; 0x10c6 <xTaskGenericCreate+0xf2>
    10c0:	f7 01       	movw	r30, r14
    10c2:	71 82       	std	Z+1, r7	; 0x01
    10c4:	60 82       	st	Z, r6
    10c6:	0f b6       	in	r0, 0x3f	; 63
    10c8:	f8 94       	cli
    10ca:	0f 92       	push	r0
    10cc:	80 91 2d 07 	lds	r24, 0x072D	; 0x80072d <uxCurrentNumberOfTasks>
    10d0:	8f 5f       	subi	r24, 0xFF	; 255
    10d2:	80 93 2d 07 	sts	0x072D, r24	; 0x80072d <uxCurrentNumberOfTasks>
    10d6:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <pxCurrentTCB>
    10da:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    10de:	89 2b       	or	r24, r25
    10e0:	d1 f5       	brne	.+116    	; 0x1156 <xTaskGenericCreate+0x182>
    10e2:	70 92 87 07 	sts	0x0787, r7	; 0x800787 <pxCurrentTCB+0x1>
    10e6:	60 92 86 07 	sts	0x0786, r6	; 0x800786 <pxCurrentTCB>
    10ea:	80 91 2d 07 	lds	r24, 0x072D	; 0x80072d <uxCurrentNumberOfTasks>
    10ee:	81 30       	cpi	r24, 0x01	; 1
    10f0:	09 f0       	breq	.+2      	; 0x10f4 <xTaskGenericCreate+0x120>
    10f2:	40 c0       	rjmp	.+128    	; 0x1174 <xTaskGenericCreate+0x1a0>
    10f4:	82 e6       	ldi	r24, 0x62	; 98
    10f6:	97 e0       	ldi	r25, 0x07	; 7
    10f8:	0e 94 75 02 	call	0x4ea	; 0x4ea <vListInitialise>
    10fc:	8b e6       	ldi	r24, 0x6B	; 107
    10fe:	97 e0       	ldi	r25, 0x07	; 7
    1100:	0e 94 75 02 	call	0x4ea	; 0x4ea <vListInitialise>
    1104:	84 e7       	ldi	r24, 0x74	; 116
    1106:	97 e0       	ldi	r25, 0x07	; 7
    1108:	0e 94 75 02 	call	0x4ea	; 0x4ea <vListInitialise>
    110c:	8d e7       	ldi	r24, 0x7D	; 125
    110e:	97 e0       	ldi	r25, 0x07	; 7
    1110:	0e 94 75 02 	call	0x4ea	; 0x4ea <vListInitialise>
    1114:	89 e5       	ldi	r24, 0x59	; 89
    1116:	97 e0       	ldi	r25, 0x07	; 7
    1118:	0e 94 75 02 	call	0x4ea	; 0x4ea <vListInitialise>
    111c:	80 e5       	ldi	r24, 0x50	; 80
    111e:	97 e0       	ldi	r25, 0x07	; 7
    1120:	0e 94 75 02 	call	0x4ea	; 0x4ea <vListInitialise>
    1124:	83 e4       	ldi	r24, 0x43	; 67
    1126:	97 e0       	ldi	r25, 0x07	; 7
    1128:	0e 94 75 02 	call	0x4ea	; 0x4ea <vListInitialise>
    112c:	8a e3       	ldi	r24, 0x3A	; 58
    112e:	97 e0       	ldi	r25, 0x07	; 7
    1130:	0e 94 75 02 	call	0x4ea	; 0x4ea <vListInitialise>
    1134:	80 e3       	ldi	r24, 0x30	; 48
    1136:	97 e0       	ldi	r25, 0x07	; 7
    1138:	0e 94 75 02 	call	0x4ea	; 0x4ea <vListInitialise>
    113c:	89 e5       	ldi	r24, 0x59	; 89
    113e:	97 e0       	ldi	r25, 0x07	; 7
    1140:	90 93 4f 07 	sts	0x074F, r25	; 0x80074f <pxDelayedTaskList+0x1>
    1144:	80 93 4e 07 	sts	0x074E, r24	; 0x80074e <pxDelayedTaskList>
    1148:	80 e5       	ldi	r24, 0x50	; 80
    114a:	97 e0       	ldi	r25, 0x07	; 7
    114c:	90 93 4d 07 	sts	0x074D, r25	; 0x80074d <pxOverflowDelayedTaskList+0x1>
    1150:	80 93 4c 07 	sts	0x074C, r24	; 0x80074c <pxOverflowDelayedTaskList>
    1154:	0f c0       	rjmp	.+30     	; 0x1174 <xTaskGenericCreate+0x1a0>
    1156:	80 91 29 07 	lds	r24, 0x0729	; 0x800729 <xSchedulerRunning>
    115a:	81 11       	cpse	r24, r1
    115c:	0b c0       	rjmp	.+22     	; 0x1174 <xTaskGenericCreate+0x1a0>
    115e:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    1162:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1166:	86 89       	ldd	r24, Z+22	; 0x16
    1168:	08 17       	cp	r16, r24
    116a:	20 f0       	brcs	.+8      	; 0x1174 <xTaskGenericCreate+0x1a0>
    116c:	70 92 87 07 	sts	0x0787, r7	; 0x800787 <pxCurrentTCB+0x1>
    1170:	60 92 86 07 	sts	0x0786, r6	; 0x800786 <pxCurrentTCB>
    1174:	80 91 25 07 	lds	r24, 0x0725	; 0x800725 <uxTaskNumber>
    1178:	8f 5f       	subi	r24, 0xFF	; 255
    117a:	80 93 25 07 	sts	0x0725, r24	; 0x800725 <uxTaskNumber>
    117e:	f3 01       	movw	r30, r6
    1180:	86 89       	ldd	r24, Z+22	; 0x16
    1182:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    1186:	98 17       	cp	r25, r24
    1188:	10 f4       	brcc	.+4      	; 0x118e <xTaskGenericCreate+0x1ba>
    118a:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	9c 01       	movw	r18, r24
    1192:	22 0f       	add	r18, r18
    1194:	33 1f       	adc	r19, r19
    1196:	22 0f       	add	r18, r18
    1198:	33 1f       	adc	r19, r19
    119a:	22 0f       	add	r18, r18
    119c:	33 1f       	adc	r19, r19
    119e:	82 0f       	add	r24, r18
    11a0:	93 1f       	adc	r25, r19
    11a2:	be 01       	movw	r22, r28
    11a4:	8e 59       	subi	r24, 0x9E	; 158
    11a6:	98 4f       	sbci	r25, 0xF8	; 248
    11a8:	0e 94 87 02 	call	0x50e	; 0x50e <vListInsertEnd>
    11ac:	0f 90       	pop	r0
    11ae:	0f be       	out	0x3f, r0	; 63
    11b0:	80 91 29 07 	lds	r24, 0x0729	; 0x800729 <xSchedulerRunning>
    11b4:	88 23       	and	r24, r24
    11b6:	59 f0       	breq	.+22     	; 0x11ce <xTaskGenericCreate+0x1fa>
    11b8:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    11bc:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    11c0:	86 89       	ldd	r24, Z+22	; 0x16
    11c2:	80 17       	cp	r24, r16
    11c4:	30 f4       	brcc	.+12     	; 0x11d2 <xTaskGenericCreate+0x1fe>
    11c6:	0e 94 a5 03 	call	0x74a	; 0x74a <vPortYield>
    11ca:	81 e0       	ldi	r24, 0x01	; 1
    11cc:	05 c0       	rjmp	.+10     	; 0x11d8 <xTaskGenericCreate+0x204>
    11ce:	81 e0       	ldi	r24, 0x01	; 1
    11d0:	03 c0       	rjmp	.+6      	; 0x11d8 <xTaskGenericCreate+0x204>
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	01 c0       	rjmp	.+2      	; 0x11d8 <xTaskGenericCreate+0x204>
    11d6:	8f ef       	ldi	r24, 0xFF	; 255
    11d8:	df 91       	pop	r29
    11da:	cf 91       	pop	r28
    11dc:	1f 91       	pop	r17
    11de:	0f 91       	pop	r16
    11e0:	ff 90       	pop	r15
    11e2:	ef 90       	pop	r14
    11e4:	df 90       	pop	r13
    11e6:	cf 90       	pop	r12
    11e8:	bf 90       	pop	r11
    11ea:	af 90       	pop	r10
    11ec:	9f 90       	pop	r9
    11ee:	8f 90       	pop	r8
    11f0:	7f 90       	pop	r7
    11f2:	6f 90       	pop	r6
    11f4:	5f 90       	pop	r5
    11f6:	4f 90       	pop	r4
    11f8:	08 95       	ret

000011fa <vTaskResume>:
    11fa:	0f 93       	push	r16
    11fc:	1f 93       	push	r17
    11fe:	cf 93       	push	r28
    1200:	df 93       	push	r29
    1202:	00 97       	sbiw	r24, 0x00	; 0
    1204:	09 f4       	brne	.+2      	; 0x1208 <vTaskResume+0xe>
    1206:	43 c0       	rjmp	.+134    	; 0x128e <vTaskResume+0x94>
    1208:	20 91 86 07 	lds	r18, 0x0786	; 0x800786 <pxCurrentTCB>
    120c:	30 91 87 07 	lds	r19, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1210:	82 17       	cp	r24, r18
    1212:	93 07       	cpc	r25, r19
    1214:	09 f4       	brne	.+2      	; 0x1218 <vTaskResume+0x1e>
    1216:	3b c0       	rjmp	.+118    	; 0x128e <vTaskResume+0x94>
    1218:	0f b6       	in	r0, 0x3f	; 63
    121a:	f8 94       	cli
    121c:	0f 92       	push	r0
    121e:	fc 01       	movw	r30, r24
    1220:	22 85       	ldd	r18, Z+10	; 0x0a
    1222:	33 85       	ldd	r19, Z+11	; 0x0b
    1224:	20 53       	subi	r18, 0x30	; 48
    1226:	37 40       	sbci	r19, 0x07	; 7
    1228:	81 f5       	brne	.+96     	; 0x128a <vTaskResume+0x90>
    122a:	fc 01       	movw	r30, r24
    122c:	24 89       	ldd	r18, Z+20	; 0x14
    122e:	35 89       	ldd	r19, Z+21	; 0x15
    1230:	f7 e0       	ldi	r31, 0x07	; 7
    1232:	23 34       	cpi	r18, 0x43	; 67
    1234:	3f 07       	cpc	r19, r31
    1236:	49 f1       	breq	.+82     	; 0x128a <vTaskResume+0x90>
    1238:	23 2b       	or	r18, r19
    123a:	39 f5       	brne	.+78     	; 0x128a <vTaskResume+0x90>
    123c:	ec 01       	movw	r28, r24
    123e:	8c 01       	movw	r16, r24
    1240:	0e 5f       	subi	r16, 0xFE	; 254
    1242:	1f 4f       	sbci	r17, 0xFF	; 255
    1244:	c8 01       	movw	r24, r16
    1246:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    124a:	8e 89       	ldd	r24, Y+22	; 0x16
    124c:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    1250:	98 17       	cp	r25, r24
    1252:	10 f4       	brcc	.+4      	; 0x1258 <vTaskResume+0x5e>
    1254:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	9c 01       	movw	r18, r24
    125c:	22 0f       	add	r18, r18
    125e:	33 1f       	adc	r19, r19
    1260:	22 0f       	add	r18, r18
    1262:	33 1f       	adc	r19, r19
    1264:	22 0f       	add	r18, r18
    1266:	33 1f       	adc	r19, r19
    1268:	82 0f       	add	r24, r18
    126a:	93 1f       	adc	r25, r19
    126c:	b8 01       	movw	r22, r16
    126e:	8e 59       	subi	r24, 0x9E	; 158
    1270:	98 4f       	sbci	r25, 0xF8	; 248
    1272:	0e 94 87 02 	call	0x50e	; 0x50e <vListInsertEnd>
    1276:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    127a:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    127e:	9e 89       	ldd	r25, Y+22	; 0x16
    1280:	86 89       	ldd	r24, Z+22	; 0x16
    1282:	98 17       	cp	r25, r24
    1284:	10 f0       	brcs	.+4      	; 0x128a <vTaskResume+0x90>
    1286:	0e 94 a5 03 	call	0x74a	; 0x74a <vPortYield>
    128a:	0f 90       	pop	r0
    128c:	0f be       	out	0x3f, r0	; 63
    128e:	df 91       	pop	r29
    1290:	cf 91       	pop	r28
    1292:	1f 91       	pop	r17
    1294:	0f 91       	pop	r16
    1296:	08 95       	ret

00001298 <xTaskResumeFromISR>:
    1298:	ef 92       	push	r14
    129a:	ff 92       	push	r15
    129c:	1f 93       	push	r17
    129e:	cf 93       	push	r28
    12a0:	df 93       	push	r29
    12a2:	fc 01       	movw	r30, r24
    12a4:	22 85       	ldd	r18, Z+10	; 0x0a
    12a6:	33 85       	ldd	r19, Z+11	; 0x0b
    12a8:	20 53       	subi	r18, 0x30	; 48
    12aa:	37 40       	sbci	r19, 0x07	; 7
    12ac:	09 f0       	breq	.+2      	; 0x12b0 <xTaskResumeFromISR+0x18>
    12ae:	49 c0       	rjmp	.+146    	; 0x1342 <xTaskResumeFromISR+0xaa>
    12b0:	fc 01       	movw	r30, r24
    12b2:	24 89       	ldd	r18, Z+20	; 0x14
    12b4:	35 89       	ldd	r19, Z+21	; 0x15
    12b6:	f7 e0       	ldi	r31, 0x07	; 7
    12b8:	23 34       	cpi	r18, 0x43	; 67
    12ba:	3f 07       	cpc	r19, r31
    12bc:	09 f4       	brne	.+2      	; 0x12c0 <xTaskResumeFromISR+0x28>
    12be:	43 c0       	rjmp	.+134    	; 0x1346 <xTaskResumeFromISR+0xae>
    12c0:	23 2b       	or	r18, r19
    12c2:	09 f0       	breq	.+2      	; 0x12c6 <xTaskResumeFromISR+0x2e>
    12c4:	42 c0       	rjmp	.+132    	; 0x134a <xTaskResumeFromISR+0xb2>
    12c6:	ec 01       	movw	r28, r24
    12c8:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    12cc:	81 11       	cpse	r24, r1
    12ce:	2c c0       	rjmp	.+88     	; 0x1328 <xTaskResumeFromISR+0x90>
    12d0:	8d e2       	ldi	r24, 0x2D	; 45
    12d2:	91 e0       	ldi	r25, 0x01	; 1
    12d4:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <USART_sendstr>
    12d8:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    12dc:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    12e0:	11 e0       	ldi	r17, 0x01	; 1
    12e2:	9e 89       	ldd	r25, Y+22	; 0x16
    12e4:	86 89       	ldd	r24, Z+22	; 0x16
    12e6:	98 17       	cp	r25, r24
    12e8:	08 f4       	brcc	.+2      	; 0x12ec <xTaskResumeFromISR+0x54>
    12ea:	10 e0       	ldi	r17, 0x00	; 0
    12ec:	7e 01       	movw	r14, r28
    12ee:	42 e0       	ldi	r20, 0x02	; 2
    12f0:	e4 0e       	add	r14, r20
    12f2:	f1 1c       	adc	r15, r1
    12f4:	c7 01       	movw	r24, r14
    12f6:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    12fa:	8e 89       	ldd	r24, Y+22	; 0x16
    12fc:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    1300:	98 17       	cp	r25, r24
    1302:	10 f4       	brcc	.+4      	; 0x1308 <xTaskResumeFromISR+0x70>
    1304:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	9c 01       	movw	r18, r24
    130c:	22 0f       	add	r18, r18
    130e:	33 1f       	adc	r19, r19
    1310:	22 0f       	add	r18, r18
    1312:	33 1f       	adc	r19, r19
    1314:	22 0f       	add	r18, r18
    1316:	33 1f       	adc	r19, r19
    1318:	82 0f       	add	r24, r18
    131a:	93 1f       	adc	r25, r19
    131c:	b7 01       	movw	r22, r14
    131e:	8e 59       	subi	r24, 0x9E	; 158
    1320:	98 4f       	sbci	r25, 0xF8	; 248
    1322:	0e 94 87 02 	call	0x50e	; 0x50e <vListInsertEnd>
    1326:	12 c0       	rjmp	.+36     	; 0x134c <xTaskResumeFromISR+0xb4>
    1328:	82 e3       	ldi	r24, 0x32	; 50
    132a:	91 e0       	ldi	r25, 0x01	; 1
    132c:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <USART_sendstr>
    1330:	be 01       	movw	r22, r28
    1332:	64 5f       	subi	r22, 0xF4	; 244
    1334:	7f 4f       	sbci	r23, 0xFF	; 255
    1336:	83 e4       	ldi	r24, 0x43	; 67
    1338:	97 e0       	ldi	r25, 0x07	; 7
    133a:	0e 94 87 02 	call	0x50e	; 0x50e <vListInsertEnd>
    133e:	10 e0       	ldi	r17, 0x00	; 0
    1340:	05 c0       	rjmp	.+10     	; 0x134c <xTaskResumeFromISR+0xb4>
    1342:	10 e0       	ldi	r17, 0x00	; 0
    1344:	03 c0       	rjmp	.+6      	; 0x134c <xTaskResumeFromISR+0xb4>
    1346:	10 e0       	ldi	r17, 0x00	; 0
    1348:	01 c0       	rjmp	.+2      	; 0x134c <xTaskResumeFromISR+0xb4>
    134a:	10 e0       	ldi	r17, 0x00	; 0
    134c:	81 2f       	mov	r24, r17
    134e:	df 91       	pop	r29
    1350:	cf 91       	pop	r28
    1352:	1f 91       	pop	r17
    1354:	ff 90       	pop	r15
    1356:	ef 90       	pop	r14
    1358:	08 95       	ret

0000135a <vTaskStartScheduler>:
    135a:	af 92       	push	r10
    135c:	bf 92       	push	r11
    135e:	cf 92       	push	r12
    1360:	df 92       	push	r13
    1362:	ef 92       	push	r14
    1364:	ff 92       	push	r15
    1366:	0f 93       	push	r16
    1368:	a1 2c       	mov	r10, r1
    136a:	b1 2c       	mov	r11, r1
    136c:	c1 2c       	mov	r12, r1
    136e:	d1 2c       	mov	r13, r1
    1370:	0f 2e       	mov	r0, r31
    1372:	fe e2       	ldi	r31, 0x2E	; 46
    1374:	ef 2e       	mov	r14, r31
    1376:	f7 e0       	ldi	r31, 0x07	; 7
    1378:	ff 2e       	mov	r15, r31
    137a:	f0 2d       	mov	r31, r0
    137c:	00 e0       	ldi	r16, 0x00	; 0
    137e:	20 e0       	ldi	r18, 0x00	; 0
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	45 e5       	ldi	r20, 0x55	; 85
    1384:	50 e0       	ldi	r21, 0x00	; 0
    1386:	68 e3       	ldi	r22, 0x38	; 56
    1388:	71 e0       	ldi	r23, 0x01	; 1
    138a:	81 e4       	ldi	r24, 0x41	; 65
    138c:	9b e0       	ldi	r25, 0x0B	; 11
    138e:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <xTaskGenericCreate>
    1392:	81 30       	cpi	r24, 0x01	; 1
    1394:	49 f4       	brne	.+18     	; 0x13a8 <vTaskStartScheduler+0x4e>
    1396:	f8 94       	cli
    1398:	80 93 29 07 	sts	0x0729, r24	; 0x800729 <xSchedulerRunning>
    139c:	10 92 2c 07 	sts	0x072C, r1	; 0x80072c <xTickCount+0x1>
    13a0:	10 92 2b 07 	sts	0x072B, r1	; 0x80072b <xTickCount>
    13a4:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <xPortStartScheduler>
    13a8:	0f 91       	pop	r16
    13aa:	ff 90       	pop	r15
    13ac:	ef 90       	pop	r14
    13ae:	df 90       	pop	r13
    13b0:	cf 90       	pop	r12
    13b2:	bf 90       	pop	r11
    13b4:	af 90       	pop	r10
    13b6:	08 95       	ret

000013b8 <vTaskSuspendAll>:
    13b8:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    13bc:	8f 5f       	subi	r24, 0xFF	; 255
    13be:	80 93 24 07 	sts	0x0724, r24	; 0x800724 <uxSchedulerSuspended>
    13c2:	08 95       	ret

000013c4 <xTaskIncrementTick>:
    13c4:	cf 92       	push	r12
    13c6:	df 92       	push	r13
    13c8:	ef 92       	push	r14
    13ca:	ff 92       	push	r15
    13cc:	0f 93       	push	r16
    13ce:	1f 93       	push	r17
    13d0:	cf 93       	push	r28
    13d2:	df 93       	push	r29
    13d4:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    13d8:	81 11       	cpse	r24, r1
    13da:	9b c0       	rjmp	.+310    	; 0x1512 <xTaskIncrementTick+0x14e>
    13dc:	80 91 2b 07 	lds	r24, 0x072B	; 0x80072b <xTickCount>
    13e0:	90 91 2c 07 	lds	r25, 0x072C	; 0x80072c <xTickCount+0x1>
    13e4:	01 96       	adiw	r24, 0x01	; 1
    13e6:	90 93 2c 07 	sts	0x072C, r25	; 0x80072c <xTickCount+0x1>
    13ea:	80 93 2b 07 	sts	0x072B, r24	; 0x80072b <xTickCount>
    13ee:	e0 90 2b 07 	lds	r14, 0x072B	; 0x80072b <xTickCount>
    13f2:	f0 90 2c 07 	lds	r15, 0x072C	; 0x80072c <xTickCount+0x1>
    13f6:	e1 14       	cp	r14, r1
    13f8:	f1 04       	cpc	r15, r1
    13fa:	b9 f4       	brne	.+46     	; 0x142a <xTaskIncrementTick+0x66>
    13fc:	80 91 4e 07 	lds	r24, 0x074E	; 0x80074e <pxDelayedTaskList>
    1400:	90 91 4f 07 	lds	r25, 0x074F	; 0x80074f <pxDelayedTaskList+0x1>
    1404:	20 91 4c 07 	lds	r18, 0x074C	; 0x80074c <pxOverflowDelayedTaskList>
    1408:	30 91 4d 07 	lds	r19, 0x074D	; 0x80074d <pxOverflowDelayedTaskList+0x1>
    140c:	30 93 4f 07 	sts	0x074F, r19	; 0x80074f <pxDelayedTaskList+0x1>
    1410:	20 93 4e 07 	sts	0x074E, r18	; 0x80074e <pxDelayedTaskList>
    1414:	90 93 4d 07 	sts	0x074D, r25	; 0x80074d <pxOverflowDelayedTaskList+0x1>
    1418:	80 93 4c 07 	sts	0x074C, r24	; 0x80074c <pxOverflowDelayedTaskList>
    141c:	80 91 26 07 	lds	r24, 0x0726	; 0x800726 <xNumOfOverflows>
    1420:	8f 5f       	subi	r24, 0xFF	; 255
    1422:	80 93 26 07 	sts	0x0726, r24	; 0x800726 <xNumOfOverflows>
    1426:	0e 94 94 07 	call	0xf28	; 0xf28 <prvResetNextTaskUnblockTime>
    142a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <xNextTaskUnblockTime>
    142e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <xNextTaskUnblockTime+0x1>
    1432:	e8 16       	cp	r14, r24
    1434:	f9 06       	cpc	r15, r25
    1436:	10 f4       	brcc	.+4      	; 0x143c <xTaskIncrementTick+0x78>
    1438:	d1 2c       	mov	r13, r1
    143a:	53 c0       	rjmp	.+166    	; 0x14e2 <xTaskIncrementTick+0x11e>
    143c:	d1 2c       	mov	r13, r1
    143e:	cc 24       	eor	r12, r12
    1440:	c3 94       	inc	r12
    1442:	e0 91 4e 07 	lds	r30, 0x074E	; 0x80074e <pxDelayedTaskList>
    1446:	f0 91 4f 07 	lds	r31, 0x074F	; 0x80074f <pxDelayedTaskList+0x1>
    144a:	80 81       	ld	r24, Z
    144c:	81 11       	cpse	r24, r1
    144e:	07 c0       	rjmp	.+14     	; 0x145e <xTaskIncrementTick+0x9a>
    1450:	8f ef       	ldi	r24, 0xFF	; 255
    1452:	9f ef       	ldi	r25, 0xFF	; 255
    1454:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    1458:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    145c:	42 c0       	rjmp	.+132    	; 0x14e2 <xTaskIncrementTick+0x11e>
    145e:	e0 91 4e 07 	lds	r30, 0x074E	; 0x80074e <pxDelayedTaskList>
    1462:	f0 91 4f 07 	lds	r31, 0x074F	; 0x80074f <pxDelayedTaskList+0x1>
    1466:	05 80       	ldd	r0, Z+5	; 0x05
    1468:	f6 81       	ldd	r31, Z+6	; 0x06
    146a:	e0 2d       	mov	r30, r0
    146c:	c6 81       	ldd	r28, Z+6	; 0x06
    146e:	d7 81       	ldd	r29, Z+7	; 0x07
    1470:	8a 81       	ldd	r24, Y+2	; 0x02
    1472:	9b 81       	ldd	r25, Y+3	; 0x03
    1474:	e8 16       	cp	r14, r24
    1476:	f9 06       	cpc	r15, r25
    1478:	28 f4       	brcc	.+10     	; 0x1484 <xTaskIncrementTick+0xc0>
    147a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    147e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    1482:	2f c0       	rjmp	.+94     	; 0x14e2 <xTaskIncrementTick+0x11e>
    1484:	8e 01       	movw	r16, r28
    1486:	0e 5f       	subi	r16, 0xFE	; 254
    1488:	1f 4f       	sbci	r17, 0xFF	; 255
    148a:	c8 01       	movw	r24, r16
    148c:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    1490:	8c 89       	ldd	r24, Y+20	; 0x14
    1492:	9d 89       	ldd	r25, Y+21	; 0x15
    1494:	89 2b       	or	r24, r25
    1496:	21 f0       	breq	.+8      	; 0x14a0 <xTaskIncrementTick+0xdc>
    1498:	ce 01       	movw	r24, r28
    149a:	0c 96       	adiw	r24, 0x0c	; 12
    149c:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    14a0:	8e 89       	ldd	r24, Y+22	; 0x16
    14a2:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    14a6:	98 17       	cp	r25, r24
    14a8:	10 f4       	brcc	.+4      	; 0x14ae <xTaskIncrementTick+0xea>
    14aa:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	9c 01       	movw	r18, r24
    14b2:	22 0f       	add	r18, r18
    14b4:	33 1f       	adc	r19, r19
    14b6:	22 0f       	add	r18, r18
    14b8:	33 1f       	adc	r19, r19
    14ba:	22 0f       	add	r18, r18
    14bc:	33 1f       	adc	r19, r19
    14be:	82 0f       	add	r24, r18
    14c0:	93 1f       	adc	r25, r19
    14c2:	b8 01       	movw	r22, r16
    14c4:	8e 59       	subi	r24, 0x9E	; 158
    14c6:	98 4f       	sbci	r25, 0xF8	; 248
    14c8:	0e 94 87 02 	call	0x50e	; 0x50e <vListInsertEnd>
    14cc:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    14d0:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    14d4:	9e 89       	ldd	r25, Y+22	; 0x16
    14d6:	86 89       	ldd	r24, Z+22	; 0x16
    14d8:	98 17       	cp	r25, r24
    14da:	08 f4       	brcc	.+2      	; 0x14de <xTaskIncrementTick+0x11a>
    14dc:	b2 cf       	rjmp	.-156    	; 0x1442 <xTaskIncrementTick+0x7e>
    14de:	dc 2c       	mov	r13, r12
    14e0:	b0 cf       	rjmp	.-160    	; 0x1442 <xTaskIncrementTick+0x7e>
    14e2:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    14e6:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    14ea:	86 89       	ldd	r24, Z+22	; 0x16
    14ec:	90 e0       	ldi	r25, 0x00	; 0
    14ee:	fc 01       	movw	r30, r24
    14f0:	ee 0f       	add	r30, r30
    14f2:	ff 1f       	adc	r31, r31
    14f4:	ee 0f       	add	r30, r30
    14f6:	ff 1f       	adc	r31, r31
    14f8:	ee 0f       	add	r30, r30
    14fa:	ff 1f       	adc	r31, r31
    14fc:	8e 0f       	add	r24, r30
    14fe:	9f 1f       	adc	r25, r31
    1500:	fc 01       	movw	r30, r24
    1502:	ee 59       	subi	r30, 0x9E	; 158
    1504:	f8 4f       	sbci	r31, 0xF8	; 248
    1506:	80 81       	ld	r24, Z
    1508:	82 30       	cpi	r24, 0x02	; 2
    150a:	48 f0       	brcs	.+18     	; 0x151e <xTaskIncrementTick+0x15a>
    150c:	dd 24       	eor	r13, r13
    150e:	d3 94       	inc	r13
    1510:	06 c0       	rjmp	.+12     	; 0x151e <xTaskIncrementTick+0x15a>
    1512:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <uxPendedTicks>
    1516:	8f 5f       	subi	r24, 0xFF	; 255
    1518:	80 93 28 07 	sts	0x0728, r24	; 0x800728 <uxPendedTicks>
    151c:	d1 2c       	mov	r13, r1
    151e:	80 91 27 07 	lds	r24, 0x0727	; 0x800727 <xYieldPending>
    1522:	88 23       	and	r24, r24
    1524:	11 f0       	breq	.+4      	; 0x152a <xTaskIncrementTick+0x166>
    1526:	dd 24       	eor	r13, r13
    1528:	d3 94       	inc	r13
    152a:	8d 2d       	mov	r24, r13
    152c:	df 91       	pop	r29
    152e:	cf 91       	pop	r28
    1530:	1f 91       	pop	r17
    1532:	0f 91       	pop	r16
    1534:	ff 90       	pop	r15
    1536:	ef 90       	pop	r14
    1538:	df 90       	pop	r13
    153a:	cf 90       	pop	r12
    153c:	08 95       	ret

0000153e <xTaskResumeAll>:
    153e:	df 92       	push	r13
    1540:	ef 92       	push	r14
    1542:	ff 92       	push	r15
    1544:	0f 93       	push	r16
    1546:	1f 93       	push	r17
    1548:	cf 93       	push	r28
    154a:	df 93       	push	r29
    154c:	0f b6       	in	r0, 0x3f	; 63
    154e:	f8 94       	cli
    1550:	0f 92       	push	r0
    1552:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    1556:	81 50       	subi	r24, 0x01	; 1
    1558:	80 93 24 07 	sts	0x0724, r24	; 0x800724 <uxSchedulerSuspended>
    155c:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    1560:	81 11       	cpse	r24, r1
    1562:	62 c0       	rjmp	.+196    	; 0x1628 <xTaskResumeAll+0xea>
    1564:	80 91 2d 07 	lds	r24, 0x072D	; 0x80072d <uxCurrentNumberOfTasks>
    1568:	81 11       	cpse	r24, r1
    156a:	33 c0       	rjmp	.+102    	; 0x15d2 <xTaskResumeAll+0x94>
    156c:	60 c0       	rjmp	.+192    	; 0x162e <xTaskResumeAll+0xf0>
    156e:	d7 01       	movw	r26, r14
    1570:	15 96       	adiw	r26, 0x05	; 5
    1572:	ed 91       	ld	r30, X+
    1574:	fc 91       	ld	r31, X
    1576:	16 97       	sbiw	r26, 0x06	; 6
    1578:	c6 81       	ldd	r28, Z+6	; 0x06
    157a:	d7 81       	ldd	r29, Z+7	; 0x07
    157c:	ce 01       	movw	r24, r28
    157e:	0c 96       	adiw	r24, 0x0c	; 12
    1580:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    1584:	8e 01       	movw	r16, r28
    1586:	0e 5f       	subi	r16, 0xFE	; 254
    1588:	1f 4f       	sbci	r17, 0xFF	; 255
    158a:	c8 01       	movw	r24, r16
    158c:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    1590:	8e 89       	ldd	r24, Y+22	; 0x16
    1592:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    1596:	98 17       	cp	r25, r24
    1598:	10 f4       	brcc	.+4      	; 0x159e <xTaskResumeAll+0x60>
    159a:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	9c 01       	movw	r18, r24
    15a2:	22 0f       	add	r18, r18
    15a4:	33 1f       	adc	r19, r19
    15a6:	22 0f       	add	r18, r18
    15a8:	33 1f       	adc	r19, r19
    15aa:	22 0f       	add	r18, r18
    15ac:	33 1f       	adc	r19, r19
    15ae:	82 0f       	add	r24, r18
    15b0:	93 1f       	adc	r25, r19
    15b2:	b8 01       	movw	r22, r16
    15b4:	8e 59       	subi	r24, 0x9E	; 158
    15b6:	98 4f       	sbci	r25, 0xF8	; 248
    15b8:	0e 94 87 02 	call	0x50e	; 0x50e <vListInsertEnd>
    15bc:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    15c0:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    15c4:	9e 89       	ldd	r25, Y+22	; 0x16
    15c6:	86 89       	ldd	r24, Z+22	; 0x16
    15c8:	98 17       	cp	r25, r24
    15ca:	58 f0       	brcs	.+22     	; 0x15e2 <xTaskResumeAll+0xa4>
    15cc:	d0 92 27 07 	sts	0x0727, r13	; 0x800727 <xYieldPending>
    15d0:	08 c0       	rjmp	.+16     	; 0x15e2 <xTaskResumeAll+0xa4>
    15d2:	0f 2e       	mov	r0, r31
    15d4:	f3 e4       	ldi	r31, 0x43	; 67
    15d6:	ef 2e       	mov	r14, r31
    15d8:	f7 e0       	ldi	r31, 0x07	; 7
    15da:	ff 2e       	mov	r15, r31
    15dc:	f0 2d       	mov	r31, r0
    15de:	dd 24       	eor	r13, r13
    15e0:	d3 94       	inc	r13
    15e2:	f7 01       	movw	r30, r14
    15e4:	80 81       	ld	r24, Z
    15e6:	81 11       	cpse	r24, r1
    15e8:	c2 cf       	rjmp	.-124    	; 0x156e <xTaskResumeAll+0x30>
    15ea:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <uxPendedTicks>
    15ee:	88 23       	and	r24, r24
    15f0:	99 f0       	breq	.+38     	; 0x1618 <xTaskResumeAll+0xda>
    15f2:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <uxPendedTicks>
    15f6:	88 23       	and	r24, r24
    15f8:	79 f0       	breq	.+30     	; 0x1618 <xTaskResumeAll+0xda>
    15fa:	c1 e0       	ldi	r28, 0x01	; 1
    15fc:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <xTaskIncrementTick>
    1600:	81 11       	cpse	r24, r1
    1602:	c0 93 27 07 	sts	0x0727, r28	; 0x800727 <xYieldPending>
    1606:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <uxPendedTicks>
    160a:	81 50       	subi	r24, 0x01	; 1
    160c:	80 93 28 07 	sts	0x0728, r24	; 0x800728 <uxPendedTicks>
    1610:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <uxPendedTicks>
    1614:	81 11       	cpse	r24, r1
    1616:	f2 cf       	rjmp	.-28     	; 0x15fc <xTaskResumeAll+0xbe>
    1618:	80 91 27 07 	lds	r24, 0x0727	; 0x800727 <xYieldPending>
    161c:	81 30       	cpi	r24, 0x01	; 1
    161e:	31 f4       	brne	.+12     	; 0x162c <xTaskResumeAll+0xee>
    1620:	0e 94 a5 03 	call	0x74a	; 0x74a <vPortYield>
    1624:	81 e0       	ldi	r24, 0x01	; 1
    1626:	03 c0       	rjmp	.+6      	; 0x162e <xTaskResumeAll+0xf0>
    1628:	80 e0       	ldi	r24, 0x00	; 0
    162a:	01 c0       	rjmp	.+2      	; 0x162e <xTaskResumeAll+0xf0>
    162c:	80 e0       	ldi	r24, 0x00	; 0
    162e:	0f 90       	pop	r0
    1630:	0f be       	out	0x3f, r0	; 63
    1632:	df 91       	pop	r29
    1634:	cf 91       	pop	r28
    1636:	1f 91       	pop	r17
    1638:	0f 91       	pop	r16
    163a:	ff 90       	pop	r15
    163c:	ef 90       	pop	r14
    163e:	df 90       	pop	r13
    1640:	08 95       	ret

00001642 <vTaskDelay>:
    1642:	cf 93       	push	r28
    1644:	df 93       	push	r29
    1646:	ec 01       	movw	r28, r24
    1648:	89 2b       	or	r24, r25
    164a:	b1 f0       	breq	.+44     	; 0x1678 <vTaskDelay+0x36>
    164c:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <vTaskSuspendAll>
    1650:	80 91 2b 07 	lds	r24, 0x072B	; 0x80072b <xTickCount>
    1654:	90 91 2c 07 	lds	r25, 0x072C	; 0x80072c <xTickCount+0x1>
    1658:	c8 0f       	add	r28, r24
    165a:	d9 1f       	adc	r29, r25
    165c:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <pxCurrentTCB>
    1660:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1664:	02 96       	adiw	r24, 0x02	; 2
    1666:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    166a:	ce 01       	movw	r24, r28
    166c:	0e 94 b3 07 	call	0xf66	; 0xf66 <prvAddCurrentTaskToDelayedList>
    1670:	0e 94 9f 0a 	call	0x153e	; 0x153e <xTaskResumeAll>
    1674:	81 11       	cpse	r24, r1
    1676:	02 c0       	rjmp	.+4      	; 0x167c <vTaskDelay+0x3a>
    1678:	0e 94 a5 03 	call	0x74a	; 0x74a <vPortYield>
    167c:	df 91       	pop	r29
    167e:	cf 91       	pop	r28
    1680:	08 95       	ret

00001682 <prvIdleTask>:
    1682:	0a e3       	ldi	r16, 0x3A	; 58
    1684:	17 e0       	ldi	r17, 0x07	; 7
    1686:	0f 2e       	mov	r0, r31
    1688:	f2 e6       	ldi	r31, 0x62	; 98
    168a:	ef 2e       	mov	r14, r31
    168c:	f7 e0       	ldi	r31, 0x07	; 7
    168e:	ff 2e       	mov	r15, r31
    1690:	f0 2d       	mov	r31, r0
    1692:	29 c0       	rjmp	.+82     	; 0x16e6 <prvIdleTask+0x64>
    1694:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <vTaskSuspendAll>
    1698:	d8 01       	movw	r26, r16
    169a:	cc 91       	ld	r28, X
    169c:	0e 94 9f 0a 	call	0x153e	; 0x153e <xTaskResumeAll>
    16a0:	cc 23       	and	r28, r28
    16a2:	09 f1       	breq	.+66     	; 0x16e6 <prvIdleTask+0x64>
    16a4:	0f b6       	in	r0, 0x3f	; 63
    16a6:	f8 94       	cli
    16a8:	0f 92       	push	r0
    16aa:	d8 01       	movw	r26, r16
    16ac:	15 96       	adiw	r26, 0x05	; 5
    16ae:	ed 91       	ld	r30, X+
    16b0:	fc 91       	ld	r31, X
    16b2:	16 97       	sbiw	r26, 0x06	; 6
    16b4:	c6 81       	ldd	r28, Z+6	; 0x06
    16b6:	d7 81       	ldd	r29, Z+7	; 0x07
    16b8:	ce 01       	movw	r24, r28
    16ba:	02 96       	adiw	r24, 0x02	; 2
    16bc:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    16c0:	80 91 2d 07 	lds	r24, 0x072D	; 0x80072d <uxCurrentNumberOfTasks>
    16c4:	81 50       	subi	r24, 0x01	; 1
    16c6:	80 93 2d 07 	sts	0x072D, r24	; 0x80072d <uxCurrentNumberOfTasks>
    16ca:	80 91 39 07 	lds	r24, 0x0739	; 0x800739 <uxTasksDeleted>
    16ce:	81 50       	subi	r24, 0x01	; 1
    16d0:	80 93 39 07 	sts	0x0739, r24	; 0x800739 <uxTasksDeleted>
    16d4:	0f 90       	pop	r0
    16d6:	0f be       	out	0x3f, r0	; 63
    16d8:	8f 89       	ldd	r24, Y+23	; 0x17
    16da:	98 8d       	ldd	r25, Y+24	; 0x18
    16dc:	0e 94 f7 04 	call	0x9ee	; 0x9ee <vPortFree>
    16e0:	ce 01       	movw	r24, r28
    16e2:	0e 94 f7 04 	call	0x9ee	; 0x9ee <vPortFree>
    16e6:	80 91 39 07 	lds	r24, 0x0739	; 0x800739 <uxTasksDeleted>
    16ea:	81 11       	cpse	r24, r1
    16ec:	d3 cf       	rjmp	.-90     	; 0x1694 <prvIdleTask+0x12>
    16ee:	f7 01       	movw	r30, r14
    16f0:	80 81       	ld	r24, Z
    16f2:	82 30       	cpi	r24, 0x02	; 2
    16f4:	c0 f3       	brcs	.-16     	; 0x16e6 <prvIdleTask+0x64>
    16f6:	0e 94 a5 03 	call	0x74a	; 0x74a <vPortYield>
    16fa:	f5 cf       	rjmp	.-22     	; 0x16e6 <prvIdleTask+0x64>

000016fc <vTaskSwitchContext>:
    16fc:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    1700:	88 23       	and	r24, r24
    1702:	21 f0       	breq	.+8      	; 0x170c <vTaskSwitchContext+0x10>
    1704:	81 e0       	ldi	r24, 0x01	; 1
    1706:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <xYieldPending>
    170a:	08 95       	ret
    170c:	10 92 27 07 	sts	0x0727, r1	; 0x800727 <xYieldPending>
    1710:	80 91 2a 07 	lds	r24, 0x072A	; 0x80072a <uxTopReadyPriority>
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	fc 01       	movw	r30, r24
    1718:	ee 0f       	add	r30, r30
    171a:	ff 1f       	adc	r31, r31
    171c:	ee 0f       	add	r30, r30
    171e:	ff 1f       	adc	r31, r31
    1720:	ee 0f       	add	r30, r30
    1722:	ff 1f       	adc	r31, r31
    1724:	8e 0f       	add	r24, r30
    1726:	9f 1f       	adc	r25, r31
    1728:	fc 01       	movw	r30, r24
    172a:	ee 59       	subi	r30, 0x9E	; 158
    172c:	f8 4f       	sbci	r31, 0xF8	; 248
    172e:	80 81       	ld	r24, Z
    1730:	81 11       	cpse	r24, r1
    1732:	17 c0       	rjmp	.+46     	; 0x1762 <vTaskSwitchContext+0x66>
    1734:	80 91 2a 07 	lds	r24, 0x072A	; 0x80072a <uxTopReadyPriority>
    1738:	81 50       	subi	r24, 0x01	; 1
    173a:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    173e:	80 91 2a 07 	lds	r24, 0x072A	; 0x80072a <uxTopReadyPriority>
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	fc 01       	movw	r30, r24
    1746:	ee 0f       	add	r30, r30
    1748:	ff 1f       	adc	r31, r31
    174a:	ee 0f       	add	r30, r30
    174c:	ff 1f       	adc	r31, r31
    174e:	ee 0f       	add	r30, r30
    1750:	ff 1f       	adc	r31, r31
    1752:	8e 0f       	add	r24, r30
    1754:	9f 1f       	adc	r25, r31
    1756:	fc 01       	movw	r30, r24
    1758:	ee 59       	subi	r30, 0x9E	; 158
    175a:	f8 4f       	sbci	r31, 0xF8	; 248
    175c:	80 81       	ld	r24, Z
    175e:	88 23       	and	r24, r24
    1760:	49 f3       	breq	.-46     	; 0x1734 <vTaskSwitchContext+0x38>
    1762:	80 91 2a 07 	lds	r24, 0x072A	; 0x80072a <uxTopReadyPriority>
    1766:	90 e0       	ldi	r25, 0x00	; 0
    1768:	9c 01       	movw	r18, r24
    176a:	22 0f       	add	r18, r18
    176c:	33 1f       	adc	r19, r19
    176e:	22 0f       	add	r18, r18
    1770:	33 1f       	adc	r19, r19
    1772:	22 0f       	add	r18, r18
    1774:	33 1f       	adc	r19, r19
    1776:	28 0f       	add	r18, r24
    1778:	39 1f       	adc	r19, r25
    177a:	d9 01       	movw	r26, r18
    177c:	ae 59       	subi	r26, 0x9E	; 158
    177e:	b8 4f       	sbci	r27, 0xF8	; 248
    1780:	11 96       	adiw	r26, 0x01	; 1
    1782:	ed 91       	ld	r30, X+
    1784:	fc 91       	ld	r31, X
    1786:	12 97       	sbiw	r26, 0x02	; 2
    1788:	02 80       	ldd	r0, Z+2	; 0x02
    178a:	f3 81       	ldd	r31, Z+3	; 0x03
    178c:	e0 2d       	mov	r30, r0
    178e:	12 96       	adiw	r26, 0x02	; 2
    1790:	fc 93       	st	X, r31
    1792:	ee 93       	st	-X, r30
    1794:	11 97       	sbiw	r26, 0x01	; 1
    1796:	2b 59       	subi	r18, 0x9B	; 155
    1798:	38 4f       	sbci	r19, 0xF8	; 248
    179a:	e2 17       	cp	r30, r18
    179c:	f3 07       	cpc	r31, r19
    179e:	29 f4       	brne	.+10     	; 0x17aa <vTaskSwitchContext+0xae>
    17a0:	22 81       	ldd	r18, Z+2	; 0x02
    17a2:	33 81       	ldd	r19, Z+3	; 0x03
    17a4:	fd 01       	movw	r30, r26
    17a6:	32 83       	std	Z+2, r19	; 0x02
    17a8:	21 83       	std	Z+1, r18	; 0x01
    17aa:	fc 01       	movw	r30, r24
    17ac:	ee 0f       	add	r30, r30
    17ae:	ff 1f       	adc	r31, r31
    17b0:	ee 0f       	add	r30, r30
    17b2:	ff 1f       	adc	r31, r31
    17b4:	ee 0f       	add	r30, r30
    17b6:	ff 1f       	adc	r31, r31
    17b8:	8e 0f       	add	r24, r30
    17ba:	9f 1f       	adc	r25, r31
    17bc:	fc 01       	movw	r30, r24
    17be:	ee 59       	subi	r30, 0x9E	; 158
    17c0:	f8 4f       	sbci	r31, 0xF8	; 248
    17c2:	01 80       	ldd	r0, Z+1	; 0x01
    17c4:	f2 81       	ldd	r31, Z+2	; 0x02
    17c6:	e0 2d       	mov	r30, r0
    17c8:	86 81       	ldd	r24, Z+6	; 0x06
    17ca:	97 81       	ldd	r25, Z+7	; 0x07
    17cc:	90 93 87 07 	sts	0x0787, r25	; 0x800787 <pxCurrentTCB+0x1>
    17d0:	80 93 86 07 	sts	0x0786, r24	; 0x800786 <pxCurrentTCB>
    17d4:	08 95       	ret

000017d6 <vTaskSuspend>:
    17d6:	0f 93       	push	r16
    17d8:	1f 93       	push	r17
    17da:	cf 93       	push	r28
    17dc:	df 93       	push	r29
    17de:	ec 01       	movw	r28, r24
    17e0:	0f b6       	in	r0, 0x3f	; 63
    17e2:	f8 94       	cli
    17e4:	0f 92       	push	r0
    17e6:	89 2b       	or	r24, r25
    17e8:	21 f4       	brne	.+8      	; 0x17f2 <vTaskSuspend+0x1c>
    17ea:	c0 91 86 07 	lds	r28, 0x0786	; 0x800786 <pxCurrentTCB>
    17ee:	d0 91 87 07 	lds	r29, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    17f2:	8e 01       	movw	r16, r28
    17f4:	0e 5f       	subi	r16, 0xFE	; 254
    17f6:	1f 4f       	sbci	r17, 0xFF	; 255
    17f8:	c8 01       	movw	r24, r16
    17fa:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    17fe:	8c 89       	ldd	r24, Y+20	; 0x14
    1800:	9d 89       	ldd	r25, Y+21	; 0x15
    1802:	89 2b       	or	r24, r25
    1804:	21 f0       	breq	.+8      	; 0x180e <vTaskSuspend+0x38>
    1806:	ce 01       	movw	r24, r28
    1808:	0c 96       	adiw	r24, 0x0c	; 12
    180a:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    180e:	b8 01       	movw	r22, r16
    1810:	80 e3       	ldi	r24, 0x30	; 48
    1812:	97 e0       	ldi	r25, 0x07	; 7
    1814:	0e 94 87 02 	call	0x50e	; 0x50e <vListInsertEnd>
    1818:	0f 90       	pop	r0
    181a:	0f be       	out	0x3f, r0	; 63
    181c:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <pxCurrentTCB>
    1820:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1824:	c8 17       	cp	r28, r24
    1826:	d9 07       	cpc	r29, r25
    1828:	a9 f4       	brne	.+42     	; 0x1854 <vTaskSuspend+0x7e>
    182a:	80 91 29 07 	lds	r24, 0x0729	; 0x800729 <xSchedulerRunning>
    182e:	88 23       	and	r24, r24
    1830:	19 f0       	breq	.+6      	; 0x1838 <vTaskSuspend+0x62>
    1832:	0e 94 a5 03 	call	0x74a	; 0x74a <vPortYield>
    1836:	19 c0       	rjmp	.+50     	; 0x186a <vTaskSuspend+0x94>
    1838:	80 91 2d 07 	lds	r24, 0x072D	; 0x80072d <uxCurrentNumberOfTasks>
    183c:	90 91 30 07 	lds	r25, 0x0730	; 0x800730 <xSuspendedTaskList>
    1840:	98 13       	cpse	r25, r24
    1842:	05 c0       	rjmp	.+10     	; 0x184e <vTaskSuspend+0x78>
    1844:	10 92 87 07 	sts	0x0787, r1	; 0x800787 <pxCurrentTCB+0x1>
    1848:	10 92 86 07 	sts	0x0786, r1	; 0x800786 <pxCurrentTCB>
    184c:	0e c0       	rjmp	.+28     	; 0x186a <vTaskSuspend+0x94>
    184e:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <vTaskSwitchContext>
    1852:	0b c0       	rjmp	.+22     	; 0x186a <vTaskSuspend+0x94>
    1854:	80 91 29 07 	lds	r24, 0x0729	; 0x800729 <xSchedulerRunning>
    1858:	88 23       	and	r24, r24
    185a:	39 f0       	breq	.+14     	; 0x186a <vTaskSuspend+0x94>
    185c:	0f b6       	in	r0, 0x3f	; 63
    185e:	f8 94       	cli
    1860:	0f 92       	push	r0
    1862:	0e 94 94 07 	call	0xf28	; 0xf28 <prvResetNextTaskUnblockTime>
    1866:	0f 90       	pop	r0
    1868:	0f be       	out	0x3f, r0	; 63
    186a:	df 91       	pop	r29
    186c:	cf 91       	pop	r28
    186e:	1f 91       	pop	r17
    1870:	0f 91       	pop	r16
    1872:	08 95       	ret

00001874 <vTaskPlaceOnEventList>:
    1874:	cf 93       	push	r28
    1876:	df 93       	push	r29
    1878:	eb 01       	movw	r28, r22
    187a:	60 91 86 07 	lds	r22, 0x0786	; 0x800786 <pxCurrentTCB>
    187e:	70 91 87 07 	lds	r23, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1882:	64 5f       	subi	r22, 0xF4	; 244
    1884:	7f 4f       	sbci	r23, 0xFF	; 255
    1886:	0e 94 a8 02 	call	0x550	; 0x550 <vListInsert>
    188a:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <pxCurrentTCB>
    188e:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1892:	02 96       	adiw	r24, 0x02	; 2
    1894:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    1898:	cf 3f       	cpi	r28, 0xFF	; 255
    189a:	8f ef       	ldi	r24, 0xFF	; 255
    189c:	d8 07       	cpc	r29, r24
    189e:	59 f4       	brne	.+22     	; 0x18b6 <vTaskPlaceOnEventList+0x42>
    18a0:	60 91 86 07 	lds	r22, 0x0786	; 0x800786 <pxCurrentTCB>
    18a4:	70 91 87 07 	lds	r23, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    18a8:	6e 5f       	subi	r22, 0xFE	; 254
    18aa:	7f 4f       	sbci	r23, 0xFF	; 255
    18ac:	80 e3       	ldi	r24, 0x30	; 48
    18ae:	97 e0       	ldi	r25, 0x07	; 7
    18b0:	0e 94 87 02 	call	0x50e	; 0x50e <vListInsertEnd>
    18b4:	08 c0       	rjmp	.+16     	; 0x18c6 <vTaskPlaceOnEventList+0x52>
    18b6:	80 91 2b 07 	lds	r24, 0x072B	; 0x80072b <xTickCount>
    18ba:	90 91 2c 07 	lds	r25, 0x072C	; 0x80072c <xTickCount+0x1>
    18be:	8c 0f       	add	r24, r28
    18c0:	9d 1f       	adc	r25, r29
    18c2:	0e 94 b3 07 	call	0xf66	; 0xf66 <prvAddCurrentTaskToDelayedList>
    18c6:	df 91       	pop	r29
    18c8:	cf 91       	pop	r28
    18ca:	08 95       	ret

000018cc <xTaskRemoveFromEventList>:
    18cc:	0f 93       	push	r16
    18ce:	1f 93       	push	r17
    18d0:	cf 93       	push	r28
    18d2:	df 93       	push	r29
    18d4:	dc 01       	movw	r26, r24
    18d6:	15 96       	adiw	r26, 0x05	; 5
    18d8:	ed 91       	ld	r30, X+
    18da:	fc 91       	ld	r31, X
    18dc:	16 97       	sbiw	r26, 0x06	; 6
    18de:	c6 81       	ldd	r28, Z+6	; 0x06
    18e0:	d7 81       	ldd	r29, Z+7	; 0x07
    18e2:	8e 01       	movw	r16, r28
    18e4:	04 5f       	subi	r16, 0xF4	; 244
    18e6:	1f 4f       	sbci	r17, 0xFF	; 255
    18e8:	c8 01       	movw	r24, r16
    18ea:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    18ee:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <uxSchedulerSuspended>
    18f2:	81 11       	cpse	r24, r1
    18f4:	1c c0       	rjmp	.+56     	; 0x192e <xTaskRemoveFromEventList+0x62>
    18f6:	0a 50       	subi	r16, 0x0A	; 10
    18f8:	11 09       	sbc	r17, r1
    18fa:	c8 01       	movw	r24, r16
    18fc:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    1900:	8e 89       	ldd	r24, Y+22	; 0x16
    1902:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    1906:	98 17       	cp	r25, r24
    1908:	10 f4       	brcc	.+4      	; 0x190e <xTaskRemoveFromEventList+0x42>
    190a:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	9c 01       	movw	r18, r24
    1912:	22 0f       	add	r18, r18
    1914:	33 1f       	adc	r19, r19
    1916:	22 0f       	add	r18, r18
    1918:	33 1f       	adc	r19, r19
    191a:	22 0f       	add	r18, r18
    191c:	33 1f       	adc	r19, r19
    191e:	82 0f       	add	r24, r18
    1920:	93 1f       	adc	r25, r19
    1922:	b8 01       	movw	r22, r16
    1924:	8e 59       	subi	r24, 0x9E	; 158
    1926:	98 4f       	sbci	r25, 0xF8	; 248
    1928:	0e 94 87 02 	call	0x50e	; 0x50e <vListInsertEnd>
    192c:	05 c0       	rjmp	.+10     	; 0x1938 <xTaskRemoveFromEventList+0x6c>
    192e:	b8 01       	movw	r22, r16
    1930:	83 e4       	ldi	r24, 0x43	; 67
    1932:	97 e0       	ldi	r25, 0x07	; 7
    1934:	0e 94 87 02 	call	0x50e	; 0x50e <vListInsertEnd>
    1938:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    193c:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1940:	9e 89       	ldd	r25, Y+22	; 0x16
    1942:	86 89       	ldd	r24, Z+22	; 0x16
    1944:	89 17       	cp	r24, r25
    1946:	20 f4       	brcc	.+8      	; 0x1950 <xTaskRemoveFromEventList+0x84>
    1948:	81 e0       	ldi	r24, 0x01	; 1
    194a:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <xYieldPending>
    194e:	01 c0       	rjmp	.+2      	; 0x1952 <xTaskRemoveFromEventList+0x86>
    1950:	80 e0       	ldi	r24, 0x00	; 0
    1952:	df 91       	pop	r29
    1954:	cf 91       	pop	r28
    1956:	1f 91       	pop	r17
    1958:	0f 91       	pop	r16
    195a:	08 95       	ret

0000195c <vTaskSetTimeOutState>:
    195c:	20 91 26 07 	lds	r18, 0x0726	; 0x800726 <xNumOfOverflows>
    1960:	fc 01       	movw	r30, r24
    1962:	20 83       	st	Z, r18
    1964:	20 91 2b 07 	lds	r18, 0x072B	; 0x80072b <xTickCount>
    1968:	30 91 2c 07 	lds	r19, 0x072C	; 0x80072c <xTickCount+0x1>
    196c:	32 83       	std	Z+2, r19	; 0x02
    196e:	21 83       	std	Z+1, r18	; 0x01
    1970:	08 95       	ret

00001972 <xTaskCheckForTimeOut>:
    1972:	0f b6       	in	r0, 0x3f	; 63
    1974:	f8 94       	cli
    1976:	0f 92       	push	r0
    1978:	40 91 2b 07 	lds	r20, 0x072B	; 0x80072b <xTickCount>
    197c:	50 91 2c 07 	lds	r21, 0x072C	; 0x80072c <xTickCount+0x1>
    1980:	db 01       	movw	r26, r22
    1982:	2d 91       	ld	r18, X+
    1984:	3c 91       	ld	r19, X
    1986:	2f 3f       	cpi	r18, 0xFF	; 255
    1988:	bf ef       	ldi	r27, 0xFF	; 255
    198a:	3b 07       	cpc	r19, r27
    198c:	19 f1       	breq	.+70     	; 0x19d4 <xTaskCheckForTimeOut+0x62>
    198e:	e0 91 26 07 	lds	r30, 0x0726	; 0x800726 <xNumOfOverflows>
    1992:	dc 01       	movw	r26, r24
    1994:	fc 91       	ld	r31, X
    1996:	fe 17       	cp	r31, r30
    1998:	39 f0       	breq	.+14     	; 0x19a8 <xTaskCheckForTimeOut+0x36>
    199a:	11 96       	adiw	r26, 0x01	; 1
    199c:	ed 91       	ld	r30, X+
    199e:	fc 91       	ld	r31, X
    19a0:	12 97       	sbiw	r26, 0x02	; 2
    19a2:	4e 17       	cp	r20, r30
    19a4:	5f 07       	cpc	r21, r31
    19a6:	c0 f4       	brcc	.+48     	; 0x19d8 <xTaskCheckForTimeOut+0x66>
    19a8:	dc 01       	movw	r26, r24
    19aa:	11 96       	adiw	r26, 0x01	; 1
    19ac:	ed 91       	ld	r30, X+
    19ae:	fc 91       	ld	r31, X
    19b0:	12 97       	sbiw	r26, 0x02	; 2
    19b2:	da 01       	movw	r26, r20
    19b4:	ae 1b       	sub	r26, r30
    19b6:	bf 0b       	sbc	r27, r31
    19b8:	a2 17       	cp	r26, r18
    19ba:	b3 07       	cpc	r27, r19
    19bc:	78 f4       	brcc	.+30     	; 0x19dc <xTaskCheckForTimeOut+0x6a>
    19be:	db 01       	movw	r26, r22
    19c0:	e4 1b       	sub	r30, r20
    19c2:	f5 0b       	sbc	r31, r21
    19c4:	2e 0f       	add	r18, r30
    19c6:	3f 1f       	adc	r19, r31
    19c8:	2d 93       	st	X+, r18
    19ca:	3c 93       	st	X, r19
    19cc:	0e 94 ae 0c 	call	0x195c	; 0x195c <vTaskSetTimeOutState>
    19d0:	80 e0       	ldi	r24, 0x00	; 0
    19d2:	05 c0       	rjmp	.+10     	; 0x19de <xTaskCheckForTimeOut+0x6c>
    19d4:	80 e0       	ldi	r24, 0x00	; 0
    19d6:	03 c0       	rjmp	.+6      	; 0x19de <xTaskCheckForTimeOut+0x6c>
    19d8:	81 e0       	ldi	r24, 0x01	; 1
    19da:	01 c0       	rjmp	.+2      	; 0x19de <xTaskCheckForTimeOut+0x6c>
    19dc:	81 e0       	ldi	r24, 0x01	; 1
    19de:	0f 90       	pop	r0
    19e0:	0f be       	out	0x3f, r0	; 63
    19e2:	08 95       	ret

000019e4 <vTaskMissedYield>:
    19e4:	81 e0       	ldi	r24, 0x01	; 1
    19e6:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <xYieldPending>
    19ea:	08 95       	ret

000019ec <vTaskPriorityInherit>:
    19ec:	0f 93       	push	r16
    19ee:	1f 93       	push	r17
    19f0:	cf 93       	push	r28
    19f2:	df 93       	push	r29
    19f4:	fc 01       	movw	r30, r24
    19f6:	89 2b       	or	r24, r25
    19f8:	09 f4       	brne	.+2      	; 0x19fc <vTaskPriorityInherit+0x10>
    19fa:	55 c0       	rjmp	.+170    	; 0x1aa6 <vTaskPriorityInherit+0xba>
    19fc:	26 89       	ldd	r18, Z+22	; 0x16
    19fe:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
    1a02:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1a06:	56 96       	adiw	r26, 0x16	; 22
    1a08:	8c 91       	ld	r24, X
    1a0a:	28 17       	cp	r18, r24
    1a0c:	08 f0       	brcs	.+2      	; 0x1a10 <vTaskPriorityInherit+0x24>
    1a0e:	4b c0       	rjmp	.+150    	; 0x1aa6 <vTaskPriorityInherit+0xba>
    1a10:	84 85       	ldd	r24, Z+12	; 0x0c
    1a12:	95 85       	ldd	r25, Z+13	; 0x0d
    1a14:	99 23       	and	r25, r25
    1a16:	64 f0       	brlt	.+24     	; 0x1a30 <vTaskPriorityInherit+0x44>
    1a18:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
    1a1c:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1a20:	56 96       	adiw	r26, 0x16	; 22
    1a22:	3c 91       	ld	r19, X
    1a24:	84 e0       	ldi	r24, 0x04	; 4
    1a26:	90 e0       	ldi	r25, 0x00	; 0
    1a28:	83 1b       	sub	r24, r19
    1a2a:	91 09       	sbc	r25, r1
    1a2c:	95 87       	std	Z+13, r25	; 0x0d
    1a2e:	84 87       	std	Z+12, r24	; 0x0c
    1a30:	30 e0       	ldi	r19, 0x00	; 0
    1a32:	c9 01       	movw	r24, r18
    1a34:	88 0f       	add	r24, r24
    1a36:	99 1f       	adc	r25, r25
    1a38:	88 0f       	add	r24, r24
    1a3a:	99 1f       	adc	r25, r25
    1a3c:	88 0f       	add	r24, r24
    1a3e:	99 1f       	adc	r25, r25
    1a40:	28 0f       	add	r18, r24
    1a42:	39 1f       	adc	r19, r25
    1a44:	2e 59       	subi	r18, 0x9E	; 158
    1a46:	38 4f       	sbci	r19, 0xF8	; 248
    1a48:	82 85       	ldd	r24, Z+10	; 0x0a
    1a4a:	93 85       	ldd	r25, Z+11	; 0x0b
    1a4c:	82 17       	cp	r24, r18
    1a4e:	93 07       	cpc	r25, r19
    1a50:	19 f5       	brne	.+70     	; 0x1a98 <vTaskPriorityInherit+0xac>
    1a52:	8f 01       	movw	r16, r30
    1a54:	ef 01       	movw	r28, r30
    1a56:	22 96       	adiw	r28, 0x02	; 2
    1a58:	ce 01       	movw	r24, r28
    1a5a:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    1a5e:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    1a62:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1a66:	86 89       	ldd	r24, Z+22	; 0x16
    1a68:	f8 01       	movw	r30, r16
    1a6a:	86 8b       	std	Z+22, r24	; 0x16
    1a6c:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    1a70:	98 17       	cp	r25, r24
    1a72:	10 f4       	brcc	.+4      	; 0x1a78 <vTaskPriorityInherit+0x8c>
    1a74:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    1a78:	90 e0       	ldi	r25, 0x00	; 0
    1a7a:	9c 01       	movw	r18, r24
    1a7c:	22 0f       	add	r18, r18
    1a7e:	33 1f       	adc	r19, r19
    1a80:	22 0f       	add	r18, r18
    1a82:	33 1f       	adc	r19, r19
    1a84:	22 0f       	add	r18, r18
    1a86:	33 1f       	adc	r19, r19
    1a88:	82 0f       	add	r24, r18
    1a8a:	93 1f       	adc	r25, r19
    1a8c:	be 01       	movw	r22, r28
    1a8e:	8e 59       	subi	r24, 0x9E	; 158
    1a90:	98 4f       	sbci	r25, 0xF8	; 248
    1a92:	0e 94 87 02 	call	0x50e	; 0x50e <vListInsertEnd>
    1a96:	07 c0       	rjmp	.+14     	; 0x1aa6 <vTaskPriorityInherit+0xba>
    1a98:	a0 91 86 07 	lds	r26, 0x0786	; 0x800786 <pxCurrentTCB>
    1a9c:	b0 91 87 07 	lds	r27, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1aa0:	56 96       	adiw	r26, 0x16	; 22
    1aa2:	8c 91       	ld	r24, X
    1aa4:	86 8b       	std	Z+22, r24	; 0x16
    1aa6:	df 91       	pop	r29
    1aa8:	cf 91       	pop	r28
    1aaa:	1f 91       	pop	r17
    1aac:	0f 91       	pop	r16
    1aae:	08 95       	ret

00001ab0 <xTaskPriorityDisinherit>:
    1ab0:	0f 93       	push	r16
    1ab2:	1f 93       	push	r17
    1ab4:	cf 93       	push	r28
    1ab6:	df 93       	push	r29
    1ab8:	fc 01       	movw	r30, r24
    1aba:	89 2b       	or	r24, r25
    1abc:	79 f1       	breq	.+94     	; 0x1b1c <xTaskPriorityDisinherit+0x6c>
    1abe:	82 a1       	ldd	r24, Z+34	; 0x22
    1ac0:	81 50       	subi	r24, 0x01	; 1
    1ac2:	82 a3       	std	Z+34, r24	; 0x22
    1ac4:	26 89       	ldd	r18, Z+22	; 0x16
    1ac6:	91 a1       	ldd	r25, Z+33	; 0x21
    1ac8:	29 17       	cp	r18, r25
    1aca:	51 f1       	breq	.+84     	; 0x1b20 <xTaskPriorityDisinherit+0x70>
    1acc:	81 11       	cpse	r24, r1
    1ace:	2a c0       	rjmp	.+84     	; 0x1b24 <xTaskPriorityDisinherit+0x74>
    1ad0:	ef 01       	movw	r28, r30
    1ad2:	8f 01       	movw	r16, r30
    1ad4:	0e 5f       	subi	r16, 0xFE	; 254
    1ad6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ad8:	c8 01       	movw	r24, r16
    1ada:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <uxListRemove>
    1ade:	89 a1       	ldd	r24, Y+33	; 0x21
    1ae0:	8e 8b       	std	Y+22, r24	; 0x16
    1ae2:	24 e0       	ldi	r18, 0x04	; 4
    1ae4:	30 e0       	ldi	r19, 0x00	; 0
    1ae6:	28 1b       	sub	r18, r24
    1ae8:	31 09       	sbc	r19, r1
    1aea:	3d 87       	std	Y+13, r19	; 0x0d
    1aec:	2c 87       	std	Y+12, r18	; 0x0c
    1aee:	90 91 2a 07 	lds	r25, 0x072A	; 0x80072a <uxTopReadyPriority>
    1af2:	98 17       	cp	r25, r24
    1af4:	10 f4       	brcc	.+4      	; 0x1afa <xTaskPriorityDisinherit+0x4a>
    1af6:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxTopReadyPriority>
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	9c 01       	movw	r18, r24
    1afe:	22 0f       	add	r18, r18
    1b00:	33 1f       	adc	r19, r19
    1b02:	22 0f       	add	r18, r18
    1b04:	33 1f       	adc	r19, r19
    1b06:	22 0f       	add	r18, r18
    1b08:	33 1f       	adc	r19, r19
    1b0a:	82 0f       	add	r24, r18
    1b0c:	93 1f       	adc	r25, r19
    1b0e:	b8 01       	movw	r22, r16
    1b10:	8e 59       	subi	r24, 0x9E	; 158
    1b12:	98 4f       	sbci	r25, 0xF8	; 248
    1b14:	0e 94 87 02 	call	0x50e	; 0x50e <vListInsertEnd>
    1b18:	81 e0       	ldi	r24, 0x01	; 1
    1b1a:	05 c0       	rjmp	.+10     	; 0x1b26 <xTaskPriorityDisinherit+0x76>
    1b1c:	80 e0       	ldi	r24, 0x00	; 0
    1b1e:	03 c0       	rjmp	.+6      	; 0x1b26 <xTaskPriorityDisinherit+0x76>
    1b20:	80 e0       	ldi	r24, 0x00	; 0
    1b22:	01 c0       	rjmp	.+2      	; 0x1b26 <xTaskPriorityDisinherit+0x76>
    1b24:	80 e0       	ldi	r24, 0x00	; 0
    1b26:	df 91       	pop	r29
    1b28:	cf 91       	pop	r28
    1b2a:	1f 91       	pop	r17
    1b2c:	0f 91       	pop	r16
    1b2e:	08 95       	ret

00001b30 <pvTaskIncrementMutexHeldCount>:
    1b30:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <pxCurrentTCB>
    1b34:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1b38:	89 2b       	or	r24, r25
    1b3a:	39 f0       	breq	.+14     	; 0x1b4a <pvTaskIncrementMutexHeldCount+0x1a>
    1b3c:	e0 91 86 07 	lds	r30, 0x0786	; 0x800786 <pxCurrentTCB>
    1b40:	f0 91 87 07 	lds	r31, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1b44:	82 a1       	ldd	r24, Z+34	; 0x22
    1b46:	8f 5f       	subi	r24, 0xFF	; 255
    1b48:	82 a3       	std	Z+34, r24	; 0x22
    1b4a:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <pxCurrentTCB>
    1b4e:	90 91 87 07 	lds	r25, 0x0787	; 0x800787 <pxCurrentTCB+0x1>
    1b52:	08 95       	ret

00001b54 <attachInterrupt>:
    1b54:	82 30       	cpi	r24, 0x02	; 2
    1b56:	00 f5       	brcc	.+64     	; 0x1b98 <attachInterrupt+0x44>
    1b58:	e8 2f       	mov	r30, r24
    1b5a:	f0 e0       	ldi	r31, 0x00	; 0
    1b5c:	ee 0f       	add	r30, r30
    1b5e:	ff 1f       	adc	r31, r31
    1b60:	e8 57       	subi	r30, 0x78	; 120
    1b62:	f8 4f       	sbci	r31, 0xF8	; 248
    1b64:	71 83       	std	Z+1, r23	; 0x01
    1b66:	60 83       	st	Z, r22
    1b68:	88 23       	and	r24, r24
    1b6a:	19 f0       	breq	.+6      	; 0x1b72 <attachInterrupt+0x1e>
    1b6c:	81 30       	cpi	r24, 0x01	; 1
    1b6e:	49 f0       	breq	.+18     	; 0x1b82 <attachInterrupt+0x2e>
    1b70:	08 95       	ret
    1b72:	e9 e6       	ldi	r30, 0x69	; 105
    1b74:	f0 e0       	ldi	r31, 0x00	; 0
    1b76:	80 81       	ld	r24, Z
    1b78:	8c 7f       	andi	r24, 0xFC	; 252
    1b7a:	48 2b       	or	r20, r24
    1b7c:	40 83       	st	Z, r20
    1b7e:	e8 9a       	sbi	0x1d, 0	; 29
    1b80:	08 95       	ret
    1b82:	e9 e6       	ldi	r30, 0x69	; 105
    1b84:	f0 e0       	ldi	r31, 0x00	; 0
    1b86:	80 81       	ld	r24, Z
    1b88:	83 7f       	andi	r24, 0xF3	; 243
    1b8a:	44 0f       	add	r20, r20
    1b8c:	55 1f       	adc	r21, r21
    1b8e:	44 0f       	add	r20, r20
    1b90:	55 1f       	adc	r21, r21
    1b92:	48 2b       	or	r20, r24
    1b94:	40 83       	st	Z, r20
    1b96:	e9 9a       	sbi	0x1d, 1	; 29
    1b98:	08 95       	ret

00001b9a <__vector_1>:
    1b9a:	1f 92       	push	r1
    1b9c:	0f 92       	push	r0
    1b9e:	0f b6       	in	r0, 0x3f	; 63
    1ba0:	0f 92       	push	r0
    1ba2:	11 24       	eor	r1, r1
    1ba4:	2f 93       	push	r18
    1ba6:	3f 93       	push	r19
    1ba8:	4f 93       	push	r20
    1baa:	5f 93       	push	r21
    1bac:	6f 93       	push	r22
    1bae:	7f 93       	push	r23
    1bb0:	8f 93       	push	r24
    1bb2:	9f 93       	push	r25
    1bb4:	af 93       	push	r26
    1bb6:	bf 93       	push	r27
    1bb8:	ef 93       	push	r30
    1bba:	ff 93       	push	r31
    1bbc:	80 91 88 07 	lds	r24, 0x0788	; 0x800788 <intFunc>
    1bc0:	90 91 89 07 	lds	r25, 0x0789	; 0x800789 <intFunc+0x1>
    1bc4:	89 2b       	or	r24, r25
    1bc6:	29 f0       	breq	.+10     	; 0x1bd2 <__vector_1+0x38>
    1bc8:	e0 91 88 07 	lds	r30, 0x0788	; 0x800788 <intFunc>
    1bcc:	f0 91 89 07 	lds	r31, 0x0789	; 0x800789 <intFunc+0x1>
    1bd0:	09 95       	icall
    1bd2:	ff 91       	pop	r31
    1bd4:	ef 91       	pop	r30
    1bd6:	bf 91       	pop	r27
    1bd8:	af 91       	pop	r26
    1bda:	9f 91       	pop	r25
    1bdc:	8f 91       	pop	r24
    1bde:	7f 91       	pop	r23
    1be0:	6f 91       	pop	r22
    1be2:	5f 91       	pop	r21
    1be4:	4f 91       	pop	r20
    1be6:	3f 91       	pop	r19
    1be8:	2f 91       	pop	r18
    1bea:	0f 90       	pop	r0
    1bec:	0f be       	out	0x3f, r0	; 63
    1bee:	0f 90       	pop	r0
    1bf0:	1f 90       	pop	r1
    1bf2:	18 95       	reti

00001bf4 <__vector_2>:
    1bf4:	1f 92       	push	r1
    1bf6:	0f 92       	push	r0
    1bf8:	0f b6       	in	r0, 0x3f	; 63
    1bfa:	0f 92       	push	r0
    1bfc:	11 24       	eor	r1, r1
    1bfe:	2f 93       	push	r18
    1c00:	3f 93       	push	r19
    1c02:	4f 93       	push	r20
    1c04:	5f 93       	push	r21
    1c06:	6f 93       	push	r22
    1c08:	7f 93       	push	r23
    1c0a:	8f 93       	push	r24
    1c0c:	9f 93       	push	r25
    1c0e:	af 93       	push	r26
    1c10:	bf 93       	push	r27
    1c12:	ef 93       	push	r30
    1c14:	ff 93       	push	r31
    1c16:	80 91 8a 07 	lds	r24, 0x078A	; 0x80078a <intFunc+0x2>
    1c1a:	90 91 8b 07 	lds	r25, 0x078B	; 0x80078b <intFunc+0x3>
    1c1e:	89 2b       	or	r24, r25
    1c20:	29 f0       	breq	.+10     	; 0x1c2c <__vector_2+0x38>
    1c22:	e0 91 8a 07 	lds	r30, 0x078A	; 0x80078a <intFunc+0x2>
    1c26:	f0 91 8b 07 	lds	r31, 0x078B	; 0x80078b <intFunc+0x3>
    1c2a:	09 95       	icall
    1c2c:	ff 91       	pop	r31
    1c2e:	ef 91       	pop	r30
    1c30:	bf 91       	pop	r27
    1c32:	af 91       	pop	r26
    1c34:	9f 91       	pop	r25
    1c36:	8f 91       	pop	r24
    1c38:	7f 91       	pop	r23
    1c3a:	6f 91       	pop	r22
    1c3c:	5f 91       	pop	r21
    1c3e:	4f 91       	pop	r20
    1c40:	3f 91       	pop	r19
    1c42:	2f 91       	pop	r18
    1c44:	0f 90       	pop	r0
    1c46:	0f be       	out	0x3f, r0	; 63
    1c48:	0f 90       	pop	r0
    1c4a:	1f 90       	pop	r1
    1c4c:	18 95       	reti

00001c4e <USART_send>:
    1c4e:	e0 ec       	ldi	r30, 0xC0	; 192
    1c50:	f0 e0       	ldi	r31, 0x00	; 0
    1c52:	90 81       	ld	r25, Z
    1c54:	95 ff       	sbrs	r25, 5
    1c56:	fd cf       	rjmp	.-6      	; 0x1c52 <USART_send+0x4>
    1c58:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    1c5c:	08 95       	ret

00001c5e <USART_sendstr>:
    1c5e:	cf 93       	push	r28
    1c60:	df 93       	push	r29
    1c62:	ec 01       	movw	r28, r24
    1c64:	88 81       	ld	r24, Y
    1c66:	88 23       	and	r24, r24
    1c68:	31 f0       	breq	.+12     	; 0x1c76 <USART_sendstr+0x18>
    1c6a:	21 96       	adiw	r28, 0x01	; 1
    1c6c:	0e 94 27 0e 	call	0x1c4e	; 0x1c4e <USART_send>
    1c70:	89 91       	ld	r24, Y+
    1c72:	81 11       	cpse	r24, r1
    1c74:	fb cf       	rjmp	.-10     	; 0x1c6c <USART_sendstr+0xe>
    1c76:	df 91       	pop	r29
    1c78:	cf 91       	pop	r28
    1c7a:	08 95       	ret

00001c7c <__divsf3>:
    1c7c:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__divsf3x>
    1c80:	0c 94 3a 0f 	jmp	0x1e74	; 0x1e74 <__fp_round>
    1c84:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <__fp_pscB>
    1c88:	58 f0       	brcs	.+22     	; 0x1ca0 <__divsf3+0x24>
    1c8a:	0e 94 2c 0f 	call	0x1e58	; 0x1e58 <__fp_pscA>
    1c8e:	40 f0       	brcs	.+16     	; 0x1ca0 <__divsf3+0x24>
    1c90:	29 f4       	brne	.+10     	; 0x1c9c <__divsf3+0x20>
    1c92:	5f 3f       	cpi	r21, 0xFF	; 255
    1c94:	29 f0       	breq	.+10     	; 0x1ca0 <__divsf3+0x24>
    1c96:	0c 94 23 0f 	jmp	0x1e46	; 0x1e46 <__fp_inf>
    1c9a:	51 11       	cpse	r21, r1
    1c9c:	0c 94 6e 0f 	jmp	0x1edc	; 0x1edc <__fp_szero>
    1ca0:	0c 94 29 0f 	jmp	0x1e52	; 0x1e52 <__fp_nan>

00001ca4 <__divsf3x>:
    1ca4:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <__fp_split3>
    1ca8:	68 f3       	brcs	.-38     	; 0x1c84 <__divsf3+0x8>

00001caa <__divsf3_pse>:
    1caa:	99 23       	and	r25, r25
    1cac:	b1 f3       	breq	.-20     	; 0x1c9a <__divsf3+0x1e>
    1cae:	55 23       	and	r21, r21
    1cb0:	91 f3       	breq	.-28     	; 0x1c96 <__divsf3+0x1a>
    1cb2:	95 1b       	sub	r25, r21
    1cb4:	55 0b       	sbc	r21, r21
    1cb6:	bb 27       	eor	r27, r27
    1cb8:	aa 27       	eor	r26, r26
    1cba:	62 17       	cp	r22, r18
    1cbc:	73 07       	cpc	r23, r19
    1cbe:	84 07       	cpc	r24, r20
    1cc0:	38 f0       	brcs	.+14     	; 0x1cd0 <__divsf3_pse+0x26>
    1cc2:	9f 5f       	subi	r25, 0xFF	; 255
    1cc4:	5f 4f       	sbci	r21, 0xFF	; 255
    1cc6:	22 0f       	add	r18, r18
    1cc8:	33 1f       	adc	r19, r19
    1cca:	44 1f       	adc	r20, r20
    1ccc:	aa 1f       	adc	r26, r26
    1cce:	a9 f3       	breq	.-22     	; 0x1cba <__divsf3_pse+0x10>
    1cd0:	35 d0       	rcall	.+106    	; 0x1d3c <__divsf3_pse+0x92>
    1cd2:	0e 2e       	mov	r0, r30
    1cd4:	3a f0       	brmi	.+14     	; 0x1ce4 <__divsf3_pse+0x3a>
    1cd6:	e0 e8       	ldi	r30, 0x80	; 128
    1cd8:	32 d0       	rcall	.+100    	; 0x1d3e <__divsf3_pse+0x94>
    1cda:	91 50       	subi	r25, 0x01	; 1
    1cdc:	50 40       	sbci	r21, 0x00	; 0
    1cde:	e6 95       	lsr	r30
    1ce0:	00 1c       	adc	r0, r0
    1ce2:	ca f7       	brpl	.-14     	; 0x1cd6 <__divsf3_pse+0x2c>
    1ce4:	2b d0       	rcall	.+86     	; 0x1d3c <__divsf3_pse+0x92>
    1ce6:	fe 2f       	mov	r31, r30
    1ce8:	29 d0       	rcall	.+82     	; 0x1d3c <__divsf3_pse+0x92>
    1cea:	66 0f       	add	r22, r22
    1cec:	77 1f       	adc	r23, r23
    1cee:	88 1f       	adc	r24, r24
    1cf0:	bb 1f       	adc	r27, r27
    1cf2:	26 17       	cp	r18, r22
    1cf4:	37 07       	cpc	r19, r23
    1cf6:	48 07       	cpc	r20, r24
    1cf8:	ab 07       	cpc	r26, r27
    1cfa:	b0 e8       	ldi	r27, 0x80	; 128
    1cfc:	09 f0       	breq	.+2      	; 0x1d00 <__divsf3_pse+0x56>
    1cfe:	bb 0b       	sbc	r27, r27
    1d00:	80 2d       	mov	r24, r0
    1d02:	bf 01       	movw	r22, r30
    1d04:	ff 27       	eor	r31, r31
    1d06:	93 58       	subi	r25, 0x83	; 131
    1d08:	5f 4f       	sbci	r21, 0xFF	; 255
    1d0a:	3a f0       	brmi	.+14     	; 0x1d1a <__divsf3_pse+0x70>
    1d0c:	9e 3f       	cpi	r25, 0xFE	; 254
    1d0e:	51 05       	cpc	r21, r1
    1d10:	78 f0       	brcs	.+30     	; 0x1d30 <__divsf3_pse+0x86>
    1d12:	0c 94 23 0f 	jmp	0x1e46	; 0x1e46 <__fp_inf>
    1d16:	0c 94 6e 0f 	jmp	0x1edc	; 0x1edc <__fp_szero>
    1d1a:	5f 3f       	cpi	r21, 0xFF	; 255
    1d1c:	e4 f3       	brlt	.-8      	; 0x1d16 <__divsf3_pse+0x6c>
    1d1e:	98 3e       	cpi	r25, 0xE8	; 232
    1d20:	d4 f3       	brlt	.-12     	; 0x1d16 <__divsf3_pse+0x6c>
    1d22:	86 95       	lsr	r24
    1d24:	77 95       	ror	r23
    1d26:	67 95       	ror	r22
    1d28:	b7 95       	ror	r27
    1d2a:	f7 95       	ror	r31
    1d2c:	9f 5f       	subi	r25, 0xFF	; 255
    1d2e:	c9 f7       	brne	.-14     	; 0x1d22 <__divsf3_pse+0x78>
    1d30:	88 0f       	add	r24, r24
    1d32:	91 1d       	adc	r25, r1
    1d34:	96 95       	lsr	r25
    1d36:	87 95       	ror	r24
    1d38:	97 f9       	bld	r25, 7
    1d3a:	08 95       	ret
    1d3c:	e1 e0       	ldi	r30, 0x01	; 1
    1d3e:	66 0f       	add	r22, r22
    1d40:	77 1f       	adc	r23, r23
    1d42:	88 1f       	adc	r24, r24
    1d44:	bb 1f       	adc	r27, r27
    1d46:	62 17       	cp	r22, r18
    1d48:	73 07       	cpc	r23, r19
    1d4a:	84 07       	cpc	r24, r20
    1d4c:	ba 07       	cpc	r27, r26
    1d4e:	20 f0       	brcs	.+8      	; 0x1d58 <__divsf3_pse+0xae>
    1d50:	62 1b       	sub	r22, r18
    1d52:	73 0b       	sbc	r23, r19
    1d54:	84 0b       	sbc	r24, r20
    1d56:	ba 0b       	sbc	r27, r26
    1d58:	ee 1f       	adc	r30, r30
    1d5a:	88 f7       	brcc	.-30     	; 0x1d3e <__divsf3_pse+0x94>
    1d5c:	e0 95       	com	r30
    1d5e:	08 95       	ret

00001d60 <__fixsfsi>:
    1d60:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__fixunssfsi>
    1d64:	68 94       	set
    1d66:	b1 11       	cpse	r27, r1
    1d68:	0c 94 6e 0f 	jmp	0x1edc	; 0x1edc <__fp_szero>
    1d6c:	08 95       	ret

00001d6e <__fixunssfsi>:
    1d6e:	0e 94 53 0f 	call	0x1ea6	; 0x1ea6 <__fp_splitA>
    1d72:	88 f0       	brcs	.+34     	; 0x1d96 <__fixunssfsi+0x28>
    1d74:	9f 57       	subi	r25, 0x7F	; 127
    1d76:	98 f0       	brcs	.+38     	; 0x1d9e <__fixunssfsi+0x30>
    1d78:	b9 2f       	mov	r27, r25
    1d7a:	99 27       	eor	r25, r25
    1d7c:	b7 51       	subi	r27, 0x17	; 23
    1d7e:	b0 f0       	brcs	.+44     	; 0x1dac <__fixunssfsi+0x3e>
    1d80:	e1 f0       	breq	.+56     	; 0x1dba <__fixunssfsi+0x4c>
    1d82:	66 0f       	add	r22, r22
    1d84:	77 1f       	adc	r23, r23
    1d86:	88 1f       	adc	r24, r24
    1d88:	99 1f       	adc	r25, r25
    1d8a:	1a f0       	brmi	.+6      	; 0x1d92 <__fixunssfsi+0x24>
    1d8c:	ba 95       	dec	r27
    1d8e:	c9 f7       	brne	.-14     	; 0x1d82 <__fixunssfsi+0x14>
    1d90:	14 c0       	rjmp	.+40     	; 0x1dba <__fixunssfsi+0x4c>
    1d92:	b1 30       	cpi	r27, 0x01	; 1
    1d94:	91 f0       	breq	.+36     	; 0x1dba <__fixunssfsi+0x4c>
    1d96:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <__fp_zero>
    1d9a:	b1 e0       	ldi	r27, 0x01	; 1
    1d9c:	08 95       	ret
    1d9e:	0c 94 6d 0f 	jmp	0x1eda	; 0x1eda <__fp_zero>
    1da2:	67 2f       	mov	r22, r23
    1da4:	78 2f       	mov	r23, r24
    1da6:	88 27       	eor	r24, r24
    1da8:	b8 5f       	subi	r27, 0xF8	; 248
    1daa:	39 f0       	breq	.+14     	; 0x1dba <__fixunssfsi+0x4c>
    1dac:	b9 3f       	cpi	r27, 0xF9	; 249
    1dae:	cc f3       	brlt	.-14     	; 0x1da2 <__fixunssfsi+0x34>
    1db0:	86 95       	lsr	r24
    1db2:	77 95       	ror	r23
    1db4:	67 95       	ror	r22
    1db6:	b3 95       	inc	r27
    1db8:	d9 f7       	brne	.-10     	; 0x1db0 <__fixunssfsi+0x42>
    1dba:	3e f4       	brtc	.+14     	; 0x1dca <__fixunssfsi+0x5c>
    1dbc:	90 95       	com	r25
    1dbe:	80 95       	com	r24
    1dc0:	70 95       	com	r23
    1dc2:	61 95       	neg	r22
    1dc4:	7f 4f       	sbci	r23, 0xFF	; 255
    1dc6:	8f 4f       	sbci	r24, 0xFF	; 255
    1dc8:	9f 4f       	sbci	r25, 0xFF	; 255
    1dca:	08 95       	ret

00001dcc <__floatunsisf>:
    1dcc:	e8 94       	clt
    1dce:	09 c0       	rjmp	.+18     	; 0x1de2 <__floatsisf+0x12>

00001dd0 <__floatsisf>:
    1dd0:	97 fb       	bst	r25, 7
    1dd2:	3e f4       	brtc	.+14     	; 0x1de2 <__floatsisf+0x12>
    1dd4:	90 95       	com	r25
    1dd6:	80 95       	com	r24
    1dd8:	70 95       	com	r23
    1dda:	61 95       	neg	r22
    1ddc:	7f 4f       	sbci	r23, 0xFF	; 255
    1dde:	8f 4f       	sbci	r24, 0xFF	; 255
    1de0:	9f 4f       	sbci	r25, 0xFF	; 255
    1de2:	99 23       	and	r25, r25
    1de4:	a9 f0       	breq	.+42     	; 0x1e10 <__floatsisf+0x40>
    1de6:	f9 2f       	mov	r31, r25
    1de8:	96 e9       	ldi	r25, 0x96	; 150
    1dea:	bb 27       	eor	r27, r27
    1dec:	93 95       	inc	r25
    1dee:	f6 95       	lsr	r31
    1df0:	87 95       	ror	r24
    1df2:	77 95       	ror	r23
    1df4:	67 95       	ror	r22
    1df6:	b7 95       	ror	r27
    1df8:	f1 11       	cpse	r31, r1
    1dfa:	f8 cf       	rjmp	.-16     	; 0x1dec <__floatsisf+0x1c>
    1dfc:	fa f4       	brpl	.+62     	; 0x1e3c <__floatsisf+0x6c>
    1dfe:	bb 0f       	add	r27, r27
    1e00:	11 f4       	brne	.+4      	; 0x1e06 <__floatsisf+0x36>
    1e02:	60 ff       	sbrs	r22, 0
    1e04:	1b c0       	rjmp	.+54     	; 0x1e3c <__floatsisf+0x6c>
    1e06:	6f 5f       	subi	r22, 0xFF	; 255
    1e08:	7f 4f       	sbci	r23, 0xFF	; 255
    1e0a:	8f 4f       	sbci	r24, 0xFF	; 255
    1e0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1e0e:	16 c0       	rjmp	.+44     	; 0x1e3c <__floatsisf+0x6c>
    1e10:	88 23       	and	r24, r24
    1e12:	11 f0       	breq	.+4      	; 0x1e18 <__floatsisf+0x48>
    1e14:	96 e9       	ldi	r25, 0x96	; 150
    1e16:	11 c0       	rjmp	.+34     	; 0x1e3a <__floatsisf+0x6a>
    1e18:	77 23       	and	r23, r23
    1e1a:	21 f0       	breq	.+8      	; 0x1e24 <__floatsisf+0x54>
    1e1c:	9e e8       	ldi	r25, 0x8E	; 142
    1e1e:	87 2f       	mov	r24, r23
    1e20:	76 2f       	mov	r23, r22
    1e22:	05 c0       	rjmp	.+10     	; 0x1e2e <__floatsisf+0x5e>
    1e24:	66 23       	and	r22, r22
    1e26:	71 f0       	breq	.+28     	; 0x1e44 <__floatsisf+0x74>
    1e28:	96 e8       	ldi	r25, 0x86	; 134
    1e2a:	86 2f       	mov	r24, r22
    1e2c:	70 e0       	ldi	r23, 0x00	; 0
    1e2e:	60 e0       	ldi	r22, 0x00	; 0
    1e30:	2a f0       	brmi	.+10     	; 0x1e3c <__floatsisf+0x6c>
    1e32:	9a 95       	dec	r25
    1e34:	66 0f       	add	r22, r22
    1e36:	77 1f       	adc	r23, r23
    1e38:	88 1f       	adc	r24, r24
    1e3a:	da f7       	brpl	.-10     	; 0x1e32 <__floatsisf+0x62>
    1e3c:	88 0f       	add	r24, r24
    1e3e:	96 95       	lsr	r25
    1e40:	87 95       	ror	r24
    1e42:	97 f9       	bld	r25, 7
    1e44:	08 95       	ret

00001e46 <__fp_inf>:
    1e46:	97 f9       	bld	r25, 7
    1e48:	9f 67       	ori	r25, 0x7F	; 127
    1e4a:	80 e8       	ldi	r24, 0x80	; 128
    1e4c:	70 e0       	ldi	r23, 0x00	; 0
    1e4e:	60 e0       	ldi	r22, 0x00	; 0
    1e50:	08 95       	ret

00001e52 <__fp_nan>:
    1e52:	9f ef       	ldi	r25, 0xFF	; 255
    1e54:	80 ec       	ldi	r24, 0xC0	; 192
    1e56:	08 95       	ret

00001e58 <__fp_pscA>:
    1e58:	00 24       	eor	r0, r0
    1e5a:	0a 94       	dec	r0
    1e5c:	16 16       	cp	r1, r22
    1e5e:	17 06       	cpc	r1, r23
    1e60:	18 06       	cpc	r1, r24
    1e62:	09 06       	cpc	r0, r25
    1e64:	08 95       	ret

00001e66 <__fp_pscB>:
    1e66:	00 24       	eor	r0, r0
    1e68:	0a 94       	dec	r0
    1e6a:	12 16       	cp	r1, r18
    1e6c:	13 06       	cpc	r1, r19
    1e6e:	14 06       	cpc	r1, r20
    1e70:	05 06       	cpc	r0, r21
    1e72:	08 95       	ret

00001e74 <__fp_round>:
    1e74:	09 2e       	mov	r0, r25
    1e76:	03 94       	inc	r0
    1e78:	00 0c       	add	r0, r0
    1e7a:	11 f4       	brne	.+4      	; 0x1e80 <__fp_round+0xc>
    1e7c:	88 23       	and	r24, r24
    1e7e:	52 f0       	brmi	.+20     	; 0x1e94 <__fp_round+0x20>
    1e80:	bb 0f       	add	r27, r27
    1e82:	40 f4       	brcc	.+16     	; 0x1e94 <__fp_round+0x20>
    1e84:	bf 2b       	or	r27, r31
    1e86:	11 f4       	brne	.+4      	; 0x1e8c <__fp_round+0x18>
    1e88:	60 ff       	sbrs	r22, 0
    1e8a:	04 c0       	rjmp	.+8      	; 0x1e94 <__fp_round+0x20>
    1e8c:	6f 5f       	subi	r22, 0xFF	; 255
    1e8e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e90:	8f 4f       	sbci	r24, 0xFF	; 255
    1e92:	9f 4f       	sbci	r25, 0xFF	; 255
    1e94:	08 95       	ret

00001e96 <__fp_split3>:
    1e96:	57 fd       	sbrc	r21, 7
    1e98:	90 58       	subi	r25, 0x80	; 128
    1e9a:	44 0f       	add	r20, r20
    1e9c:	55 1f       	adc	r21, r21
    1e9e:	59 f0       	breq	.+22     	; 0x1eb6 <__fp_splitA+0x10>
    1ea0:	5f 3f       	cpi	r21, 0xFF	; 255
    1ea2:	71 f0       	breq	.+28     	; 0x1ec0 <__fp_splitA+0x1a>
    1ea4:	47 95       	ror	r20

00001ea6 <__fp_splitA>:
    1ea6:	88 0f       	add	r24, r24
    1ea8:	97 fb       	bst	r25, 7
    1eaa:	99 1f       	adc	r25, r25
    1eac:	61 f0       	breq	.+24     	; 0x1ec6 <__fp_splitA+0x20>
    1eae:	9f 3f       	cpi	r25, 0xFF	; 255
    1eb0:	79 f0       	breq	.+30     	; 0x1ed0 <__fp_splitA+0x2a>
    1eb2:	87 95       	ror	r24
    1eb4:	08 95       	ret
    1eb6:	12 16       	cp	r1, r18
    1eb8:	13 06       	cpc	r1, r19
    1eba:	14 06       	cpc	r1, r20
    1ebc:	55 1f       	adc	r21, r21
    1ebe:	f2 cf       	rjmp	.-28     	; 0x1ea4 <__fp_split3+0xe>
    1ec0:	46 95       	lsr	r20
    1ec2:	f1 df       	rcall	.-30     	; 0x1ea6 <__fp_splitA>
    1ec4:	08 c0       	rjmp	.+16     	; 0x1ed6 <__fp_splitA+0x30>
    1ec6:	16 16       	cp	r1, r22
    1ec8:	17 06       	cpc	r1, r23
    1eca:	18 06       	cpc	r1, r24
    1ecc:	99 1f       	adc	r25, r25
    1ece:	f1 cf       	rjmp	.-30     	; 0x1eb2 <__fp_splitA+0xc>
    1ed0:	86 95       	lsr	r24
    1ed2:	71 05       	cpc	r23, r1
    1ed4:	61 05       	cpc	r22, r1
    1ed6:	08 94       	sec
    1ed8:	08 95       	ret

00001eda <__fp_zero>:
    1eda:	e8 94       	clt

00001edc <__fp_szero>:
    1edc:	bb 27       	eor	r27, r27
    1ede:	66 27       	eor	r22, r22
    1ee0:	77 27       	eor	r23, r23
    1ee2:	cb 01       	movw	r24, r22
    1ee4:	97 f9       	bld	r25, 7
    1ee6:	08 95       	ret

00001ee8 <__mulsf3>:
    1ee8:	0e 94 87 0f 	call	0x1f0e	; 0x1f0e <__mulsf3x>
    1eec:	0c 94 3a 0f 	jmp	0x1e74	; 0x1e74 <__fp_round>
    1ef0:	0e 94 2c 0f 	call	0x1e58	; 0x1e58 <__fp_pscA>
    1ef4:	38 f0       	brcs	.+14     	; 0x1f04 <__mulsf3+0x1c>
    1ef6:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <__fp_pscB>
    1efa:	20 f0       	brcs	.+8      	; 0x1f04 <__mulsf3+0x1c>
    1efc:	95 23       	and	r25, r21
    1efe:	11 f0       	breq	.+4      	; 0x1f04 <__mulsf3+0x1c>
    1f00:	0c 94 23 0f 	jmp	0x1e46	; 0x1e46 <__fp_inf>
    1f04:	0c 94 29 0f 	jmp	0x1e52	; 0x1e52 <__fp_nan>
    1f08:	11 24       	eor	r1, r1
    1f0a:	0c 94 6e 0f 	jmp	0x1edc	; 0x1edc <__fp_szero>

00001f0e <__mulsf3x>:
    1f0e:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <__fp_split3>
    1f12:	70 f3       	brcs	.-36     	; 0x1ef0 <__mulsf3+0x8>

00001f14 <__mulsf3_pse>:
    1f14:	95 9f       	mul	r25, r21
    1f16:	c1 f3       	breq	.-16     	; 0x1f08 <__mulsf3+0x20>
    1f18:	95 0f       	add	r25, r21
    1f1a:	50 e0       	ldi	r21, 0x00	; 0
    1f1c:	55 1f       	adc	r21, r21
    1f1e:	62 9f       	mul	r22, r18
    1f20:	f0 01       	movw	r30, r0
    1f22:	72 9f       	mul	r23, r18
    1f24:	bb 27       	eor	r27, r27
    1f26:	f0 0d       	add	r31, r0
    1f28:	b1 1d       	adc	r27, r1
    1f2a:	63 9f       	mul	r22, r19
    1f2c:	aa 27       	eor	r26, r26
    1f2e:	f0 0d       	add	r31, r0
    1f30:	b1 1d       	adc	r27, r1
    1f32:	aa 1f       	adc	r26, r26
    1f34:	64 9f       	mul	r22, r20
    1f36:	66 27       	eor	r22, r22
    1f38:	b0 0d       	add	r27, r0
    1f3a:	a1 1d       	adc	r26, r1
    1f3c:	66 1f       	adc	r22, r22
    1f3e:	82 9f       	mul	r24, r18
    1f40:	22 27       	eor	r18, r18
    1f42:	b0 0d       	add	r27, r0
    1f44:	a1 1d       	adc	r26, r1
    1f46:	62 1f       	adc	r22, r18
    1f48:	73 9f       	mul	r23, r19
    1f4a:	b0 0d       	add	r27, r0
    1f4c:	a1 1d       	adc	r26, r1
    1f4e:	62 1f       	adc	r22, r18
    1f50:	83 9f       	mul	r24, r19
    1f52:	a0 0d       	add	r26, r0
    1f54:	61 1d       	adc	r22, r1
    1f56:	22 1f       	adc	r18, r18
    1f58:	74 9f       	mul	r23, r20
    1f5a:	33 27       	eor	r19, r19
    1f5c:	a0 0d       	add	r26, r0
    1f5e:	61 1d       	adc	r22, r1
    1f60:	23 1f       	adc	r18, r19
    1f62:	84 9f       	mul	r24, r20
    1f64:	60 0d       	add	r22, r0
    1f66:	21 1d       	adc	r18, r1
    1f68:	82 2f       	mov	r24, r18
    1f6a:	76 2f       	mov	r23, r22
    1f6c:	6a 2f       	mov	r22, r26
    1f6e:	11 24       	eor	r1, r1
    1f70:	9f 57       	subi	r25, 0x7F	; 127
    1f72:	50 40       	sbci	r21, 0x00	; 0
    1f74:	9a f0       	brmi	.+38     	; 0x1f9c <__mulsf3_pse+0x88>
    1f76:	f1 f0       	breq	.+60     	; 0x1fb4 <__mulsf3_pse+0xa0>
    1f78:	88 23       	and	r24, r24
    1f7a:	4a f0       	brmi	.+18     	; 0x1f8e <__mulsf3_pse+0x7a>
    1f7c:	ee 0f       	add	r30, r30
    1f7e:	ff 1f       	adc	r31, r31
    1f80:	bb 1f       	adc	r27, r27
    1f82:	66 1f       	adc	r22, r22
    1f84:	77 1f       	adc	r23, r23
    1f86:	88 1f       	adc	r24, r24
    1f88:	91 50       	subi	r25, 0x01	; 1
    1f8a:	50 40       	sbci	r21, 0x00	; 0
    1f8c:	a9 f7       	brne	.-22     	; 0x1f78 <__mulsf3_pse+0x64>
    1f8e:	9e 3f       	cpi	r25, 0xFE	; 254
    1f90:	51 05       	cpc	r21, r1
    1f92:	80 f0       	brcs	.+32     	; 0x1fb4 <__mulsf3_pse+0xa0>
    1f94:	0c 94 23 0f 	jmp	0x1e46	; 0x1e46 <__fp_inf>
    1f98:	0c 94 6e 0f 	jmp	0x1edc	; 0x1edc <__fp_szero>
    1f9c:	5f 3f       	cpi	r21, 0xFF	; 255
    1f9e:	e4 f3       	brlt	.-8      	; 0x1f98 <__mulsf3_pse+0x84>
    1fa0:	98 3e       	cpi	r25, 0xE8	; 232
    1fa2:	d4 f3       	brlt	.-12     	; 0x1f98 <__mulsf3_pse+0x84>
    1fa4:	86 95       	lsr	r24
    1fa6:	77 95       	ror	r23
    1fa8:	67 95       	ror	r22
    1faa:	b7 95       	ror	r27
    1fac:	f7 95       	ror	r31
    1fae:	e7 95       	ror	r30
    1fb0:	9f 5f       	subi	r25, 0xFF	; 255
    1fb2:	c1 f7       	brne	.-16     	; 0x1fa4 <__mulsf3_pse+0x90>
    1fb4:	fe 2b       	or	r31, r30
    1fb6:	88 0f       	add	r24, r24
    1fb8:	91 1d       	adc	r25, r1
    1fba:	96 95       	lsr	r25
    1fbc:	87 95       	ror	r24
    1fbe:	97 f9       	bld	r25, 7
    1fc0:	08 95       	ret

00001fc2 <__divmodhi4>:
    1fc2:	97 fb       	bst	r25, 7
    1fc4:	07 2e       	mov	r0, r23
    1fc6:	16 f4       	brtc	.+4      	; 0x1fcc <__divmodhi4+0xa>
    1fc8:	00 94       	com	r0
    1fca:	07 d0       	rcall	.+14     	; 0x1fda <__divmodhi4_neg1>
    1fcc:	77 fd       	sbrc	r23, 7
    1fce:	09 d0       	rcall	.+18     	; 0x1fe2 <__divmodhi4_neg2>
    1fd0:	0e 94 f5 0f 	call	0x1fea	; 0x1fea <__udivmodhi4>
    1fd4:	07 fc       	sbrc	r0, 7
    1fd6:	05 d0       	rcall	.+10     	; 0x1fe2 <__divmodhi4_neg2>
    1fd8:	3e f4       	brtc	.+14     	; 0x1fe8 <__divmodhi4_exit>

00001fda <__divmodhi4_neg1>:
    1fda:	90 95       	com	r25
    1fdc:	81 95       	neg	r24
    1fde:	9f 4f       	sbci	r25, 0xFF	; 255
    1fe0:	08 95       	ret

00001fe2 <__divmodhi4_neg2>:
    1fe2:	70 95       	com	r23
    1fe4:	61 95       	neg	r22
    1fe6:	7f 4f       	sbci	r23, 0xFF	; 255

00001fe8 <__divmodhi4_exit>:
    1fe8:	08 95       	ret

00001fea <__udivmodhi4>:
    1fea:	aa 1b       	sub	r26, r26
    1fec:	bb 1b       	sub	r27, r27
    1fee:	51 e1       	ldi	r21, 0x11	; 17
    1ff0:	07 c0       	rjmp	.+14     	; 0x2000 <__udivmodhi4_ep>

00001ff2 <__udivmodhi4_loop>:
    1ff2:	aa 1f       	adc	r26, r26
    1ff4:	bb 1f       	adc	r27, r27
    1ff6:	a6 17       	cp	r26, r22
    1ff8:	b7 07       	cpc	r27, r23
    1ffa:	10 f0       	brcs	.+4      	; 0x2000 <__udivmodhi4_ep>
    1ffc:	a6 1b       	sub	r26, r22
    1ffe:	b7 0b       	sbc	r27, r23

00002000 <__udivmodhi4_ep>:
    2000:	88 1f       	adc	r24, r24
    2002:	99 1f       	adc	r25, r25
    2004:	5a 95       	dec	r21
    2006:	a9 f7       	brne	.-22     	; 0x1ff2 <__udivmodhi4_loop>
    2008:	80 95       	com	r24
    200a:	90 95       	com	r25
    200c:	bc 01       	movw	r22, r24
    200e:	cd 01       	movw	r24, r26
    2010:	08 95       	ret

00002012 <memcpy>:
    2012:	fb 01       	movw	r30, r22
    2014:	dc 01       	movw	r26, r24
    2016:	02 c0       	rjmp	.+4      	; 0x201c <memcpy+0xa>
    2018:	01 90       	ld	r0, Z+
    201a:	0d 92       	st	X+, r0
    201c:	41 50       	subi	r20, 0x01	; 1
    201e:	50 40       	sbci	r21, 0x00	; 0
    2020:	d8 f7       	brcc	.-10     	; 0x2018 <memcpy+0x6>
    2022:	08 95       	ret

00002024 <_exit>:
    2024:	f8 94       	cli

00002026 <__stop_program>:
    2026:	ff cf       	rjmp	.-2      	; 0x2026 <__stop_program>
