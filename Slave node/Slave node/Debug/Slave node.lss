
Slave node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  000019ec  00001a80  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000019ec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000065b  00800126  00800126  00001aa6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001aa6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ad8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000468  00000000  00000000  00001b18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005041  00000000  00000000  00001f80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001496  00000000  00000000  00006fc1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002da7  00000000  00000000  00008457  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000cec  00000000  00000000  0000b200  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000187a  00000000  00000000  0000beec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004c2a  00000000  00000000  0000d766  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000458  00000000  00000000  00012390  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 5c 0c 	jmp	0x18b8	; 0x18b8 <__vector_1>
       8:	0c 94 89 0c 	jmp	0x1912	; 0x1912 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 9b 01 	jmp	0x336	; 0x336 <__vector_24>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ec ee       	ldi	r30, 0xEC	; 236
      7c:	f9 e1       	ldi	r31, 0x19	; 25
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a6 32       	cpi	r26, 0x26	; 38
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	27 e0       	ldi	r18, 0x07	; 7
      8c:	a6 e2       	ldi	r26, 0x26	; 38
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a1 38       	cpi	r26, 0x81	; 129
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 67 01 	call	0x2ce	; 0x2ce <main>
      9e:	0c 94 f4 0c 	jmp	0x19e8	; 0x19e8 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2c_initSlave>:
      a6:	ec eb       	ldi	r30, 0xBC	; 188
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	94 e0       	ldi	r25, 0x04	; 4
      ac:	90 83       	st	Z, r25
      ae:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7e00ba>
      b2:	84 ec       	ldi	r24, 0xC4	; 196
      b4:	80 83       	st	Z, r24
      b6:	80 81       	ld	r24, Z
      b8:	81 60       	ori	r24, 0x01	; 1
      ba:	80 83       	st	Z, r24
      bc:	08 95       	ret

000000be <LCD_Command>:
      be:	95 b1       	in	r25, 0x05	; 5
      c0:	93 70       	andi	r25, 0x03	; 3
      c2:	28 2f       	mov	r18, r24
      c4:	26 95       	lsr	r18
      c6:	26 95       	lsr	r18
      c8:	92 2b       	or	r25, r18
      ca:	95 b9       	out	0x05, r25	; 5
      cc:	28 98       	cbi	0x05, 0	; 5
      ce:	29 9a       	sbi	0x05, 1	; 5
      d0:	95 e0       	ldi	r25, 0x05	; 5
      d2:	9a 95       	dec	r25
      d4:	f1 f7       	brne	.-4      	; 0xd2 <LCD_Command+0x14>
      d6:	00 00       	nop
      d8:	29 98       	cbi	0x05, 1	; 5
      da:	ef e1       	ldi	r30, 0x1F	; 31
      dc:	f3 e0       	ldi	r31, 0x03	; 3
      de:	31 97       	sbiw	r30, 0x01	; 1
      e0:	f1 f7       	brne	.-4      	; 0xde <LCD_Command+0x20>
      e2:	00 c0       	rjmp	.+0      	; 0xe4 <LCD_Command+0x26>
      e4:	00 00       	nop
      e6:	95 b1       	in	r25, 0x05	; 5
      e8:	93 70       	andi	r25, 0x03	; 3
      ea:	88 0f       	add	r24, r24
      ec:	88 0f       	add	r24, r24
      ee:	89 2b       	or	r24, r25
      f0:	85 b9       	out	0x05, r24	; 5
      f2:	29 9a       	sbi	0x05, 1	; 5
      f4:	f5 e0       	ldi	r31, 0x05	; 5
      f6:	fa 95       	dec	r31
      f8:	f1 f7       	brne	.-4      	; 0xf6 <LCD_Command+0x38>
      fa:	00 00       	nop
      fc:	29 98       	cbi	0x05, 1	; 5
      fe:	8f e3       	ldi	r24, 0x3F	; 63
     100:	9f e1       	ldi	r25, 0x1F	; 31
     102:	01 97       	sbiw	r24, 0x01	; 1
     104:	f1 f7       	brne	.-4      	; 0x102 <LCD_Command+0x44>
     106:	00 c0       	rjmp	.+0      	; 0x108 <LCD_Command+0x4a>
     108:	00 00       	nop
     10a:	08 95       	ret

0000010c <LCD_Char>:
     10c:	95 b1       	in	r25, 0x05	; 5
     10e:	93 70       	andi	r25, 0x03	; 3
     110:	28 2f       	mov	r18, r24
     112:	26 95       	lsr	r18
     114:	26 95       	lsr	r18
     116:	92 2b       	or	r25, r18
     118:	95 b9       	out	0x05, r25	; 5
     11a:	28 9a       	sbi	0x05, 0	; 5
     11c:	29 9a       	sbi	0x05, 1	; 5
     11e:	95 e0       	ldi	r25, 0x05	; 5
     120:	9a 95       	dec	r25
     122:	f1 f7       	brne	.-4      	; 0x120 <LCD_Char+0x14>
     124:	00 00       	nop
     126:	29 98       	cbi	0x05, 1	; 5
     128:	ef e1       	ldi	r30, 0x1F	; 31
     12a:	f3 e0       	ldi	r31, 0x03	; 3
     12c:	31 97       	sbiw	r30, 0x01	; 1
     12e:	f1 f7       	brne	.-4      	; 0x12c <LCD_Char+0x20>
     130:	00 c0       	rjmp	.+0      	; 0x132 <LCD_Char+0x26>
     132:	00 00       	nop
     134:	95 b1       	in	r25, 0x05	; 5
     136:	93 70       	andi	r25, 0x03	; 3
     138:	88 0f       	add	r24, r24
     13a:	88 0f       	add	r24, r24
     13c:	89 2b       	or	r24, r25
     13e:	85 b9       	out	0x05, r24	; 5
     140:	29 9a       	sbi	0x05, 1	; 5
     142:	f5 e0       	ldi	r31, 0x05	; 5
     144:	fa 95       	dec	r31
     146:	f1 f7       	brne	.-4      	; 0x144 <LCD_Char+0x38>
     148:	00 00       	nop
     14a:	29 98       	cbi	0x05, 1	; 5
     14c:	8f e3       	ldi	r24, 0x3F	; 63
     14e:	9f e1       	ldi	r25, 0x1F	; 31
     150:	01 97       	sbiw	r24, 0x01	; 1
     152:	f1 f7       	brne	.-4      	; 0x150 <LCD_Char+0x44>
     154:	00 c0       	rjmp	.+0      	; 0x156 <LCD_Char+0x4a>
     156:	00 00       	nop
     158:	08 95       	ret

0000015a <LCD_Init>:
     15a:	8f ef       	ldi	r24, 0xFF	; 255
     15c:	84 b9       	out	0x04, r24	; 4
     15e:	2f ef       	ldi	r18, 0xFF	; 255
     160:	89 ef       	ldi	r24, 0xF9	; 249
     162:	90 e0       	ldi	r25, 0x00	; 0
     164:	21 50       	subi	r18, 0x01	; 1
     166:	80 40       	sbci	r24, 0x00	; 0
     168:	90 40       	sbci	r25, 0x00	; 0
     16a:	e1 f7       	brne	.-8      	; 0x164 <LCD_Init+0xa>
     16c:	00 c0       	rjmp	.+0      	; 0x16e <LCD_Init+0x14>
     16e:	00 00       	nop
     170:	82 e0       	ldi	r24, 0x02	; 2
     172:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
     176:	88 e2       	ldi	r24, 0x28	; 40
     178:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
     17c:	8c e0       	ldi	r24, 0x0C	; 12
     17e:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
     182:	86 e0       	ldi	r24, 0x06	; 6
     184:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
     188:	81 e0       	ldi	r24, 0x01	; 1
     18a:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
     18e:	8f e3       	ldi	r24, 0x3F	; 63
     190:	9f e1       	ldi	r25, 0x1F	; 31
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <LCD_Init+0x38>
     196:	00 c0       	rjmp	.+0      	; 0x198 <LCD_Init+0x3e>
     198:	00 00       	nop
     19a:	08 95       	ret

0000019c <LCD_String>:
     19c:	cf 93       	push	r28
     19e:	df 93       	push	r29
     1a0:	ec 01       	movw	r28, r24
     1a2:	88 81       	ld	r24, Y
     1a4:	88 23       	and	r24, r24
     1a6:	31 f0       	breq	.+12     	; 0x1b4 <LCD_String+0x18>
     1a8:	21 96       	adiw	r28, 0x01	; 1
     1aa:	0e 94 86 00 	call	0x10c	; 0x10c <LCD_Char>
     1ae:	89 91       	ld	r24, Y+
     1b0:	81 11       	cpse	r24, r1
     1b2:	fb cf       	rjmp	.-10     	; 0x1aa <LCD_String+0xe>
     1b4:	df 91       	pop	r29
     1b6:	cf 91       	pop	r28
     1b8:	08 95       	ret

000001ba <LCD_Clear>:
     1ba:	81 e0       	ldi	r24, 0x01	; 1
     1bc:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1c0:	8f e3       	ldi	r24, 0x3F	; 63
     1c2:	9f e1       	ldi	r25, 0x1F	; 31
     1c4:	01 97       	sbiw	r24, 0x01	; 1
     1c6:	f1 f7       	brne	.-4      	; 0x1c4 <LCD_Clear+0xa>
     1c8:	00 c0       	rjmp	.+0      	; 0x1ca <LCD_Clear+0x10>
     1ca:	00 00       	nop
     1cc:	80 e8       	ldi	r24, 0x80	; 128
     1ce:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
     1d2:	08 95       	ret

000001d4 <PWM0_setDutyCycle>:
     1d4:	87 bd       	out	0x27, r24	; 39
     1d6:	08 95       	ret

000001d8 <PWM1_setDutyCycle>:
     1d8:	88 bd       	out	0x28, r24	; 40
     1da:	08 95       	ret

000001dc <PWM0_ClockWise>:
     1dc:	58 9a       	sbi	0x0b, 0	; 11
     1de:	59 98       	cbi	0x0b, 1	; 11
     1e0:	08 95       	ret

000001e2 <PWM1_AntiClockWise>:
     1e2:	5f 9a       	sbi	0x0b, 7	; 11
     1e4:	5c 98       	cbi	0x0b, 4	; 11
     1e6:	08 95       	ret

000001e8 <PWM_start>:
     1e8:	8a b1       	in	r24, 0x0a	; 10
     1ea:	83 6f       	ori	r24, 0xF3	; 243
     1ec:	8a b9       	out	0x0a, r24	; 10
     1ee:	84 b5       	in	r24, 0x24	; 36
     1f0:	80 6a       	ori	r24, 0xA0	; 160
     1f2:	84 bd       	out	0x24, r24	; 36
     1f4:	84 b5       	in	r24, 0x24	; 36
     1f6:	81 60       	ori	r24, 0x01	; 1
     1f8:	84 bd       	out	0x24, r24	; 36
     1fa:	85 b5       	in	r24, 0x25	; 37
     1fc:	82 60       	ori	r24, 0x02	; 2
     1fe:	85 bd       	out	0x25, r24	; 37
     200:	8f ef       	ldi	r24, 0xFF	; 255
     202:	87 bd       	out	0x27, r24	; 39
     204:	88 bd       	out	0x28, r24	; 40
     206:	0e 94 ee 00 	call	0x1dc	; 0x1dc <PWM0_ClockWise>
     20a:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <PWM1_AntiClockWise>
     20e:	08 95       	ret

00000210 <task_PWM>:
		
	}
}
*/
void task_PWM()
{
     210:	cf 93       	push	r28
     212:	df 93       	push	r29
     214:	1f 92       	push	r1
     216:	cd b7       	in	r28, 0x3d	; 61
     218:	de b7       	in	r29, 0x3e	; 62
	PWM_start();
     21a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <PWM_start>
	const TickType_t xDelay = 100 / portTICK_PERIOD_MS;
	unsigned char data;

	for(;;)
	{
		if( uxQueueMessagesWaiting( xQueuePWM ) != 0 )
     21e:	80 91 7d 07 	lds	r24, 0x077D	; 0x80077d <xQueuePWM>
     222:	90 91 7e 07 	lds	r25, 0x077E	; 0x80077e <xQueuePWM+0x1>
     226:	0e 94 3d 07 	call	0xe7a	; 0xe7a <uxQueueMessagesWaiting>
     22a:	88 23       	and	r24, r24
     22c:	a9 f0       	breq	.+42     	; 0x258 <task_PWM+0x48>
		{
			xQueueReceive(xQueuePWM,&data,0);
     22e:	20 e0       	ldi	r18, 0x00	; 0
     230:	40 e0       	ldi	r20, 0x00	; 0
     232:	50 e0       	ldi	r21, 0x00	; 0
     234:	be 01       	movw	r22, r28
     236:	6f 5f       	subi	r22, 0xFF	; 255
     238:	7f 4f       	sbci	r23, 0xFF	; 255
     23a:	80 91 7d 07 	lds	r24, 0x077D	; 0x80077d <xQueuePWM>
     23e:	90 91 7e 07 	lds	r25, 0x077E	; 0x80077e <xQueuePWM+0x1>
     242:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <xQueueGenericReceive>
			if(data > 'd')
     246:	89 81       	ldd	r24, Y+1	; 0x01
     248:	85 36       	cpi	r24, 0x65	; 101
     24a:	30 f0       	brcs	.+12     	; 0x258 <task_PWM+0x48>
			{
				PWM0_setDutyCycle(0);
     24c:	80 e0       	ldi	r24, 0x00	; 0
     24e:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <PWM0_setDutyCycle>
				PWM1_setDutyCycle(0);
     252:	80 e0       	ldi	r24, 0x00	; 0
     254:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <PWM1_setDutyCycle>
			}
		}
		vTaskDelay( xDelay );
     258:	84 e6       	ldi	r24, 0x64	; 100
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	0e 94 22 0a 	call	0x1444	; 0x1444 <vTaskDelay>
	}
     260:	de cf       	rjmp	.-68     	; 0x21e <task_PWM+0xe>

00000262 <task_LCD>:

}
void task_LCD()
{
     262:	cf 93       	push	r28
     264:	df 93       	push	r29
     266:	cd b7       	in	r28, 0x3d	; 61
     268:	de b7       	in	r29, 0x3e	; 62
     26a:	2b 97       	sbiw	r28, 0x0b	; 11
     26c:	0f b6       	in	r0, 0x3f	; 63
     26e:	f8 94       	cli
     270:	de bf       	out	0x3e, r29	; 62
     272:	0f be       	out	0x3f, r0	; 63
     274:	cd bf       	out	0x3d, r28	; 61
	LCD_Init();
     276:	0e 94 ad 00 	call	0x15a	; 0x15a <LCD_Init>
	const TickType_t xDelay = 100 / portTICK_PERIOD_MS;
	unsigned char data;

	for(;;)
	{
		if( uxQueueMessagesWaiting( xQueueLCD ) != 0 )
     27a:	80 91 77 07 	lds	r24, 0x0777	; 0x800777 <xQueueLCD>
     27e:	90 91 78 07 	lds	r25, 0x0778	; 0x800778 <xQueueLCD+0x1>
     282:	0e 94 3d 07 	call	0xe7a	; 0xe7a <uxQueueMessagesWaiting>
     286:	88 23       	and	r24, r24
     288:	e9 f0       	breq	.+58     	; 0x2c4 <task_LCD+0x62>
		{
			xQueueReceive(xQueueLCD,&data,0);
     28a:	20 e0       	ldi	r18, 0x00	; 0
     28c:	40 e0       	ldi	r20, 0x00	; 0
     28e:	50 e0       	ldi	r21, 0x00	; 0
     290:	be 01       	movw	r22, r28
     292:	6f 5f       	subi	r22, 0xFF	; 255
     294:	7f 4f       	sbci	r23, 0xFF	; 255
     296:	80 91 77 07 	lds	r24, 0x0777	; 0x800777 <xQueueLCD>
     29a:	90 91 78 07 	lds	r25, 0x0778	; 0x800778 <xQueueLCD+0x1>
     29e:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <xQueueGenericReceive>
			LCD_Clear();
     2a2:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_Clear>
			if((data & 0x80))
     2a6:	89 81       	ldd	r24, Y+1	; 0x01
     2a8:	88 23       	and	r24, r24
     2aa:	54 f4       	brge	.+20     	; 0x2c0 <task_LCD+0x5e>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     2ac:	4a e0       	ldi	r20, 0x0A	; 10
     2ae:	be 01       	movw	r22, r28
     2b0:	6e 5f       	subi	r22, 0xFE	; 254
     2b2:	7f 4f       	sbci	r23, 0xFF	; 255
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	0e 94 bf 0c 	call	0x197e	; 0x197e <__itoa_ncheck>
			{
				char buffer[10];
				LCD_String((char *)itoa(data,buffer,10));
     2ba:	0e 94 ce 00 	call	0x19c	; 0x19c <LCD_String>
     2be:	02 c0       	rjmp	.+4      	; 0x2c4 <task_LCD+0x62>
			}
			else
			{
				LCD_Char(data);
     2c0:	0e 94 86 00 	call	0x10c	; 0x10c <LCD_Char>
			}
		}
		vTaskDelay( xDelay );
     2c4:	84 e6       	ldi	r24, 0x64	; 100
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	0e 94 22 0a 	call	0x1444	; 0x1444 <vTaskDelay>
	}
     2cc:	d6 cf       	rjmp	.-84     	; 0x27a <task_LCD+0x18>

000002ce <main>:
TaskHandle_t TaskHandle_2;

SemaphoreHandle_t sem;
int main(void)
{ 
	xTaskCreate(task_LCD,"task_LCD",0x100,NULL,0x01,NULL);
     2ce:	a1 2c       	mov	r10, r1
     2d0:	b1 2c       	mov	r11, r1
     2d2:	c1 2c       	mov	r12, r1
     2d4:	d1 2c       	mov	r13, r1
     2d6:	e1 2c       	mov	r14, r1
     2d8:	f1 2c       	mov	r15, r1
     2da:	01 e0       	ldi	r16, 0x01	; 1
     2dc:	20 e0       	ldi	r18, 0x00	; 0
     2de:	30 e0       	ldi	r19, 0x00	; 0
     2e0:	40 e0       	ldi	r20, 0x00	; 0
     2e2:	51 e0       	ldi	r21, 0x01	; 1
     2e4:	64 e0       	ldi	r22, 0x04	; 4
     2e6:	71 e0       	ldi	r23, 0x01	; 1
     2e8:	81 e3       	ldi	r24, 0x31	; 49
     2ea:	91 e0       	ldi	r25, 0x01	; 1
     2ec:	0e 94 9b 07 	call	0xf36	; 0xf36 <xTaskGenericCreate>
	xTaskCreate(task_PWM,"task_PWM",0x100,NULL,0x01,NULL);
     2f0:	20 e0       	ldi	r18, 0x00	; 0
     2f2:	30 e0       	ldi	r19, 0x00	; 0
     2f4:	40 e0       	ldi	r20, 0x00	; 0
     2f6:	51 e0       	ldi	r21, 0x01	; 1
     2f8:	6d e0       	ldi	r22, 0x0D	; 13
     2fa:	71 e0       	ldi	r23, 0x01	; 1
     2fc:	88 e0       	ldi	r24, 0x08	; 8
     2fe:	91 e0       	ldi	r25, 0x01	; 1
     300:	0e 94 9b 07 	call	0xf36	; 0xf36 <xTaskGenericCreate>
	xQueueLCD = xQueueCreate(0x0a,sizeof(unsigned char));
     304:	40 e0       	ldi	r20, 0x00	; 0
     306:	61 e0       	ldi	r22, 0x01	; 1
     308:	8a e0       	ldi	r24, 0x0A	; 10
     30a:	0e 94 ad 05 	call	0xb5a	; 0xb5a <xQueueGenericCreate>
     30e:	90 93 78 07 	sts	0x0778, r25	; 0x800778 <xQueueLCD+0x1>
     312:	80 93 77 07 	sts	0x0777, r24	; 0x800777 <xQueueLCD>
	xQueuePWM = xQueueCreate(0x0a,sizeof(unsigned char));
     316:	40 e0       	ldi	r20, 0x00	; 0
     318:	61 e0       	ldi	r22, 0x01	; 1
     31a:	8a e0       	ldi	r24, 0x0A	; 10
     31c:	0e 94 ad 05 	call	0xb5a	; 0xb5a <xQueueGenericCreate>
     320:	90 93 7e 07 	sts	0x077E, r25	; 0x80077e <xQueuePWM+0x1>
     324:	80 93 7d 07 	sts	0x077D, r24	; 0x80077d <xQueuePWM>
	i2c_initSlave(0x02);
     328:	82 e0       	ldi	r24, 0x02	; 2
     32a:	0e 94 53 00 	call	0xa6	; 0xa6 <i2c_initSlave>
	vTaskStartScheduler();
     32e:	0e 94 ae 08 	call	0x115c	; 0x115c <vTaskStartScheduler>
	sei();
     332:	78 94       	sei
     334:	ff cf       	rjmp	.-2      	; 0x334 <main+0x66>

00000336 <__vector_24>:
		vTaskDelay( xDelay );
	}
}

ISR (TWI_vect)
{
     336:	1f 92       	push	r1
     338:	0f 92       	push	r0
     33a:	0f b6       	in	r0, 0x3f	; 63
     33c:	0f 92       	push	r0
     33e:	11 24       	eor	r1, r1
     340:	2f 93       	push	r18
     342:	3f 93       	push	r19
     344:	4f 93       	push	r20
     346:	5f 93       	push	r21
     348:	6f 93       	push	r22
     34a:	7f 93       	push	r23
     34c:	8f 93       	push	r24
     34e:	9f 93       	push	r25
     350:	af 93       	push	r26
     352:	bf 93       	push	r27
     354:	ef 93       	push	r30
     356:	ff 93       	push	r31
     358:	cf 93       	push	r28
     35a:	df 93       	push	r29
     35c:	1f 92       	push	r1
     35e:	cd b7       	in	r28, 0x3d	; 61
     360:	de b7       	in	r29, 0x3e	; 62
	if(((TWSR & 0xF8))==0b01100000) //slaved addressed status
     362:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     366:	88 7f       	andi	r24, 0xF8	; 248
     368:	80 36       	cpi	r24, 0x60	; 96
     36a:	31 f4       	brne	.+12     	; 0x378 <__vector_24+0x42>
	{
		TWCR |= (1<<TWINT) ;
     36c:	ec eb       	ldi	r30, 0xBC	; 188
     36e:	f0 e0       	ldi	r31, 0x00	; 0
     370:	80 81       	ld	r24, Z
     372:	80 68       	ori	r24, 0x80	; 128
     374:	80 83       	st	Z, r24
     376:	25 c0       	rjmp	.+74     	; 0x3c2 <__vector_24+0x8c>
	}
	else if (((TWSR & 0xF8))==0b10000000) //slaved read status
     378:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     37c:	88 7f       	andi	r24, 0xF8	; 248
     37e:	80 38       	cpi	r24, 0x80	; 128
     380:	01 f5       	brne	.+64     	; 0x3c2 <__vector_24+0x8c>
	{
		unsigned char data = TWDR;
     382:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     386:	89 83       	std	Y+1, r24	; 0x01
		xQueueSendToFront(xQueueLCD,&data,0);
     388:	21 e0       	ldi	r18, 0x01	; 1
     38a:	40 e0       	ldi	r20, 0x00	; 0
     38c:	50 e0       	ldi	r21, 0x00	; 0
     38e:	be 01       	movw	r22, r28
     390:	6f 5f       	subi	r22, 0xFF	; 255
     392:	7f 4f       	sbci	r23, 0xFF	; 255
     394:	80 91 77 07 	lds	r24, 0x0777	; 0x800777 <xQueueLCD>
     398:	90 91 78 07 	lds	r25, 0x0778	; 0x800778 <xQueueLCD+0x1>
     39c:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <xQueueGenericSend>
		xQueueSendToFront(xQueuePWM,&data,0);
     3a0:	21 e0       	ldi	r18, 0x01	; 1
     3a2:	40 e0       	ldi	r20, 0x00	; 0
     3a4:	50 e0       	ldi	r21, 0x00	; 0
     3a6:	be 01       	movw	r22, r28
     3a8:	6f 5f       	subi	r22, 0xFF	; 255
     3aa:	7f 4f       	sbci	r23, 0xFF	; 255
     3ac:	80 91 7d 07 	lds	r24, 0x077D	; 0x80077d <xQueuePWM>
     3b0:	90 91 7e 07 	lds	r25, 0x077E	; 0x80077e <xQueuePWM+0x1>
     3b4:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <xQueueGenericSend>
		TWCR |= (1<<TWINT) ;
     3b8:	ec eb       	ldi	r30, 0xBC	; 188
     3ba:	f0 e0       	ldi	r31, 0x00	; 0
     3bc:	80 81       	ld	r24, Z
     3be:	80 68       	ori	r24, 0x80	; 128
     3c0:	80 83       	st	Z, r24
	}
}
     3c2:	0f 90       	pop	r0
     3c4:	df 91       	pop	r29
     3c6:	cf 91       	pop	r28
     3c8:	ff 91       	pop	r31
     3ca:	ef 91       	pop	r30
     3cc:	bf 91       	pop	r27
     3ce:	af 91       	pop	r26
     3d0:	9f 91       	pop	r25
     3d2:	8f 91       	pop	r24
     3d4:	7f 91       	pop	r23
     3d6:	6f 91       	pop	r22
     3d8:	5f 91       	pop	r21
     3da:	4f 91       	pop	r20
     3dc:	3f 91       	pop	r19
     3de:	2f 91       	pop	r18
     3e0:	0f 90       	pop	r0
     3e2:	0f be       	out	0x3f, r0	; 63
     3e4:	0f 90       	pop	r0
     3e6:	1f 90       	pop	r1
     3e8:	18 95       	reti

000003ea <vListInitialise>:
     3ea:	fc 01       	movw	r30, r24
     3ec:	03 96       	adiw	r24, 0x03	; 3
     3ee:	92 83       	std	Z+2, r25	; 0x02
     3f0:	81 83       	std	Z+1, r24	; 0x01
     3f2:	2f ef       	ldi	r18, 0xFF	; 255
     3f4:	3f ef       	ldi	r19, 0xFF	; 255
     3f6:	34 83       	std	Z+4, r19	; 0x04
     3f8:	23 83       	std	Z+3, r18	; 0x03
     3fa:	96 83       	std	Z+6, r25	; 0x06
     3fc:	85 83       	std	Z+5, r24	; 0x05
     3fe:	90 87       	std	Z+8, r25	; 0x08
     400:	87 83       	std	Z+7, r24	; 0x07
     402:	10 82       	st	Z, r1
     404:	08 95       	ret

00000406 <vListInitialiseItem>:
     406:	fc 01       	movw	r30, r24
     408:	11 86       	std	Z+9, r1	; 0x09
     40a:	10 86       	std	Z+8, r1	; 0x08
     40c:	08 95       	ret

0000040e <vListInsertEnd>:
     40e:	cf 93       	push	r28
     410:	df 93       	push	r29
     412:	9c 01       	movw	r18, r24
     414:	fb 01       	movw	r30, r22
     416:	dc 01       	movw	r26, r24
     418:	11 96       	adiw	r26, 0x01	; 1
     41a:	cd 91       	ld	r28, X+
     41c:	dc 91       	ld	r29, X
     41e:	12 97       	sbiw	r26, 0x02	; 2
     420:	d3 83       	std	Z+3, r29	; 0x03
     422:	c2 83       	std	Z+2, r28	; 0x02
     424:	8c 81       	ldd	r24, Y+4	; 0x04
     426:	9d 81       	ldd	r25, Y+5	; 0x05
     428:	95 83       	std	Z+5, r25	; 0x05
     42a:	84 83       	std	Z+4, r24	; 0x04
     42c:	8c 81       	ldd	r24, Y+4	; 0x04
     42e:	9d 81       	ldd	r25, Y+5	; 0x05
     430:	dc 01       	movw	r26, r24
     432:	13 96       	adiw	r26, 0x03	; 3
     434:	7c 93       	st	X, r23
     436:	6e 93       	st	-X, r22
     438:	12 97       	sbiw	r26, 0x02	; 2
     43a:	7d 83       	std	Y+5, r23	; 0x05
     43c:	6c 83       	std	Y+4, r22	; 0x04
     43e:	31 87       	std	Z+9, r19	; 0x09
     440:	20 87       	std	Z+8, r18	; 0x08
     442:	f9 01       	movw	r30, r18
     444:	80 81       	ld	r24, Z
     446:	8f 5f       	subi	r24, 0xFF	; 255
     448:	80 83       	st	Z, r24
     44a:	df 91       	pop	r29
     44c:	cf 91       	pop	r28
     44e:	08 95       	ret

00000450 <vListInsert>:
     450:	cf 93       	push	r28
     452:	df 93       	push	r29
     454:	eb 01       	movw	r28, r22
     456:	48 81       	ld	r20, Y
     458:	59 81       	ldd	r21, Y+1	; 0x01
     45a:	4f 3f       	cpi	r20, 0xFF	; 255
     45c:	2f ef       	ldi	r18, 0xFF	; 255
     45e:	52 07       	cpc	r21, r18
     460:	21 f4       	brne	.+8      	; 0x46a <vListInsert+0x1a>
     462:	fc 01       	movw	r30, r24
     464:	a7 81       	ldd	r26, Z+7	; 0x07
     466:	b0 85       	ldd	r27, Z+8	; 0x08
     468:	0d c0       	rjmp	.+26     	; 0x484 <vListInsert+0x34>
     46a:	dc 01       	movw	r26, r24
     46c:	13 96       	adiw	r26, 0x03	; 3
     46e:	01 c0       	rjmp	.+2      	; 0x472 <vListInsert+0x22>
     470:	df 01       	movw	r26, r30
     472:	12 96       	adiw	r26, 0x02	; 2
     474:	ed 91       	ld	r30, X+
     476:	fc 91       	ld	r31, X
     478:	13 97       	sbiw	r26, 0x03	; 3
     47a:	20 81       	ld	r18, Z
     47c:	31 81       	ldd	r19, Z+1	; 0x01
     47e:	42 17       	cp	r20, r18
     480:	53 07       	cpc	r21, r19
     482:	b0 f7       	brcc	.-20     	; 0x470 <vListInsert+0x20>
     484:	12 96       	adiw	r26, 0x02	; 2
     486:	ed 91       	ld	r30, X+
     488:	fc 91       	ld	r31, X
     48a:	13 97       	sbiw	r26, 0x03	; 3
     48c:	fb 83       	std	Y+3, r31	; 0x03
     48e:	ea 83       	std	Y+2, r30	; 0x02
     490:	d5 83       	std	Z+5, r29	; 0x05
     492:	c4 83       	std	Z+4, r28	; 0x04
     494:	bd 83       	std	Y+5, r27	; 0x05
     496:	ac 83       	std	Y+4, r26	; 0x04
     498:	13 96       	adiw	r26, 0x03	; 3
     49a:	dc 93       	st	X, r29
     49c:	ce 93       	st	-X, r28
     49e:	12 97       	sbiw	r26, 0x02	; 2
     4a0:	99 87       	std	Y+9, r25	; 0x09
     4a2:	88 87       	std	Y+8, r24	; 0x08
     4a4:	fc 01       	movw	r30, r24
     4a6:	20 81       	ld	r18, Z
     4a8:	2f 5f       	subi	r18, 0xFF	; 255
     4aa:	20 83       	st	Z, r18
     4ac:	df 91       	pop	r29
     4ae:	cf 91       	pop	r28
     4b0:	08 95       	ret

000004b2 <uxListRemove>:
     4b2:	cf 93       	push	r28
     4b4:	df 93       	push	r29
     4b6:	fc 01       	movw	r30, r24
     4b8:	a0 85       	ldd	r26, Z+8	; 0x08
     4ba:	b1 85       	ldd	r27, Z+9	; 0x09
     4bc:	c2 81       	ldd	r28, Z+2	; 0x02
     4be:	d3 81       	ldd	r29, Z+3	; 0x03
     4c0:	84 81       	ldd	r24, Z+4	; 0x04
     4c2:	95 81       	ldd	r25, Z+5	; 0x05
     4c4:	9d 83       	std	Y+5, r25	; 0x05
     4c6:	8c 83       	std	Y+4, r24	; 0x04
     4c8:	c4 81       	ldd	r28, Z+4	; 0x04
     4ca:	d5 81       	ldd	r29, Z+5	; 0x05
     4cc:	82 81       	ldd	r24, Z+2	; 0x02
     4ce:	93 81       	ldd	r25, Z+3	; 0x03
     4d0:	9b 83       	std	Y+3, r25	; 0x03
     4d2:	8a 83       	std	Y+2, r24	; 0x02
     4d4:	11 96       	adiw	r26, 0x01	; 1
     4d6:	8d 91       	ld	r24, X+
     4d8:	9c 91       	ld	r25, X
     4da:	12 97       	sbiw	r26, 0x02	; 2
     4dc:	e8 17       	cp	r30, r24
     4de:	f9 07       	cpc	r31, r25
     4e0:	31 f4       	brne	.+12     	; 0x4ee <uxListRemove+0x3c>
     4e2:	84 81       	ldd	r24, Z+4	; 0x04
     4e4:	95 81       	ldd	r25, Z+5	; 0x05
     4e6:	12 96       	adiw	r26, 0x02	; 2
     4e8:	9c 93       	st	X, r25
     4ea:	8e 93       	st	-X, r24
     4ec:	11 97       	sbiw	r26, 0x01	; 1
     4ee:	11 86       	std	Z+9, r1	; 0x09
     4f0:	10 86       	std	Z+8, r1	; 0x08
     4f2:	8c 91       	ld	r24, X
     4f4:	81 50       	subi	r24, 0x01	; 1
     4f6:	8c 93       	st	X, r24
     4f8:	df 91       	pop	r29
     4fa:	cf 91       	pop	r28
     4fc:	08 95       	ret

000004fe <pxPortInitialiseStack>:
     4fe:	31 e1       	ldi	r19, 0x11	; 17
     500:	fc 01       	movw	r30, r24
     502:	30 83       	st	Z, r19
     504:	31 97       	sbiw	r30, 0x01	; 1
     506:	22 e2       	ldi	r18, 0x22	; 34
     508:	20 83       	st	Z, r18
     50a:	31 97       	sbiw	r30, 0x01	; 1
     50c:	a3 e3       	ldi	r26, 0x33	; 51
     50e:	a0 83       	st	Z, r26
     510:	31 97       	sbiw	r30, 0x01	; 1
     512:	60 83       	st	Z, r22
     514:	31 97       	sbiw	r30, 0x01	; 1
     516:	70 83       	st	Z, r23
     518:	31 97       	sbiw	r30, 0x01	; 1
     51a:	10 82       	st	Z, r1
     51c:	31 97       	sbiw	r30, 0x01	; 1
     51e:	60 e8       	ldi	r22, 0x80	; 128
     520:	60 83       	st	Z, r22
     522:	31 97       	sbiw	r30, 0x01	; 1
     524:	10 82       	st	Z, r1
     526:	31 97       	sbiw	r30, 0x01	; 1
     528:	62 e0       	ldi	r22, 0x02	; 2
     52a:	60 83       	st	Z, r22
     52c:	31 97       	sbiw	r30, 0x01	; 1
     52e:	63 e0       	ldi	r22, 0x03	; 3
     530:	60 83       	st	Z, r22
     532:	31 97       	sbiw	r30, 0x01	; 1
     534:	64 e0       	ldi	r22, 0x04	; 4
     536:	60 83       	st	Z, r22
     538:	31 97       	sbiw	r30, 0x01	; 1
     53a:	65 e0       	ldi	r22, 0x05	; 5
     53c:	60 83       	st	Z, r22
     53e:	31 97       	sbiw	r30, 0x01	; 1
     540:	66 e0       	ldi	r22, 0x06	; 6
     542:	60 83       	st	Z, r22
     544:	31 97       	sbiw	r30, 0x01	; 1
     546:	67 e0       	ldi	r22, 0x07	; 7
     548:	60 83       	st	Z, r22
     54a:	31 97       	sbiw	r30, 0x01	; 1
     54c:	68 e0       	ldi	r22, 0x08	; 8
     54e:	60 83       	st	Z, r22
     550:	31 97       	sbiw	r30, 0x01	; 1
     552:	69 e0       	ldi	r22, 0x09	; 9
     554:	60 83       	st	Z, r22
     556:	31 97       	sbiw	r30, 0x01	; 1
     558:	60 e1       	ldi	r22, 0x10	; 16
     55a:	60 83       	st	Z, r22
     55c:	31 97       	sbiw	r30, 0x01	; 1
     55e:	30 83       	st	Z, r19
     560:	31 97       	sbiw	r30, 0x01	; 1
     562:	32 e1       	ldi	r19, 0x12	; 18
     564:	30 83       	st	Z, r19
     566:	31 97       	sbiw	r30, 0x01	; 1
     568:	33 e1       	ldi	r19, 0x13	; 19
     56a:	30 83       	st	Z, r19
     56c:	31 97       	sbiw	r30, 0x01	; 1
     56e:	34 e1       	ldi	r19, 0x14	; 20
     570:	30 83       	st	Z, r19
     572:	31 97       	sbiw	r30, 0x01	; 1
     574:	35 e1       	ldi	r19, 0x15	; 21
     576:	30 83       	st	Z, r19
     578:	31 97       	sbiw	r30, 0x01	; 1
     57a:	36 e1       	ldi	r19, 0x16	; 22
     57c:	30 83       	st	Z, r19
     57e:	31 97       	sbiw	r30, 0x01	; 1
     580:	37 e1       	ldi	r19, 0x17	; 23
     582:	30 83       	st	Z, r19
     584:	31 97       	sbiw	r30, 0x01	; 1
     586:	38 e1       	ldi	r19, 0x18	; 24
     588:	30 83       	st	Z, r19
     58a:	31 97       	sbiw	r30, 0x01	; 1
     58c:	39 e1       	ldi	r19, 0x19	; 25
     58e:	30 83       	st	Z, r19
     590:	31 97       	sbiw	r30, 0x01	; 1
     592:	30 e2       	ldi	r19, 0x20	; 32
     594:	30 83       	st	Z, r19
     596:	31 97       	sbiw	r30, 0x01	; 1
     598:	31 e2       	ldi	r19, 0x21	; 33
     59a:	30 83       	st	Z, r19
     59c:	31 97       	sbiw	r30, 0x01	; 1
     59e:	20 83       	st	Z, r18
     5a0:	31 97       	sbiw	r30, 0x01	; 1
     5a2:	23 e2       	ldi	r18, 0x23	; 35
     5a4:	20 83       	st	Z, r18
     5a6:	31 97       	sbiw	r30, 0x01	; 1
     5a8:	40 83       	st	Z, r20
     5aa:	31 97       	sbiw	r30, 0x01	; 1
     5ac:	50 83       	st	Z, r21
     5ae:	31 97       	sbiw	r30, 0x01	; 1
     5b0:	26 e2       	ldi	r18, 0x26	; 38
     5b2:	20 83       	st	Z, r18
     5b4:	31 97       	sbiw	r30, 0x01	; 1
     5b6:	27 e2       	ldi	r18, 0x27	; 39
     5b8:	20 83       	st	Z, r18
     5ba:	31 97       	sbiw	r30, 0x01	; 1
     5bc:	28 e2       	ldi	r18, 0x28	; 40
     5be:	20 83       	st	Z, r18
     5c0:	31 97       	sbiw	r30, 0x01	; 1
     5c2:	29 e2       	ldi	r18, 0x29	; 41
     5c4:	20 83       	st	Z, r18
     5c6:	31 97       	sbiw	r30, 0x01	; 1
     5c8:	20 e3       	ldi	r18, 0x30	; 48
     5ca:	20 83       	st	Z, r18
     5cc:	31 97       	sbiw	r30, 0x01	; 1
     5ce:	21 e3       	ldi	r18, 0x31	; 49
     5d0:	20 83       	st	Z, r18
     5d2:	86 97       	sbiw	r24, 0x26	; 38
     5d4:	08 95       	ret

000005d6 <xPortStartScheduler>:
     5d6:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     5da:	8c e7       	ldi	r24, 0x7C	; 124
     5dc:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     5e0:	8b e0       	ldi	r24, 0x0B	; 11
     5e2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     5e6:	ef e6       	ldi	r30, 0x6F	; 111
     5e8:	f0 e0       	ldi	r31, 0x00	; 0
     5ea:	80 81       	ld	r24, Z
     5ec:	82 60       	ori	r24, 0x02	; 2
     5ee:	80 83       	st	Z, r24
     5f0:	a0 91 6d 07 	lds	r26, 0x076D	; 0x80076d <pxCurrentTCB>
     5f4:	b0 91 6e 07 	lds	r27, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
     5f8:	cd 91       	ld	r28, X+
     5fa:	cd bf       	out	0x3d, r28	; 61
     5fc:	dd 91       	ld	r29, X+
     5fe:	de bf       	out	0x3e, r29	; 62
     600:	ff 91       	pop	r31
     602:	ef 91       	pop	r30
     604:	df 91       	pop	r29
     606:	cf 91       	pop	r28
     608:	bf 91       	pop	r27
     60a:	af 91       	pop	r26
     60c:	9f 91       	pop	r25
     60e:	8f 91       	pop	r24
     610:	7f 91       	pop	r23
     612:	6f 91       	pop	r22
     614:	5f 91       	pop	r21
     616:	4f 91       	pop	r20
     618:	3f 91       	pop	r19
     61a:	2f 91       	pop	r18
     61c:	1f 91       	pop	r17
     61e:	0f 91       	pop	r16
     620:	ff 90       	pop	r15
     622:	ef 90       	pop	r14
     624:	df 90       	pop	r13
     626:	cf 90       	pop	r12
     628:	bf 90       	pop	r11
     62a:	af 90       	pop	r10
     62c:	9f 90       	pop	r9
     62e:	8f 90       	pop	r8
     630:	7f 90       	pop	r7
     632:	6f 90       	pop	r6
     634:	5f 90       	pop	r5
     636:	4f 90       	pop	r4
     638:	3f 90       	pop	r3
     63a:	2f 90       	pop	r2
     63c:	1f 90       	pop	r1
     63e:	0f 90       	pop	r0
     640:	0f be       	out	0x3f, r0	; 63
     642:	0f 90       	pop	r0
     644:	08 95       	ret
     646:	81 e0       	ldi	r24, 0x01	; 1
     648:	08 95       	ret

0000064a <vPortYield>:
     64a:	0f 92       	push	r0
     64c:	0f b6       	in	r0, 0x3f	; 63
     64e:	f8 94       	cli
     650:	0f 92       	push	r0
     652:	1f 92       	push	r1
     654:	11 24       	eor	r1, r1
     656:	2f 92       	push	r2
     658:	3f 92       	push	r3
     65a:	4f 92       	push	r4
     65c:	5f 92       	push	r5
     65e:	6f 92       	push	r6
     660:	7f 92       	push	r7
     662:	8f 92       	push	r8
     664:	9f 92       	push	r9
     666:	af 92       	push	r10
     668:	bf 92       	push	r11
     66a:	cf 92       	push	r12
     66c:	df 92       	push	r13
     66e:	ef 92       	push	r14
     670:	ff 92       	push	r15
     672:	0f 93       	push	r16
     674:	1f 93       	push	r17
     676:	2f 93       	push	r18
     678:	3f 93       	push	r19
     67a:	4f 93       	push	r20
     67c:	5f 93       	push	r21
     67e:	6f 93       	push	r22
     680:	7f 93       	push	r23
     682:	8f 93       	push	r24
     684:	9f 93       	push	r25
     686:	af 93       	push	r26
     688:	bf 93       	push	r27
     68a:	cf 93       	push	r28
     68c:	df 93       	push	r29
     68e:	ef 93       	push	r30
     690:	ff 93       	push	r31
     692:	a0 91 6d 07 	lds	r26, 0x076D	; 0x80076d <pxCurrentTCB>
     696:	b0 91 6e 07 	lds	r27, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
     69a:	0d b6       	in	r0, 0x3d	; 61
     69c:	0d 92       	st	X+, r0
     69e:	0e b6       	in	r0, 0x3e	; 62
     6a0:	0d 92       	st	X+, r0
     6a2:	0e 94 7f 0a 	call	0x14fe	; 0x14fe <vTaskSwitchContext>
     6a6:	a0 91 6d 07 	lds	r26, 0x076D	; 0x80076d <pxCurrentTCB>
     6aa:	b0 91 6e 07 	lds	r27, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
     6ae:	cd 91       	ld	r28, X+
     6b0:	cd bf       	out	0x3d, r28	; 61
     6b2:	dd 91       	ld	r29, X+
     6b4:	de bf       	out	0x3e, r29	; 62
     6b6:	ff 91       	pop	r31
     6b8:	ef 91       	pop	r30
     6ba:	df 91       	pop	r29
     6bc:	cf 91       	pop	r28
     6be:	bf 91       	pop	r27
     6c0:	af 91       	pop	r26
     6c2:	9f 91       	pop	r25
     6c4:	8f 91       	pop	r24
     6c6:	7f 91       	pop	r23
     6c8:	6f 91       	pop	r22
     6ca:	5f 91       	pop	r21
     6cc:	4f 91       	pop	r20
     6ce:	3f 91       	pop	r19
     6d0:	2f 91       	pop	r18
     6d2:	1f 91       	pop	r17
     6d4:	0f 91       	pop	r16
     6d6:	ff 90       	pop	r15
     6d8:	ef 90       	pop	r14
     6da:	df 90       	pop	r13
     6dc:	cf 90       	pop	r12
     6de:	bf 90       	pop	r11
     6e0:	af 90       	pop	r10
     6e2:	9f 90       	pop	r9
     6e4:	8f 90       	pop	r8
     6e6:	7f 90       	pop	r7
     6e8:	6f 90       	pop	r6
     6ea:	5f 90       	pop	r5
     6ec:	4f 90       	pop	r4
     6ee:	3f 90       	pop	r3
     6f0:	2f 90       	pop	r2
     6f2:	1f 90       	pop	r1
     6f4:	0f 90       	pop	r0
     6f6:	0f be       	out	0x3f, r0	; 63
     6f8:	0f 90       	pop	r0
     6fa:	08 95       	ret

000006fc <vPortYieldFromTick>:
     6fc:	0f 92       	push	r0
     6fe:	0f b6       	in	r0, 0x3f	; 63
     700:	f8 94       	cli
     702:	0f 92       	push	r0
     704:	1f 92       	push	r1
     706:	11 24       	eor	r1, r1
     708:	2f 92       	push	r2
     70a:	3f 92       	push	r3
     70c:	4f 92       	push	r4
     70e:	5f 92       	push	r5
     710:	6f 92       	push	r6
     712:	7f 92       	push	r7
     714:	8f 92       	push	r8
     716:	9f 92       	push	r9
     718:	af 92       	push	r10
     71a:	bf 92       	push	r11
     71c:	cf 92       	push	r12
     71e:	df 92       	push	r13
     720:	ef 92       	push	r14
     722:	ff 92       	push	r15
     724:	0f 93       	push	r16
     726:	1f 93       	push	r17
     728:	2f 93       	push	r18
     72a:	3f 93       	push	r19
     72c:	4f 93       	push	r20
     72e:	5f 93       	push	r21
     730:	6f 93       	push	r22
     732:	7f 93       	push	r23
     734:	8f 93       	push	r24
     736:	9f 93       	push	r25
     738:	af 93       	push	r26
     73a:	bf 93       	push	r27
     73c:	cf 93       	push	r28
     73e:	df 93       	push	r29
     740:	ef 93       	push	r30
     742:	ff 93       	push	r31
     744:	a0 91 6d 07 	lds	r26, 0x076D	; 0x80076d <pxCurrentTCB>
     748:	b0 91 6e 07 	lds	r27, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
     74c:	0d b6       	in	r0, 0x3d	; 61
     74e:	0d 92       	st	X+, r0
     750:	0e b6       	in	r0, 0x3e	; 62
     752:	0d 92       	st	X+, r0
     754:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <xTaskIncrementTick>
     758:	81 11       	cpse	r24, r1
     75a:	0e 94 7f 0a 	call	0x14fe	; 0x14fe <vTaskSwitchContext>
     75e:	a0 91 6d 07 	lds	r26, 0x076D	; 0x80076d <pxCurrentTCB>
     762:	b0 91 6e 07 	lds	r27, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
     766:	cd 91       	ld	r28, X+
     768:	cd bf       	out	0x3d, r28	; 61
     76a:	dd 91       	ld	r29, X+
     76c:	de bf       	out	0x3e, r29	; 62
     76e:	ff 91       	pop	r31
     770:	ef 91       	pop	r30
     772:	df 91       	pop	r29
     774:	cf 91       	pop	r28
     776:	bf 91       	pop	r27
     778:	af 91       	pop	r26
     77a:	9f 91       	pop	r25
     77c:	8f 91       	pop	r24
     77e:	7f 91       	pop	r23
     780:	6f 91       	pop	r22
     782:	5f 91       	pop	r21
     784:	4f 91       	pop	r20
     786:	3f 91       	pop	r19
     788:	2f 91       	pop	r18
     78a:	1f 91       	pop	r17
     78c:	0f 91       	pop	r16
     78e:	ff 90       	pop	r15
     790:	ef 90       	pop	r14
     792:	df 90       	pop	r13
     794:	cf 90       	pop	r12
     796:	bf 90       	pop	r11
     798:	af 90       	pop	r10
     79a:	9f 90       	pop	r9
     79c:	8f 90       	pop	r8
     79e:	7f 90       	pop	r7
     7a0:	6f 90       	pop	r6
     7a2:	5f 90       	pop	r5
     7a4:	4f 90       	pop	r4
     7a6:	3f 90       	pop	r3
     7a8:	2f 90       	pop	r2
     7aa:	1f 90       	pop	r1
     7ac:	0f 90       	pop	r0
     7ae:	0f be       	out	0x3f, r0	; 63
     7b0:	0f 90       	pop	r0
     7b2:	08 95       	ret

000007b4 <__vector_11>:
     7b4:	0e 94 7e 03 	call	0x6fc	; 0x6fc <vPortYieldFromTick>
     7b8:	18 95       	reti

000007ba <pvPortMalloc>:
     7ba:	0f 93       	push	r16
     7bc:	1f 93       	push	r17
     7be:	cf 93       	push	r28
     7c0:	df 93       	push	r29
     7c2:	ec 01       	movw	r28, r24
     7c4:	0e 94 dd 08 	call	0x11ba	; 0x11ba <vTaskSuspendAll>
     7c8:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
     7cc:	81 11       	cpse	r24, r1
     7ce:	1d c0       	rjmp	.+58     	; 0x80a <pvPortMalloc+0x50>
     7d0:	eb e2       	ldi	r30, 0x2B	; 43
     7d2:	f1 e0       	ldi	r31, 0x01	; 1
     7d4:	80 e3       	ldi	r24, 0x30	; 48
     7d6:	91 e0       	ldi	r25, 0x01	; 1
     7d8:	91 83       	std	Z+1, r25	; 0x01
     7da:	80 83       	st	Z, r24
     7dc:	13 82       	std	Z+3, r1	; 0x03
     7de:	12 82       	std	Z+2, r1	; 0x02
     7e0:	e7 e2       	ldi	r30, 0x27	; 39
     7e2:	f1 e0       	ldi	r31, 0x01	; 1
     7e4:	8b ed       	ldi	r24, 0xDB	; 219
     7e6:	95 e0       	ldi	r25, 0x05	; 5
     7e8:	93 83       	std	Z+3, r25	; 0x03
     7ea:	82 83       	std	Z+2, r24	; 0x02
     7ec:	11 82       	std	Z+1, r1	; 0x01
     7ee:	10 82       	st	Z, r1
     7f0:	af e2       	ldi	r26, 0x2F	; 47
     7f2:	b1 e0       	ldi	r27, 0x01	; 1
     7f4:	14 96       	adiw	r26, 0x04	; 4
     7f6:	9c 93       	st	X, r25
     7f8:	8e 93       	st	-X, r24
     7fa:	13 97       	sbiw	r26, 0x03	; 3
     7fc:	12 96       	adiw	r26, 0x02	; 2
     7fe:	fc 93       	st	X, r31
     800:	ee 93       	st	-X, r30
     802:	11 97       	sbiw	r26, 0x01	; 1
     804:	81 e0       	ldi	r24, 0x01	; 1
     806:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__data_end>
     80a:	20 97       	sbiw	r28, 0x00	; 0
     80c:	09 f4       	brne	.+2      	; 0x810 <pvPortMalloc+0x56>
     80e:	5f c0       	rjmp	.+190    	; 0x8ce <pvPortMalloc+0x114>
     810:	9e 01       	movw	r18, r28
     812:	2c 5f       	subi	r18, 0xFC	; 252
     814:	3f 4f       	sbci	r19, 0xFF	; 255
     816:	23 96       	adiw	r28, 0x03	; 3
     818:	ca 3d       	cpi	r28, 0xDA	; 218
     81a:	d5 40       	sbci	r29, 0x05	; 5
     81c:	08 f0       	brcs	.+2      	; 0x820 <pvPortMalloc+0x66>
     81e:	5a c0       	rjmp	.+180    	; 0x8d4 <pvPortMalloc+0x11a>
     820:	e0 91 2b 01 	lds	r30, 0x012B	; 0x80012b <xStart>
     824:	f0 91 2c 01 	lds	r31, 0x012C	; 0x80012c <xStart+0x1>
     828:	ab e2       	ldi	r26, 0x2B	; 43
     82a:	b1 e0       	ldi	r27, 0x01	; 1
     82c:	02 c0       	rjmp	.+4      	; 0x832 <pvPortMalloc+0x78>
     82e:	df 01       	movw	r26, r30
     830:	fc 01       	movw	r30, r24
     832:	82 81       	ldd	r24, Z+2	; 0x02
     834:	93 81       	ldd	r25, Z+3	; 0x03
     836:	82 17       	cp	r24, r18
     838:	93 07       	cpc	r25, r19
     83a:	20 f4       	brcc	.+8      	; 0x844 <pvPortMalloc+0x8a>
     83c:	80 81       	ld	r24, Z
     83e:	91 81       	ldd	r25, Z+1	; 0x01
     840:	00 97       	sbiw	r24, 0x00	; 0
     842:	a9 f7       	brne	.-22     	; 0x82e <pvPortMalloc+0x74>
     844:	c1 e0       	ldi	r28, 0x01	; 1
     846:	e7 32       	cpi	r30, 0x27	; 39
     848:	fc 07       	cpc	r31, r28
     84a:	09 f4       	brne	.+2      	; 0x84e <pvPortMalloc+0x94>
     84c:	46 c0       	rjmp	.+140    	; 0x8da <pvPortMalloc+0x120>
     84e:	cd 91       	ld	r28, X+
     850:	dc 91       	ld	r29, X
     852:	11 97       	sbiw	r26, 0x01	; 1
     854:	8e 01       	movw	r16, r28
     856:	0c 5f       	subi	r16, 0xFC	; 252
     858:	1f 4f       	sbci	r17, 0xFF	; 255
     85a:	80 81       	ld	r24, Z
     85c:	91 81       	ldd	r25, Z+1	; 0x01
     85e:	8d 93       	st	X+, r24
     860:	9c 93       	st	X, r25
     862:	82 81       	ldd	r24, Z+2	; 0x02
     864:	93 81       	ldd	r25, Z+3	; 0x03
     866:	82 1b       	sub	r24, r18
     868:	93 0b       	sbc	r25, r19
     86a:	89 30       	cpi	r24, 0x09	; 9
     86c:	91 05       	cpc	r25, r1
     86e:	10 f1       	brcs	.+68     	; 0x8b4 <pvPortMalloc+0xfa>
     870:	bf 01       	movw	r22, r30
     872:	62 0f       	add	r22, r18
     874:	73 1f       	adc	r23, r19
     876:	db 01       	movw	r26, r22
     878:	13 96       	adiw	r26, 0x03	; 3
     87a:	9c 93       	st	X, r25
     87c:	8e 93       	st	-X, r24
     87e:	12 97       	sbiw	r26, 0x02	; 2
     880:	33 83       	std	Z+3, r19	; 0x03
     882:	22 83       	std	Z+2, r18	; 0x02
     884:	12 96       	adiw	r26, 0x02	; 2
     886:	4d 91       	ld	r20, X+
     888:	5c 91       	ld	r21, X
     88a:	13 97       	sbiw	r26, 0x03	; 3
     88c:	8b e2       	ldi	r24, 0x2B	; 43
     88e:	91 e0       	ldi	r25, 0x01	; 1
     890:	01 c0       	rjmp	.+2      	; 0x894 <pvPortMalloc+0xda>
     892:	cd 01       	movw	r24, r26
     894:	ec 01       	movw	r28, r24
     896:	a8 81       	ld	r26, Y
     898:	b9 81       	ldd	r27, Y+1	; 0x01
     89a:	12 96       	adiw	r26, 0x02	; 2
     89c:	2d 91       	ld	r18, X+
     89e:	3c 91       	ld	r19, X
     8a0:	13 97       	sbiw	r26, 0x03	; 3
     8a2:	24 17       	cp	r18, r20
     8a4:	35 07       	cpc	r19, r21
     8a6:	a8 f3       	brcs	.-22     	; 0x892 <pvPortMalloc+0xd8>
     8a8:	eb 01       	movw	r28, r22
     8aa:	b9 83       	std	Y+1, r27	; 0x01
     8ac:	a8 83       	st	Y, r26
     8ae:	dc 01       	movw	r26, r24
     8b0:	6d 93       	st	X+, r22
     8b2:	7c 93       	st	X, r23
     8b4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     8b8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     8bc:	22 81       	ldd	r18, Z+2	; 0x02
     8be:	33 81       	ldd	r19, Z+3	; 0x03
     8c0:	82 1b       	sub	r24, r18
     8c2:	93 0b       	sbc	r25, r19
     8c4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     8c8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     8cc:	08 c0       	rjmp	.+16     	; 0x8de <pvPortMalloc+0x124>
     8ce:	00 e0       	ldi	r16, 0x00	; 0
     8d0:	10 e0       	ldi	r17, 0x00	; 0
     8d2:	05 c0       	rjmp	.+10     	; 0x8de <pvPortMalloc+0x124>
     8d4:	00 e0       	ldi	r16, 0x00	; 0
     8d6:	10 e0       	ldi	r17, 0x00	; 0
     8d8:	02 c0       	rjmp	.+4      	; 0x8de <pvPortMalloc+0x124>
     8da:	00 e0       	ldi	r16, 0x00	; 0
     8dc:	10 e0       	ldi	r17, 0x00	; 0
     8de:	0e 94 a0 09 	call	0x1340	; 0x1340 <xTaskResumeAll>
     8e2:	c8 01       	movw	r24, r16
     8e4:	df 91       	pop	r29
     8e6:	cf 91       	pop	r28
     8e8:	1f 91       	pop	r17
     8ea:	0f 91       	pop	r16
     8ec:	08 95       	ret

000008ee <vPortFree>:
     8ee:	0f 93       	push	r16
     8f0:	1f 93       	push	r17
     8f2:	cf 93       	push	r28
     8f4:	df 93       	push	r29
     8f6:	00 97       	sbiw	r24, 0x00	; 0
     8f8:	41 f1       	breq	.+80     	; 0x94a <__stack+0x4b>
     8fa:	ec 01       	movw	r28, r24
     8fc:	8c 01       	movw	r16, r24
     8fe:	04 50       	subi	r16, 0x04	; 4
     900:	11 09       	sbc	r17, r1
     902:	0e 94 dd 08 	call	0x11ba	; 0x11ba <vTaskSuspendAll>
     906:	f8 01       	movw	r30, r16
     908:	42 81       	ldd	r20, Z+2	; 0x02
     90a:	53 81       	ldd	r21, Z+3	; 0x03
     90c:	ab e2       	ldi	r26, 0x2B	; 43
     90e:	b1 e0       	ldi	r27, 0x01	; 1
     910:	01 c0       	rjmp	.+2      	; 0x914 <__stack+0x15>
     912:	df 01       	movw	r26, r30
     914:	ed 91       	ld	r30, X+
     916:	fc 91       	ld	r31, X
     918:	11 97       	sbiw	r26, 0x01	; 1
     91a:	22 81       	ldd	r18, Z+2	; 0x02
     91c:	33 81       	ldd	r19, Z+3	; 0x03
     91e:	24 17       	cp	r18, r20
     920:	35 07       	cpc	r19, r21
     922:	b8 f3       	brcs	.-18     	; 0x912 <__stack+0x13>
     924:	24 97       	sbiw	r28, 0x04	; 4
     926:	f9 83       	std	Y+1, r31	; 0x01
     928:	e8 83       	st	Y, r30
     92a:	0d 93       	st	X+, r16
     92c:	1c 93       	st	X, r17
     92e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     932:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     936:	8a 81       	ldd	r24, Y+2	; 0x02
     938:	9b 81       	ldd	r25, Y+3	; 0x03
     93a:	82 0f       	add	r24, r18
     93c:	93 1f       	adc	r25, r19
     93e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     942:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     946:	0e 94 a0 09 	call	0x1340	; 0x1340 <xTaskResumeAll>
     94a:	df 91       	pop	r29
     94c:	cf 91       	pop	r28
     94e:	1f 91       	pop	r17
     950:	0f 91       	pop	r16
     952:	08 95       	ret

00000954 <prvCopyDataToQueue>:
     954:	1f 93       	push	r17
     956:	cf 93       	push	r28
     958:	df 93       	push	r29
     95a:	ec 01       	movw	r28, r24
     95c:	14 2f       	mov	r17, r20
     95e:	4c 8d       	ldd	r20, Y+28	; 0x1c
     960:	41 11       	cpse	r20, r1
     962:	0c c0       	rjmp	.+24     	; 0x97c <prvCopyDataToQueue+0x28>
     964:	88 81       	ld	r24, Y
     966:	99 81       	ldd	r25, Y+1	; 0x01
     968:	89 2b       	or	r24, r25
     96a:	09 f0       	breq	.+2      	; 0x96e <prvCopyDataToQueue+0x1a>
     96c:	45 c0       	rjmp	.+138    	; 0x9f8 <prvCopyDataToQueue+0xa4>
     96e:	8a 81       	ldd	r24, Y+2	; 0x02
     970:	9b 81       	ldd	r25, Y+3	; 0x03
     972:	0e 94 0a 0c 	call	0x1814	; 0x1814 <xTaskPriorityDisinherit>
     976:	1b 82       	std	Y+3, r1	; 0x03
     978:	1a 82       	std	Y+2, r1	; 0x02
     97a:	45 c0       	rjmp	.+138    	; 0xa06 <prvCopyDataToQueue+0xb2>
     97c:	11 11       	cpse	r17, r1
     97e:	17 c0       	rjmp	.+46     	; 0x9ae <prvCopyDataToQueue+0x5a>
     980:	50 e0       	ldi	r21, 0x00	; 0
     982:	8c 81       	ldd	r24, Y+4	; 0x04
     984:	9d 81       	ldd	r25, Y+5	; 0x05
     986:	0e 94 b6 0c 	call	0x196c	; 0x196c <memcpy>
     98a:	2c 8d       	ldd	r18, Y+28	; 0x1c
     98c:	8c 81       	ldd	r24, Y+4	; 0x04
     98e:	9d 81       	ldd	r25, Y+5	; 0x05
     990:	82 0f       	add	r24, r18
     992:	91 1d       	adc	r25, r1
     994:	9d 83       	std	Y+5, r25	; 0x05
     996:	8c 83       	std	Y+4, r24	; 0x04
     998:	2a 81       	ldd	r18, Y+2	; 0x02
     99a:	3b 81       	ldd	r19, Y+3	; 0x03
     99c:	82 17       	cp	r24, r18
     99e:	93 07       	cpc	r25, r19
     9a0:	68 f1       	brcs	.+90     	; 0x9fc <prvCopyDataToQueue+0xa8>
     9a2:	88 81       	ld	r24, Y
     9a4:	99 81       	ldd	r25, Y+1	; 0x01
     9a6:	9d 83       	std	Y+5, r25	; 0x05
     9a8:	8c 83       	std	Y+4, r24	; 0x04
     9aa:	80 e0       	ldi	r24, 0x00	; 0
     9ac:	2c c0       	rjmp	.+88     	; 0xa06 <prvCopyDataToQueue+0xb2>
     9ae:	50 e0       	ldi	r21, 0x00	; 0
     9b0:	8e 81       	ldd	r24, Y+6	; 0x06
     9b2:	9f 81       	ldd	r25, Y+7	; 0x07
     9b4:	0e 94 b6 0c 	call	0x196c	; 0x196c <memcpy>
     9b8:	8c 8d       	ldd	r24, Y+28	; 0x1c
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	91 95       	neg	r25
     9be:	81 95       	neg	r24
     9c0:	91 09       	sbc	r25, r1
     9c2:	2e 81       	ldd	r18, Y+6	; 0x06
     9c4:	3f 81       	ldd	r19, Y+7	; 0x07
     9c6:	28 0f       	add	r18, r24
     9c8:	39 1f       	adc	r19, r25
     9ca:	3f 83       	std	Y+7, r19	; 0x07
     9cc:	2e 83       	std	Y+6, r18	; 0x06
     9ce:	48 81       	ld	r20, Y
     9d0:	59 81       	ldd	r21, Y+1	; 0x01
     9d2:	24 17       	cp	r18, r20
     9d4:	35 07       	cpc	r19, r21
     9d6:	30 f4       	brcc	.+12     	; 0x9e4 <prvCopyDataToQueue+0x90>
     9d8:	2a 81       	ldd	r18, Y+2	; 0x02
     9da:	3b 81       	ldd	r19, Y+3	; 0x03
     9dc:	82 0f       	add	r24, r18
     9de:	93 1f       	adc	r25, r19
     9e0:	9f 83       	std	Y+7, r25	; 0x07
     9e2:	8e 83       	std	Y+6, r24	; 0x06
     9e4:	12 30       	cpi	r17, 0x02	; 2
     9e6:	61 f4       	brne	.+24     	; 0xa00 <prvCopyDataToQueue+0xac>
     9e8:	8a 8d       	ldd	r24, Y+26	; 0x1a
     9ea:	88 23       	and	r24, r24
     9ec:	59 f0       	breq	.+22     	; 0xa04 <prvCopyDataToQueue+0xb0>
     9ee:	8a 8d       	ldd	r24, Y+26	; 0x1a
     9f0:	81 50       	subi	r24, 0x01	; 1
     9f2:	8a 8f       	std	Y+26, r24	; 0x1a
     9f4:	80 e0       	ldi	r24, 0x00	; 0
     9f6:	07 c0       	rjmp	.+14     	; 0xa06 <prvCopyDataToQueue+0xb2>
     9f8:	80 e0       	ldi	r24, 0x00	; 0
     9fa:	05 c0       	rjmp	.+10     	; 0xa06 <prvCopyDataToQueue+0xb2>
     9fc:	80 e0       	ldi	r24, 0x00	; 0
     9fe:	03 c0       	rjmp	.+6      	; 0xa06 <prvCopyDataToQueue+0xb2>
     a00:	80 e0       	ldi	r24, 0x00	; 0
     a02:	01 c0       	rjmp	.+2      	; 0xa06 <prvCopyDataToQueue+0xb2>
     a04:	80 e0       	ldi	r24, 0x00	; 0
     a06:	9a 8d       	ldd	r25, Y+26	; 0x1a
     a08:	9f 5f       	subi	r25, 0xFF	; 255
     a0a:	9a 8f       	std	Y+26, r25	; 0x1a
     a0c:	df 91       	pop	r29
     a0e:	cf 91       	pop	r28
     a10:	1f 91       	pop	r17
     a12:	08 95       	ret

00000a14 <prvCopyDataFromQueue>:
     a14:	fc 01       	movw	r30, r24
     a16:	44 8d       	ldd	r20, Z+28	; 0x1c
     a18:	44 23       	and	r20, r20
     a1a:	a9 f0       	breq	.+42     	; 0xa46 <prvCopyDataFromQueue+0x32>
     a1c:	50 e0       	ldi	r21, 0x00	; 0
     a1e:	26 81       	ldd	r18, Z+6	; 0x06
     a20:	37 81       	ldd	r19, Z+7	; 0x07
     a22:	24 0f       	add	r18, r20
     a24:	35 1f       	adc	r19, r21
     a26:	37 83       	std	Z+7, r19	; 0x07
     a28:	26 83       	std	Z+6, r18	; 0x06
     a2a:	82 81       	ldd	r24, Z+2	; 0x02
     a2c:	93 81       	ldd	r25, Z+3	; 0x03
     a2e:	28 17       	cp	r18, r24
     a30:	39 07       	cpc	r19, r25
     a32:	20 f0       	brcs	.+8      	; 0xa3c <prvCopyDataFromQueue+0x28>
     a34:	80 81       	ld	r24, Z
     a36:	91 81       	ldd	r25, Z+1	; 0x01
     a38:	97 83       	std	Z+7, r25	; 0x07
     a3a:	86 83       	std	Z+6, r24	; 0x06
     a3c:	cb 01       	movw	r24, r22
     a3e:	66 81       	ldd	r22, Z+6	; 0x06
     a40:	77 81       	ldd	r23, Z+7	; 0x07
     a42:	0e 94 b6 0c 	call	0x196c	; 0x196c <memcpy>
     a46:	08 95       	ret

00000a48 <prvUnlockQueue>:
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	cf 93       	push	r28
     a4e:	df 93       	push	r29
     a50:	ec 01       	movw	r28, r24
     a52:	0f b6       	in	r0, 0x3f	; 63
     a54:	f8 94       	cli
     a56:	0f 92       	push	r0
     a58:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a5a:	18 16       	cp	r1, r24
     a5c:	bc f4       	brge	.+46     	; 0xa8c <prvUnlockQueue+0x44>
     a5e:	89 89       	ldd	r24, Y+17	; 0x11
     a60:	81 11       	cpse	r24, r1
     a62:	05 c0       	rjmp	.+10     	; 0xa6e <prvUnlockQueue+0x26>
     a64:	13 c0       	rjmp	.+38     	; 0xa8c <prvUnlockQueue+0x44>
     a66:	89 89       	ldd	r24, Y+17	; 0x11
     a68:	81 11       	cpse	r24, r1
     a6a:	04 c0       	rjmp	.+8      	; 0xa74 <prvUnlockQueue+0x2c>
     a6c:	0f c0       	rjmp	.+30     	; 0xa8c <prvUnlockQueue+0x44>
     a6e:	8e 01       	movw	r16, r28
     a70:	0f 5e       	subi	r16, 0xEF	; 239
     a72:	1f 4f       	sbci	r17, 0xFF	; 255
     a74:	c8 01       	movw	r24, r16
     a76:	0e 94 18 0b 	call	0x1630	; 0x1630 <xTaskRemoveFromEventList>
     a7a:	81 11       	cpse	r24, r1
     a7c:	0e 94 a4 0b 	call	0x1748	; 0x1748 <vTaskMissedYield>
     a80:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a82:	81 50       	subi	r24, 0x01	; 1
     a84:	8e 8f       	std	Y+30, r24	; 0x1e
     a86:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a88:	18 16       	cp	r1, r24
     a8a:	6c f3       	brlt	.-38     	; 0xa66 <prvUnlockQueue+0x1e>
     a8c:	8f ef       	ldi	r24, 0xFF	; 255
     a8e:	8e 8f       	std	Y+30, r24	; 0x1e
     a90:	0f 90       	pop	r0
     a92:	0f be       	out	0x3f, r0	; 63
     a94:	0f b6       	in	r0, 0x3f	; 63
     a96:	f8 94       	cli
     a98:	0f 92       	push	r0
     a9a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     a9c:	18 16       	cp	r1, r24
     a9e:	bc f4       	brge	.+46     	; 0xace <prvUnlockQueue+0x86>
     aa0:	88 85       	ldd	r24, Y+8	; 0x08
     aa2:	81 11       	cpse	r24, r1
     aa4:	05 c0       	rjmp	.+10     	; 0xab0 <prvUnlockQueue+0x68>
     aa6:	13 c0       	rjmp	.+38     	; 0xace <prvUnlockQueue+0x86>
     aa8:	88 85       	ldd	r24, Y+8	; 0x08
     aaa:	81 11       	cpse	r24, r1
     aac:	04 c0       	rjmp	.+8      	; 0xab6 <prvUnlockQueue+0x6e>
     aae:	0f c0       	rjmp	.+30     	; 0xace <prvUnlockQueue+0x86>
     ab0:	8e 01       	movw	r16, r28
     ab2:	08 5f       	subi	r16, 0xF8	; 248
     ab4:	1f 4f       	sbci	r17, 0xFF	; 255
     ab6:	c8 01       	movw	r24, r16
     ab8:	0e 94 18 0b 	call	0x1630	; 0x1630 <xTaskRemoveFromEventList>
     abc:	81 11       	cpse	r24, r1
     abe:	0e 94 a4 0b 	call	0x1748	; 0x1748 <vTaskMissedYield>
     ac2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     ac4:	81 50       	subi	r24, 0x01	; 1
     ac6:	8d 8f       	std	Y+29, r24	; 0x1d
     ac8:	8d 8d       	ldd	r24, Y+29	; 0x1d
     aca:	18 16       	cp	r1, r24
     acc:	6c f3       	brlt	.-38     	; 0xaa8 <prvUnlockQueue+0x60>
     ace:	8f ef       	ldi	r24, 0xFF	; 255
     ad0:	8d 8f       	std	Y+29, r24	; 0x1d
     ad2:	0f 90       	pop	r0
     ad4:	0f be       	out	0x3f, r0	; 63
     ad6:	df 91       	pop	r29
     ad8:	cf 91       	pop	r28
     ada:	1f 91       	pop	r17
     adc:	0f 91       	pop	r16
     ade:	08 95       	ret

00000ae0 <xQueueGenericReset>:
     ae0:	cf 93       	push	r28
     ae2:	df 93       	push	r29
     ae4:	ec 01       	movw	r28, r24
     ae6:	0f b6       	in	r0, 0x3f	; 63
     ae8:	f8 94       	cli
     aea:	0f 92       	push	r0
     aec:	48 81       	ld	r20, Y
     aee:	59 81       	ldd	r21, Y+1	; 0x01
     af0:	2c 8d       	ldd	r18, Y+28	; 0x1c
     af2:	30 e0       	ldi	r19, 0x00	; 0
     af4:	7b 8d       	ldd	r23, Y+27	; 0x1b
     af6:	72 9f       	mul	r23, r18
     af8:	c0 01       	movw	r24, r0
     afa:	73 9f       	mul	r23, r19
     afc:	90 0d       	add	r25, r0
     afe:	11 24       	eor	r1, r1
     b00:	fa 01       	movw	r30, r20
     b02:	e8 0f       	add	r30, r24
     b04:	f9 1f       	adc	r31, r25
     b06:	fb 83       	std	Y+3, r31	; 0x03
     b08:	ea 83       	std	Y+2, r30	; 0x02
     b0a:	1a 8e       	std	Y+26, r1	; 0x1a
     b0c:	5d 83       	std	Y+5, r21	; 0x05
     b0e:	4c 83       	std	Y+4, r20	; 0x04
     b10:	82 1b       	sub	r24, r18
     b12:	93 0b       	sbc	r25, r19
     b14:	84 0f       	add	r24, r20
     b16:	95 1f       	adc	r25, r21
     b18:	9f 83       	std	Y+7, r25	; 0x07
     b1a:	8e 83       	std	Y+6, r24	; 0x06
     b1c:	8f ef       	ldi	r24, 0xFF	; 255
     b1e:	8d 8f       	std	Y+29, r24	; 0x1d
     b20:	8e 8f       	std	Y+30, r24	; 0x1e
     b22:	61 11       	cpse	r22, r1
     b24:	0c c0       	rjmp	.+24     	; 0xb3e <xQueueGenericReset+0x5e>
     b26:	88 85       	ldd	r24, Y+8	; 0x08
     b28:	88 23       	and	r24, r24
     b2a:	89 f0       	breq	.+34     	; 0xb4e <xQueueGenericReset+0x6e>
     b2c:	ce 01       	movw	r24, r28
     b2e:	08 96       	adiw	r24, 0x08	; 8
     b30:	0e 94 18 0b 	call	0x1630	; 0x1630 <xTaskRemoveFromEventList>
     b34:	81 30       	cpi	r24, 0x01	; 1
     b36:	59 f4       	brne	.+22     	; 0xb4e <xQueueGenericReset+0x6e>
     b38:	0e 94 25 03 	call	0x64a	; 0x64a <vPortYield>
     b3c:	08 c0       	rjmp	.+16     	; 0xb4e <xQueueGenericReset+0x6e>
     b3e:	ce 01       	movw	r24, r28
     b40:	08 96       	adiw	r24, 0x08	; 8
     b42:	0e 94 f5 01 	call	0x3ea	; 0x3ea <vListInitialise>
     b46:	ce 01       	movw	r24, r28
     b48:	41 96       	adiw	r24, 0x11	; 17
     b4a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <vListInitialise>
     b4e:	0f 90       	pop	r0
     b50:	0f be       	out	0x3f, r0	; 63
     b52:	81 e0       	ldi	r24, 0x01	; 1
     b54:	df 91       	pop	r29
     b56:	cf 91       	pop	r28
     b58:	08 95       	ret

00000b5a <xQueueGenericCreate>:
     b5a:	0f 93       	push	r16
     b5c:	1f 93       	push	r17
     b5e:	cf 93       	push	r28
     b60:	df 93       	push	r29
     b62:	08 2f       	mov	r16, r24
     b64:	16 2f       	mov	r17, r22
     b66:	66 23       	and	r22, r22
     b68:	b9 f0       	breq	.+46     	; 0xb98 <xQueueGenericCreate+0x3e>
     b6a:	86 9f       	mul	r24, r22
     b6c:	c0 01       	movw	r24, r0
     b6e:	11 24       	eor	r1, r1
     b70:	80 96       	adiw	r24, 0x20	; 32
     b72:	0e 94 dd 03 	call	0x7ba	; 0x7ba <pvPortMalloc>
     b76:	ec 01       	movw	r28, r24
     b78:	00 97       	sbiw	r24, 0x00	; 0
     b7a:	21 f4       	brne	.+8      	; 0xb84 <xQueueGenericCreate+0x2a>
     b7c:	14 c0       	rjmp	.+40     	; 0xba6 <xQueueGenericCreate+0x4c>
     b7e:	d9 83       	std	Y+1, r29	; 0x01
     b80:	c8 83       	st	Y, r28
     b82:	03 c0       	rjmp	.+6      	; 0xb8a <xQueueGenericCreate+0x30>
     b84:	4f 96       	adiw	r24, 0x1f	; 31
     b86:	99 83       	std	Y+1, r25	; 0x01
     b88:	88 83       	st	Y, r24
     b8a:	0b 8f       	std	Y+27, r16	; 0x1b
     b8c:	1c 8f       	std	Y+28, r17	; 0x1c
     b8e:	61 e0       	ldi	r22, 0x01	; 1
     b90:	ce 01       	movw	r24, r28
     b92:	0e 94 70 05 	call	0xae0	; 0xae0 <xQueueGenericReset>
     b96:	07 c0       	rjmp	.+14     	; 0xba6 <xQueueGenericCreate+0x4c>
     b98:	8f e1       	ldi	r24, 0x1F	; 31
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	0e 94 dd 03 	call	0x7ba	; 0x7ba <pvPortMalloc>
     ba0:	ec 01       	movw	r28, r24
     ba2:	89 2b       	or	r24, r25
     ba4:	61 f7       	brne	.-40     	; 0xb7e <xQueueGenericCreate+0x24>
     ba6:	ce 01       	movw	r24, r28
     ba8:	df 91       	pop	r29
     baa:	cf 91       	pop	r28
     bac:	1f 91       	pop	r17
     bae:	0f 91       	pop	r16
     bb0:	08 95       	ret

00000bb2 <xQueueGenericSend>:
     bb2:	9f 92       	push	r9
     bb4:	af 92       	push	r10
     bb6:	bf 92       	push	r11
     bb8:	cf 92       	push	r12
     bba:	df 92       	push	r13
     bbc:	ef 92       	push	r14
     bbe:	ff 92       	push	r15
     bc0:	0f 93       	push	r16
     bc2:	1f 93       	push	r17
     bc4:	cf 93       	push	r28
     bc6:	df 93       	push	r29
     bc8:	00 d0       	rcall	.+0      	; 0xbca <xQueueGenericSend+0x18>
     bca:	00 d0       	rcall	.+0      	; 0xbcc <xQueueGenericSend+0x1a>
     bcc:	1f 92       	push	r1
     bce:	cd b7       	in	r28, 0x3d	; 61
     bd0:	de b7       	in	r29, 0x3e	; 62
     bd2:	8c 01       	movw	r16, r24
     bd4:	6b 01       	movw	r12, r22
     bd6:	5d 83       	std	Y+5, r21	; 0x05
     bd8:	4c 83       	std	Y+4, r20	; 0x04
     bda:	a2 2e       	mov	r10, r18
     bdc:	b1 2c       	mov	r11, r1
     bde:	99 24       	eor	r9, r9
     be0:	93 94       	inc	r9
     be2:	7c 01       	movw	r14, r24
     be4:	88 e0       	ldi	r24, 0x08	; 8
     be6:	e8 0e       	add	r14, r24
     be8:	f1 1c       	adc	r15, r1
     bea:	0f b6       	in	r0, 0x3f	; 63
     bec:	f8 94       	cli
     bee:	0f 92       	push	r0
     bf0:	f8 01       	movw	r30, r16
     bf2:	92 8d       	ldd	r25, Z+26	; 0x1a
     bf4:	83 8d       	ldd	r24, Z+27	; 0x1b
     bf6:	98 17       	cp	r25, r24
     bf8:	18 f0       	brcs	.+6      	; 0xc00 <xQueueGenericSend+0x4e>
     bfa:	f2 e0       	ldi	r31, 0x02	; 2
     bfc:	af 12       	cpse	r10, r31
     bfe:	19 c0       	rjmp	.+50     	; 0xc32 <xQueueGenericSend+0x80>
     c00:	4a 2d       	mov	r20, r10
     c02:	b6 01       	movw	r22, r12
     c04:	c8 01       	movw	r24, r16
     c06:	0e 94 aa 04 	call	0x954	; 0x954 <prvCopyDataToQueue>
     c0a:	f8 01       	movw	r30, r16
     c0c:	91 89       	ldd	r25, Z+17	; 0x11
     c0e:	99 23       	and	r25, r25
     c10:	49 f0       	breq	.+18     	; 0xc24 <xQueueGenericSend+0x72>
     c12:	c8 01       	movw	r24, r16
     c14:	41 96       	adiw	r24, 0x11	; 17
     c16:	0e 94 18 0b 	call	0x1630	; 0x1630 <xTaskRemoveFromEventList>
     c1a:	81 30       	cpi	r24, 0x01	; 1
     c1c:	31 f4       	brne	.+12     	; 0xc2a <xQueueGenericSend+0x78>
     c1e:	0e 94 25 03 	call	0x64a	; 0x64a <vPortYield>
     c22:	03 c0       	rjmp	.+6      	; 0xc2a <xQueueGenericSend+0x78>
     c24:	81 11       	cpse	r24, r1
     c26:	0e 94 25 03 	call	0x64a	; 0x64a <vPortYield>
     c2a:	0f 90       	pop	r0
     c2c:	0f be       	out	0x3f, r0	; 63
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	50 c0       	rjmp	.+160    	; 0xcd2 <xQueueGenericSend+0x120>
     c32:	8c 81       	ldd	r24, Y+4	; 0x04
     c34:	9d 81       	ldd	r25, Y+5	; 0x05
     c36:	89 2b       	or	r24, r25
     c38:	21 f4       	brne	.+8      	; 0xc42 <xQueueGenericSend+0x90>
     c3a:	0f 90       	pop	r0
     c3c:	0f be       	out	0x3f, r0	; 63
     c3e:	80 e0       	ldi	r24, 0x00	; 0
     c40:	48 c0       	rjmp	.+144    	; 0xcd2 <xQueueGenericSend+0x120>
     c42:	b1 10       	cpse	r11, r1
     c44:	05 c0       	rjmp	.+10     	; 0xc50 <xQueueGenericSend+0x9e>
     c46:	ce 01       	movw	r24, r28
     c48:	01 96       	adiw	r24, 0x01	; 1
     c4a:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <vTaskSetTimeOutState>
     c4e:	b9 2c       	mov	r11, r9
     c50:	0f 90       	pop	r0
     c52:	0f be       	out	0x3f, r0	; 63
     c54:	0e 94 dd 08 	call	0x11ba	; 0x11ba <vTaskSuspendAll>
     c58:	0f b6       	in	r0, 0x3f	; 63
     c5a:	f8 94       	cli
     c5c:	0f 92       	push	r0
     c5e:	f8 01       	movw	r30, r16
     c60:	85 8d       	ldd	r24, Z+29	; 0x1d
     c62:	8f 3f       	cpi	r24, 0xFF	; 255
     c64:	09 f4       	brne	.+2      	; 0xc68 <xQueueGenericSend+0xb6>
     c66:	15 8e       	std	Z+29, r1	; 0x1d
     c68:	f8 01       	movw	r30, r16
     c6a:	86 8d       	ldd	r24, Z+30	; 0x1e
     c6c:	8f 3f       	cpi	r24, 0xFF	; 255
     c6e:	09 f4       	brne	.+2      	; 0xc72 <xQueueGenericSend+0xc0>
     c70:	16 8e       	std	Z+30, r1	; 0x1e
     c72:	0f 90       	pop	r0
     c74:	0f be       	out	0x3f, r0	; 63
     c76:	be 01       	movw	r22, r28
     c78:	6c 5f       	subi	r22, 0xFC	; 252
     c7a:	7f 4f       	sbci	r23, 0xFF	; 255
     c7c:	ce 01       	movw	r24, r28
     c7e:	01 96       	adiw	r24, 0x01	; 1
     c80:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <xTaskCheckForTimeOut>
     c84:	81 11       	cpse	r24, r1
     c86:	1f c0       	rjmp	.+62     	; 0xcc6 <xQueueGenericSend+0x114>
     c88:	0f b6       	in	r0, 0x3f	; 63
     c8a:	f8 94       	cli
     c8c:	0f 92       	push	r0
     c8e:	f8 01       	movw	r30, r16
     c90:	92 8d       	ldd	r25, Z+26	; 0x1a
     c92:	0f 90       	pop	r0
     c94:	0f be       	out	0x3f, r0	; 63
     c96:	83 8d       	ldd	r24, Z+27	; 0x1b
     c98:	98 13       	cpse	r25, r24
     c9a:	0f c0       	rjmp	.+30     	; 0xcba <xQueueGenericSend+0x108>
     c9c:	6c 81       	ldd	r22, Y+4	; 0x04
     c9e:	7d 81       	ldd	r23, Y+5	; 0x05
     ca0:	c7 01       	movw	r24, r14
     ca2:	0e 94 ec 0a 	call	0x15d8	; 0x15d8 <vTaskPlaceOnEventList>
     ca6:	c8 01       	movw	r24, r16
     ca8:	0e 94 24 05 	call	0xa48	; 0xa48 <prvUnlockQueue>
     cac:	0e 94 a0 09 	call	0x1340	; 0x1340 <xTaskResumeAll>
     cb0:	81 11       	cpse	r24, r1
     cb2:	9b cf       	rjmp	.-202    	; 0xbea <xQueueGenericSend+0x38>
     cb4:	0e 94 25 03 	call	0x64a	; 0x64a <vPortYield>
     cb8:	98 cf       	rjmp	.-208    	; 0xbea <xQueueGenericSend+0x38>
     cba:	c8 01       	movw	r24, r16
     cbc:	0e 94 24 05 	call	0xa48	; 0xa48 <prvUnlockQueue>
     cc0:	0e 94 a0 09 	call	0x1340	; 0x1340 <xTaskResumeAll>
     cc4:	92 cf       	rjmp	.-220    	; 0xbea <xQueueGenericSend+0x38>
     cc6:	c8 01       	movw	r24, r16
     cc8:	0e 94 24 05 	call	0xa48	; 0xa48 <prvUnlockQueue>
     ccc:	0e 94 a0 09 	call	0x1340	; 0x1340 <xTaskResumeAll>
     cd0:	80 e0       	ldi	r24, 0x00	; 0
     cd2:	0f 90       	pop	r0
     cd4:	0f 90       	pop	r0
     cd6:	0f 90       	pop	r0
     cd8:	0f 90       	pop	r0
     cda:	0f 90       	pop	r0
     cdc:	df 91       	pop	r29
     cde:	cf 91       	pop	r28
     ce0:	1f 91       	pop	r17
     ce2:	0f 91       	pop	r16
     ce4:	ff 90       	pop	r15
     ce6:	ef 90       	pop	r14
     ce8:	df 90       	pop	r13
     cea:	cf 90       	pop	r12
     cec:	bf 90       	pop	r11
     cee:	af 90       	pop	r10
     cf0:	9f 90       	pop	r9
     cf2:	08 95       	ret

00000cf4 <xQueueGenericReceive>:
     cf4:	9f 92       	push	r9
     cf6:	af 92       	push	r10
     cf8:	bf 92       	push	r11
     cfa:	cf 92       	push	r12
     cfc:	df 92       	push	r13
     cfe:	ef 92       	push	r14
     d00:	ff 92       	push	r15
     d02:	0f 93       	push	r16
     d04:	1f 93       	push	r17
     d06:	cf 93       	push	r28
     d08:	df 93       	push	r29
     d0a:	00 d0       	rcall	.+0      	; 0xd0c <xQueueGenericReceive+0x18>
     d0c:	00 d0       	rcall	.+0      	; 0xd0e <xQueueGenericReceive+0x1a>
     d0e:	1f 92       	push	r1
     d10:	cd b7       	in	r28, 0x3d	; 61
     d12:	de b7       	in	r29, 0x3e	; 62
     d14:	8c 01       	movw	r16, r24
     d16:	6b 01       	movw	r12, r22
     d18:	5d 83       	std	Y+5, r21	; 0x05
     d1a:	4c 83       	std	Y+4, r20	; 0x04
     d1c:	92 2e       	mov	r9, r18
     d1e:	b1 2c       	mov	r11, r1
     d20:	aa 24       	eor	r10, r10
     d22:	a3 94       	inc	r10
     d24:	7c 01       	movw	r14, r24
     d26:	81 e1       	ldi	r24, 0x11	; 17
     d28:	e8 0e       	add	r14, r24
     d2a:	f1 1c       	adc	r15, r1
     d2c:	0f b6       	in	r0, 0x3f	; 63
     d2e:	f8 94       	cli
     d30:	0f 92       	push	r0
     d32:	f8 01       	movw	r30, r16
     d34:	82 8d       	ldd	r24, Z+26	; 0x1a
     d36:	88 23       	and	r24, r24
     d38:	99 f1       	breq	.+102    	; 0xda0 <xQueueGenericReceive+0xac>
     d3a:	e6 80       	ldd	r14, Z+6	; 0x06
     d3c:	f7 80       	ldd	r15, Z+7	; 0x07
     d3e:	b6 01       	movw	r22, r12
     d40:	c8 01       	movw	r24, r16
     d42:	0e 94 0a 05 	call	0xa14	; 0xa14 <prvCopyDataFromQueue>
     d46:	91 10       	cpse	r9, r1
     d48:	1a c0       	rjmp	.+52     	; 0xd7e <xQueueGenericReceive+0x8a>
     d4a:	f8 01       	movw	r30, r16
     d4c:	82 8d       	ldd	r24, Z+26	; 0x1a
     d4e:	81 50       	subi	r24, 0x01	; 1
     d50:	82 8f       	std	Z+26, r24	; 0x1a
     d52:	80 81       	ld	r24, Z
     d54:	91 81       	ldd	r25, Z+1	; 0x01
     d56:	89 2b       	or	r24, r25
     d58:	29 f4       	brne	.+10     	; 0xd64 <xQueueGenericReceive+0x70>
     d5a:	0e 94 4a 0c 	call	0x1894	; 0x1894 <pvTaskIncrementMutexHeldCount>
     d5e:	f8 01       	movw	r30, r16
     d60:	93 83       	std	Z+3, r25	; 0x03
     d62:	82 83       	std	Z+2, r24	; 0x02
     d64:	f8 01       	movw	r30, r16
     d66:	80 85       	ldd	r24, Z+8	; 0x08
     d68:	88 23       	and	r24, r24
     d6a:	b1 f0       	breq	.+44     	; 0xd98 <xQueueGenericReceive+0xa4>
     d6c:	c8 01       	movw	r24, r16
     d6e:	08 96       	adiw	r24, 0x08	; 8
     d70:	0e 94 18 0b 	call	0x1630	; 0x1630 <xTaskRemoveFromEventList>
     d74:	81 30       	cpi	r24, 0x01	; 1
     d76:	81 f4       	brne	.+32     	; 0xd98 <xQueueGenericReceive+0xa4>
     d78:	0e 94 25 03 	call	0x64a	; 0x64a <vPortYield>
     d7c:	0d c0       	rjmp	.+26     	; 0xd98 <xQueueGenericReceive+0xa4>
     d7e:	f8 01       	movw	r30, r16
     d80:	f7 82       	std	Z+7, r15	; 0x07
     d82:	e6 82       	std	Z+6, r14	; 0x06
     d84:	81 89       	ldd	r24, Z+17	; 0x11
     d86:	88 23       	and	r24, r24
     d88:	39 f0       	breq	.+14     	; 0xd98 <xQueueGenericReceive+0xa4>
     d8a:	c8 01       	movw	r24, r16
     d8c:	41 96       	adiw	r24, 0x11	; 17
     d8e:	0e 94 18 0b 	call	0x1630	; 0x1630 <xTaskRemoveFromEventList>
     d92:	81 11       	cpse	r24, r1
     d94:	0e 94 25 03 	call	0x64a	; 0x64a <vPortYield>
     d98:	0f 90       	pop	r0
     d9a:	0f be       	out	0x3f, r0	; 63
     d9c:	81 e0       	ldi	r24, 0x01	; 1
     d9e:	5c c0       	rjmp	.+184    	; 0xe58 <xQueueGenericReceive+0x164>
     da0:	8c 81       	ldd	r24, Y+4	; 0x04
     da2:	9d 81       	ldd	r25, Y+5	; 0x05
     da4:	89 2b       	or	r24, r25
     da6:	21 f4       	brne	.+8      	; 0xdb0 <xQueueGenericReceive+0xbc>
     da8:	0f 90       	pop	r0
     daa:	0f be       	out	0x3f, r0	; 63
     dac:	80 e0       	ldi	r24, 0x00	; 0
     dae:	54 c0       	rjmp	.+168    	; 0xe58 <xQueueGenericReceive+0x164>
     db0:	b1 10       	cpse	r11, r1
     db2:	05 c0       	rjmp	.+10     	; 0xdbe <xQueueGenericReceive+0xca>
     db4:	ce 01       	movw	r24, r28
     db6:	01 96       	adiw	r24, 0x01	; 1
     db8:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <vTaskSetTimeOutState>
     dbc:	ba 2c       	mov	r11, r10
     dbe:	0f 90       	pop	r0
     dc0:	0f be       	out	0x3f, r0	; 63
     dc2:	0e 94 dd 08 	call	0x11ba	; 0x11ba <vTaskSuspendAll>
     dc6:	0f b6       	in	r0, 0x3f	; 63
     dc8:	f8 94       	cli
     dca:	0f 92       	push	r0
     dcc:	f8 01       	movw	r30, r16
     dce:	85 8d       	ldd	r24, Z+29	; 0x1d
     dd0:	8f 3f       	cpi	r24, 0xFF	; 255
     dd2:	09 f4       	brne	.+2      	; 0xdd6 <xQueueGenericReceive+0xe2>
     dd4:	15 8e       	std	Z+29, r1	; 0x1d
     dd6:	f8 01       	movw	r30, r16
     dd8:	86 8d       	ldd	r24, Z+30	; 0x1e
     dda:	8f 3f       	cpi	r24, 0xFF	; 255
     ddc:	09 f4       	brne	.+2      	; 0xde0 <xQueueGenericReceive+0xec>
     dde:	16 8e       	std	Z+30, r1	; 0x1e
     de0:	0f 90       	pop	r0
     de2:	0f be       	out	0x3f, r0	; 63
     de4:	be 01       	movw	r22, r28
     de6:	6c 5f       	subi	r22, 0xFC	; 252
     de8:	7f 4f       	sbci	r23, 0xFF	; 255
     dea:	ce 01       	movw	r24, r28
     dec:	01 96       	adiw	r24, 0x01	; 1
     dee:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <xTaskCheckForTimeOut>
     df2:	81 11       	cpse	r24, r1
     df4:	2b c0       	rjmp	.+86     	; 0xe4c <xQueueGenericReceive+0x158>
     df6:	0f b6       	in	r0, 0x3f	; 63
     df8:	f8 94       	cli
     dfa:	0f 92       	push	r0
     dfc:	f8 01       	movw	r30, r16
     dfe:	82 8d       	ldd	r24, Z+26	; 0x1a
     e00:	0f 90       	pop	r0
     e02:	0f be       	out	0x3f, r0	; 63
     e04:	81 11       	cpse	r24, r1
     e06:	1c c0       	rjmp	.+56     	; 0xe40 <xQueueGenericReceive+0x14c>
     e08:	80 81       	ld	r24, Z
     e0a:	91 81       	ldd	r25, Z+1	; 0x01
     e0c:	89 2b       	or	r24, r25
     e0e:	49 f4       	brne	.+18     	; 0xe22 <xQueueGenericReceive+0x12e>
     e10:	0f b6       	in	r0, 0x3f	; 63
     e12:	f8 94       	cli
     e14:	0f 92       	push	r0
     e16:	82 81       	ldd	r24, Z+2	; 0x02
     e18:	93 81       	ldd	r25, Z+3	; 0x03
     e1a:	0e 94 a8 0b 	call	0x1750	; 0x1750 <vTaskPriorityInherit>
     e1e:	0f 90       	pop	r0
     e20:	0f be       	out	0x3f, r0	; 63
     e22:	6c 81       	ldd	r22, Y+4	; 0x04
     e24:	7d 81       	ldd	r23, Y+5	; 0x05
     e26:	c7 01       	movw	r24, r14
     e28:	0e 94 ec 0a 	call	0x15d8	; 0x15d8 <vTaskPlaceOnEventList>
     e2c:	c8 01       	movw	r24, r16
     e2e:	0e 94 24 05 	call	0xa48	; 0xa48 <prvUnlockQueue>
     e32:	0e 94 a0 09 	call	0x1340	; 0x1340 <xTaskResumeAll>
     e36:	81 11       	cpse	r24, r1
     e38:	79 cf       	rjmp	.-270    	; 0xd2c <xQueueGenericReceive+0x38>
     e3a:	0e 94 25 03 	call	0x64a	; 0x64a <vPortYield>
     e3e:	76 cf       	rjmp	.-276    	; 0xd2c <xQueueGenericReceive+0x38>
     e40:	c8 01       	movw	r24, r16
     e42:	0e 94 24 05 	call	0xa48	; 0xa48 <prvUnlockQueue>
     e46:	0e 94 a0 09 	call	0x1340	; 0x1340 <xTaskResumeAll>
     e4a:	70 cf       	rjmp	.-288    	; 0xd2c <xQueueGenericReceive+0x38>
     e4c:	c8 01       	movw	r24, r16
     e4e:	0e 94 24 05 	call	0xa48	; 0xa48 <prvUnlockQueue>
     e52:	0e 94 a0 09 	call	0x1340	; 0x1340 <xTaskResumeAll>
     e56:	80 e0       	ldi	r24, 0x00	; 0
     e58:	0f 90       	pop	r0
     e5a:	0f 90       	pop	r0
     e5c:	0f 90       	pop	r0
     e5e:	0f 90       	pop	r0
     e60:	0f 90       	pop	r0
     e62:	df 91       	pop	r29
     e64:	cf 91       	pop	r28
     e66:	1f 91       	pop	r17
     e68:	0f 91       	pop	r16
     e6a:	ff 90       	pop	r15
     e6c:	ef 90       	pop	r14
     e6e:	df 90       	pop	r13
     e70:	cf 90       	pop	r12
     e72:	bf 90       	pop	r11
     e74:	af 90       	pop	r10
     e76:	9f 90       	pop	r9
     e78:	08 95       	ret

00000e7a <uxQueueMessagesWaiting>:
     e7a:	0f b6       	in	r0, 0x3f	; 63
     e7c:	f8 94       	cli
     e7e:	0f 92       	push	r0
     e80:	fc 01       	movw	r30, r24
     e82:	82 8d       	ldd	r24, Z+26	; 0x1a
     e84:	0f 90       	pop	r0
     e86:	0f be       	out	0x3f, r0	; 63
     e88:	08 95       	ret

00000e8a <prvResetNextTaskUnblockTime>:
     e8a:	e0 91 35 07 	lds	r30, 0x0735	; 0x800735 <pxDelayedTaskList>
     e8e:	f0 91 36 07 	lds	r31, 0x0736	; 0x800736 <pxDelayedTaskList+0x1>
     e92:	80 81       	ld	r24, Z
     e94:	81 11       	cpse	r24, r1
     e96:	07 c0       	rjmp	.+14     	; 0xea6 <prvResetNextTaskUnblockTime+0x1c>
     e98:	8f ef       	ldi	r24, 0xFF	; 255
     e9a:	9f ef       	ldi	r25, 0xFF	; 255
     e9c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
     ea0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
     ea4:	08 95       	ret
     ea6:	e0 91 35 07 	lds	r30, 0x0735	; 0x800735 <pxDelayedTaskList>
     eaa:	f0 91 36 07 	lds	r31, 0x0736	; 0x800736 <pxDelayedTaskList+0x1>
     eae:	05 80       	ldd	r0, Z+5	; 0x05
     eb0:	f6 81       	ldd	r31, Z+6	; 0x06
     eb2:	e0 2d       	mov	r30, r0
     eb4:	06 80       	ldd	r0, Z+6	; 0x06
     eb6:	f7 81       	ldd	r31, Z+7	; 0x07
     eb8:	e0 2d       	mov	r30, r0
     eba:	82 81       	ldd	r24, Z+2	; 0x02
     ebc:	93 81       	ldd	r25, Z+3	; 0x03
     ebe:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
     ec2:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
     ec6:	08 95       	ret

00000ec8 <prvAddCurrentTaskToDelayedList>:
     ec8:	cf 93       	push	r28
     eca:	df 93       	push	r29
     ecc:	ec 01       	movw	r28, r24
     ece:	e0 91 6d 07 	lds	r30, 0x076D	; 0x80076d <pxCurrentTCB>
     ed2:	f0 91 6e 07 	lds	r31, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
     ed6:	93 83       	std	Z+3, r25	; 0x03
     ed8:	82 83       	std	Z+2, r24	; 0x02
     eda:	80 91 12 07 	lds	r24, 0x0712	; 0x800712 <xTickCount>
     ede:	90 91 13 07 	lds	r25, 0x0713	; 0x800713 <xTickCount+0x1>
     ee2:	c8 17       	cp	r28, r24
     ee4:	d9 07       	cpc	r29, r25
     ee6:	68 f4       	brcc	.+26     	; 0xf02 <prvAddCurrentTaskToDelayedList+0x3a>
     ee8:	60 91 6d 07 	lds	r22, 0x076D	; 0x80076d <pxCurrentTCB>
     eec:	70 91 6e 07 	lds	r23, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
     ef0:	80 91 33 07 	lds	r24, 0x0733	; 0x800733 <pxOverflowDelayedTaskList>
     ef4:	90 91 34 07 	lds	r25, 0x0734	; 0x800734 <pxOverflowDelayedTaskList+0x1>
     ef8:	6e 5f       	subi	r22, 0xFE	; 254
     efa:	7f 4f       	sbci	r23, 0xFF	; 255
     efc:	0e 94 28 02 	call	0x450	; 0x450 <vListInsert>
     f00:	17 c0       	rjmp	.+46     	; 0xf30 <prvAddCurrentTaskToDelayedList+0x68>
     f02:	60 91 6d 07 	lds	r22, 0x076D	; 0x80076d <pxCurrentTCB>
     f06:	70 91 6e 07 	lds	r23, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
     f0a:	80 91 35 07 	lds	r24, 0x0735	; 0x800735 <pxDelayedTaskList>
     f0e:	90 91 36 07 	lds	r25, 0x0736	; 0x800736 <pxDelayedTaskList+0x1>
     f12:	6e 5f       	subi	r22, 0xFE	; 254
     f14:	7f 4f       	sbci	r23, 0xFF	; 255
     f16:	0e 94 28 02 	call	0x450	; 0x450 <vListInsert>
     f1a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <xNextTaskUnblockTime>
     f1e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <xNextTaskUnblockTime+0x1>
     f22:	c8 17       	cp	r28, r24
     f24:	d9 07       	cpc	r29, r25
     f26:	20 f4       	brcc	.+8      	; 0xf30 <prvAddCurrentTaskToDelayedList+0x68>
     f28:	d0 93 03 01 	sts	0x0103, r29	; 0x800103 <xNextTaskUnblockTime+0x1>
     f2c:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <xNextTaskUnblockTime>
     f30:	df 91       	pop	r29
     f32:	cf 91       	pop	r28
     f34:	08 95       	ret

00000f36 <xTaskGenericCreate>:
     f36:	4f 92       	push	r4
     f38:	5f 92       	push	r5
     f3a:	6f 92       	push	r6
     f3c:	7f 92       	push	r7
     f3e:	8f 92       	push	r8
     f40:	9f 92       	push	r9
     f42:	af 92       	push	r10
     f44:	bf 92       	push	r11
     f46:	cf 92       	push	r12
     f48:	df 92       	push	r13
     f4a:	ef 92       	push	r14
     f4c:	ff 92       	push	r15
     f4e:	0f 93       	push	r16
     f50:	1f 93       	push	r17
     f52:	cf 93       	push	r28
     f54:	df 93       	push	r29
     f56:	4c 01       	movw	r8, r24
     f58:	eb 01       	movw	r28, r22
     f5a:	5a 01       	movw	r10, r20
     f5c:	29 01       	movw	r4, r18
     f5e:	c1 14       	cp	r12, r1
     f60:	d1 04       	cpc	r13, r1
     f62:	39 f4       	brne	.+14     	; 0xf72 <xTaskGenericCreate+0x3c>
     f64:	ca 01       	movw	r24, r20
     f66:	0e 94 dd 03 	call	0x7ba	; 0x7ba <pvPortMalloc>
     f6a:	6c 01       	movw	r12, r24
     f6c:	89 2b       	or	r24, r25
     f6e:	09 f4       	brne	.+2      	; 0xf72 <xTaskGenericCreate+0x3c>
     f70:	e3 c0       	rjmp	.+454    	; 0x1138 <xTaskGenericCreate+0x202>
     f72:	88 e2       	ldi	r24, 0x28	; 40
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	0e 94 dd 03 	call	0x7ba	; 0x7ba <pvPortMalloc>
     f7a:	3c 01       	movw	r6, r24
     f7c:	00 97       	sbiw	r24, 0x00	; 0
     f7e:	79 f0       	breq	.+30     	; 0xf9e <xTaskGenericCreate+0x68>
     f80:	fc 01       	movw	r30, r24
     f82:	d0 8e       	std	Z+24, r13	; 0x18
     f84:	c7 8a       	std	Z+23, r12	; 0x17
     f86:	f1 e0       	ldi	r31, 0x01	; 1
     f88:	af 1a       	sub	r10, r31
     f8a:	b1 08       	sbc	r11, r1
     f8c:	ca 0c       	add	r12, r10
     f8e:	db 1c       	adc	r13, r11
     f90:	88 81       	ld	r24, Y
     f92:	f3 01       	movw	r30, r6
     f94:	81 8f       	std	Z+25, r24	; 0x19
     f96:	88 81       	ld	r24, Y
     f98:	81 11       	cpse	r24, r1
     f9a:	05 c0       	rjmp	.+10     	; 0xfa6 <xTaskGenericCreate+0x70>
     f9c:	14 c0       	rjmp	.+40     	; 0xfc6 <xTaskGenericCreate+0x90>
     f9e:	c6 01       	movw	r24, r12
     fa0:	0e 94 77 04 	call	0x8ee	; 0x8ee <vPortFree>
     fa4:	c9 c0       	rjmp	.+402    	; 0x1138 <xTaskGenericCreate+0x202>
     fa6:	d3 01       	movw	r26, r6
     fa8:	5a 96       	adiw	r26, 0x1a	; 26
     faa:	fe 01       	movw	r30, r28
     fac:	31 96       	adiw	r30, 0x01	; 1
     fae:	9e 01       	movw	r18, r28
     fb0:	28 5f       	subi	r18, 0xF8	; 248
     fb2:	3f 4f       	sbci	r19, 0xFF	; 255
     fb4:	ef 01       	movw	r28, r30
     fb6:	81 91       	ld	r24, Z+
     fb8:	8d 93       	st	X+, r24
     fba:	88 81       	ld	r24, Y
     fbc:	88 23       	and	r24, r24
     fbe:	19 f0       	breq	.+6      	; 0xfc6 <xTaskGenericCreate+0x90>
     fc0:	e2 17       	cp	r30, r18
     fc2:	f3 07       	cpc	r31, r19
     fc4:	b9 f7       	brne	.-18     	; 0xfb4 <xTaskGenericCreate+0x7e>
     fc6:	f3 01       	movw	r30, r6
     fc8:	10 a2       	std	Z+32, r1	; 0x20
     fca:	10 2f       	mov	r17, r16
     fcc:	04 30       	cpi	r16, 0x04	; 4
     fce:	08 f0       	brcs	.+2      	; 0xfd2 <xTaskGenericCreate+0x9c>
     fd0:	13 e0       	ldi	r17, 0x03	; 3
     fd2:	f3 01       	movw	r30, r6
     fd4:	16 8b       	std	Z+22, r17	; 0x16
     fd6:	11 a3       	std	Z+33, r17	; 0x21
     fd8:	12 a2       	std	Z+34, r1	; 0x22
     fda:	e3 01       	movw	r28, r6
     fdc:	22 96       	adiw	r28, 0x02	; 2
     fde:	ce 01       	movw	r24, r28
     fe0:	0e 94 03 02 	call	0x406	; 0x406 <vListInitialiseItem>
     fe4:	c3 01       	movw	r24, r6
     fe6:	0c 96       	adiw	r24, 0x0c	; 12
     fe8:	0e 94 03 02 	call	0x406	; 0x406 <vListInitialiseItem>
     fec:	f3 01       	movw	r30, r6
     fee:	71 86       	std	Z+9, r7	; 0x09
     ff0:	60 86       	std	Z+8, r6	; 0x08
     ff2:	84 e0       	ldi	r24, 0x04	; 4
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	81 1b       	sub	r24, r17
     ff8:	91 09       	sbc	r25, r1
     ffa:	95 87       	std	Z+13, r25	; 0x0d
     ffc:	84 87       	std	Z+12, r24	; 0x0c
     ffe:	73 8a       	std	Z+19, r7	; 0x13
    1000:	62 8a       	std	Z+18, r6	; 0x12
    1002:	13 a2       	std	Z+35, r1	; 0x23
    1004:	14 a2       	std	Z+36, r1	; 0x24
    1006:	15 a2       	std	Z+37, r1	; 0x25
    1008:	16 a2       	std	Z+38, r1	; 0x26
    100a:	17 a2       	std	Z+39, r1	; 0x27
    100c:	a2 01       	movw	r20, r4
    100e:	b4 01       	movw	r22, r8
    1010:	c6 01       	movw	r24, r12
    1012:	0e 94 7f 02 	call	0x4fe	; 0x4fe <pxPortInitialiseStack>
    1016:	f3 01       	movw	r30, r6
    1018:	91 83       	std	Z+1, r25	; 0x01
    101a:	80 83       	st	Z, r24
    101c:	e1 14       	cp	r14, r1
    101e:	f1 04       	cpc	r15, r1
    1020:	19 f0       	breq	.+6      	; 0x1028 <xTaskGenericCreate+0xf2>
    1022:	f7 01       	movw	r30, r14
    1024:	71 82       	std	Z+1, r7	; 0x01
    1026:	60 82       	st	Z, r6
    1028:	0f b6       	in	r0, 0x3f	; 63
    102a:	f8 94       	cli
    102c:	0f 92       	push	r0
    102e:	80 91 14 07 	lds	r24, 0x0714	; 0x800714 <uxCurrentNumberOfTasks>
    1032:	8f 5f       	subi	r24, 0xFF	; 255
    1034:	80 93 14 07 	sts	0x0714, r24	; 0x800714 <uxCurrentNumberOfTasks>
    1038:	80 91 6d 07 	lds	r24, 0x076D	; 0x80076d <pxCurrentTCB>
    103c:	90 91 6e 07 	lds	r25, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    1040:	89 2b       	or	r24, r25
    1042:	d1 f5       	brne	.+116    	; 0x10b8 <xTaskGenericCreate+0x182>
    1044:	70 92 6e 07 	sts	0x076E, r7	; 0x80076e <pxCurrentTCB+0x1>
    1048:	60 92 6d 07 	sts	0x076D, r6	; 0x80076d <pxCurrentTCB>
    104c:	80 91 14 07 	lds	r24, 0x0714	; 0x800714 <uxCurrentNumberOfTasks>
    1050:	81 30       	cpi	r24, 0x01	; 1
    1052:	09 f0       	breq	.+2      	; 0x1056 <xTaskGenericCreate+0x120>
    1054:	40 c0       	rjmp	.+128    	; 0x10d6 <xTaskGenericCreate+0x1a0>
    1056:	89 e4       	ldi	r24, 0x49	; 73
    1058:	97 e0       	ldi	r25, 0x07	; 7
    105a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <vListInitialise>
    105e:	82 e5       	ldi	r24, 0x52	; 82
    1060:	97 e0       	ldi	r25, 0x07	; 7
    1062:	0e 94 f5 01 	call	0x3ea	; 0x3ea <vListInitialise>
    1066:	8b e5       	ldi	r24, 0x5B	; 91
    1068:	97 e0       	ldi	r25, 0x07	; 7
    106a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <vListInitialise>
    106e:	84 e6       	ldi	r24, 0x64	; 100
    1070:	97 e0       	ldi	r25, 0x07	; 7
    1072:	0e 94 f5 01 	call	0x3ea	; 0x3ea <vListInitialise>
    1076:	80 e4       	ldi	r24, 0x40	; 64
    1078:	97 e0       	ldi	r25, 0x07	; 7
    107a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <vListInitialise>
    107e:	87 e3       	ldi	r24, 0x37	; 55
    1080:	97 e0       	ldi	r25, 0x07	; 7
    1082:	0e 94 f5 01 	call	0x3ea	; 0x3ea <vListInitialise>
    1086:	8a e2       	ldi	r24, 0x2A	; 42
    1088:	97 e0       	ldi	r25, 0x07	; 7
    108a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <vListInitialise>
    108e:	81 e2       	ldi	r24, 0x21	; 33
    1090:	97 e0       	ldi	r25, 0x07	; 7
    1092:	0e 94 f5 01 	call	0x3ea	; 0x3ea <vListInitialise>
    1096:	87 e1       	ldi	r24, 0x17	; 23
    1098:	97 e0       	ldi	r25, 0x07	; 7
    109a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <vListInitialise>
    109e:	80 e4       	ldi	r24, 0x40	; 64
    10a0:	97 e0       	ldi	r25, 0x07	; 7
    10a2:	90 93 36 07 	sts	0x0736, r25	; 0x800736 <pxDelayedTaskList+0x1>
    10a6:	80 93 35 07 	sts	0x0735, r24	; 0x800735 <pxDelayedTaskList>
    10aa:	87 e3       	ldi	r24, 0x37	; 55
    10ac:	97 e0       	ldi	r25, 0x07	; 7
    10ae:	90 93 34 07 	sts	0x0734, r25	; 0x800734 <pxOverflowDelayedTaskList+0x1>
    10b2:	80 93 33 07 	sts	0x0733, r24	; 0x800733 <pxOverflowDelayedTaskList>
    10b6:	0f c0       	rjmp	.+30     	; 0x10d6 <xTaskGenericCreate+0x1a0>
    10b8:	80 91 10 07 	lds	r24, 0x0710	; 0x800710 <xSchedulerRunning>
    10bc:	81 11       	cpse	r24, r1
    10be:	0b c0       	rjmp	.+22     	; 0x10d6 <xTaskGenericCreate+0x1a0>
    10c0:	e0 91 6d 07 	lds	r30, 0x076D	; 0x80076d <pxCurrentTCB>
    10c4:	f0 91 6e 07 	lds	r31, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    10c8:	86 89       	ldd	r24, Z+22	; 0x16
    10ca:	08 17       	cp	r16, r24
    10cc:	20 f0       	brcs	.+8      	; 0x10d6 <xTaskGenericCreate+0x1a0>
    10ce:	70 92 6e 07 	sts	0x076E, r7	; 0x80076e <pxCurrentTCB+0x1>
    10d2:	60 92 6d 07 	sts	0x076D, r6	; 0x80076d <pxCurrentTCB>
    10d6:	80 91 0c 07 	lds	r24, 0x070C	; 0x80070c <uxTaskNumber>
    10da:	8f 5f       	subi	r24, 0xFF	; 255
    10dc:	80 93 0c 07 	sts	0x070C, r24	; 0x80070c <uxTaskNumber>
    10e0:	f3 01       	movw	r30, r6
    10e2:	86 89       	ldd	r24, Z+22	; 0x16
    10e4:	90 91 11 07 	lds	r25, 0x0711	; 0x800711 <uxTopReadyPriority>
    10e8:	98 17       	cp	r25, r24
    10ea:	10 f4       	brcc	.+4      	; 0x10f0 <xTaskGenericCreate+0x1ba>
    10ec:	80 93 11 07 	sts	0x0711, r24	; 0x800711 <uxTopReadyPriority>
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	9c 01       	movw	r18, r24
    10f4:	22 0f       	add	r18, r18
    10f6:	33 1f       	adc	r19, r19
    10f8:	22 0f       	add	r18, r18
    10fa:	33 1f       	adc	r19, r19
    10fc:	22 0f       	add	r18, r18
    10fe:	33 1f       	adc	r19, r19
    1100:	82 0f       	add	r24, r18
    1102:	93 1f       	adc	r25, r19
    1104:	be 01       	movw	r22, r28
    1106:	87 5b       	subi	r24, 0xB7	; 183
    1108:	98 4f       	sbci	r25, 0xF8	; 248
    110a:	0e 94 07 02 	call	0x40e	; 0x40e <vListInsertEnd>
    110e:	0f 90       	pop	r0
    1110:	0f be       	out	0x3f, r0	; 63
    1112:	80 91 10 07 	lds	r24, 0x0710	; 0x800710 <xSchedulerRunning>
    1116:	88 23       	and	r24, r24
    1118:	59 f0       	breq	.+22     	; 0x1130 <xTaskGenericCreate+0x1fa>
    111a:	e0 91 6d 07 	lds	r30, 0x076D	; 0x80076d <pxCurrentTCB>
    111e:	f0 91 6e 07 	lds	r31, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    1122:	86 89       	ldd	r24, Z+22	; 0x16
    1124:	80 17       	cp	r24, r16
    1126:	30 f4       	brcc	.+12     	; 0x1134 <xTaskGenericCreate+0x1fe>
    1128:	0e 94 25 03 	call	0x64a	; 0x64a <vPortYield>
    112c:	81 e0       	ldi	r24, 0x01	; 1
    112e:	05 c0       	rjmp	.+10     	; 0x113a <xTaskGenericCreate+0x204>
    1130:	81 e0       	ldi	r24, 0x01	; 1
    1132:	03 c0       	rjmp	.+6      	; 0x113a <xTaskGenericCreate+0x204>
    1134:	81 e0       	ldi	r24, 0x01	; 1
    1136:	01 c0       	rjmp	.+2      	; 0x113a <xTaskGenericCreate+0x204>
    1138:	8f ef       	ldi	r24, 0xFF	; 255
    113a:	df 91       	pop	r29
    113c:	cf 91       	pop	r28
    113e:	1f 91       	pop	r17
    1140:	0f 91       	pop	r16
    1142:	ff 90       	pop	r15
    1144:	ef 90       	pop	r14
    1146:	df 90       	pop	r13
    1148:	cf 90       	pop	r12
    114a:	bf 90       	pop	r11
    114c:	af 90       	pop	r10
    114e:	9f 90       	pop	r9
    1150:	8f 90       	pop	r8
    1152:	7f 90       	pop	r7
    1154:	6f 90       	pop	r6
    1156:	5f 90       	pop	r5
    1158:	4f 90       	pop	r4
    115a:	08 95       	ret

0000115c <vTaskStartScheduler>:
    115c:	af 92       	push	r10
    115e:	bf 92       	push	r11
    1160:	cf 92       	push	r12
    1162:	df 92       	push	r13
    1164:	ef 92       	push	r14
    1166:	ff 92       	push	r15
    1168:	0f 93       	push	r16
    116a:	a1 2c       	mov	r10, r1
    116c:	b1 2c       	mov	r11, r1
    116e:	c1 2c       	mov	r12, r1
    1170:	d1 2c       	mov	r13, r1
    1172:	0f 2e       	mov	r0, r31
    1174:	f5 e1       	ldi	r31, 0x15	; 21
    1176:	ef 2e       	mov	r14, r31
    1178:	f7 e0       	ldi	r31, 0x07	; 7
    117a:	ff 2e       	mov	r15, r31
    117c:	f0 2d       	mov	r31, r0
    117e:	00 e0       	ldi	r16, 0x00	; 0
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	45 e5       	ldi	r20, 0x55	; 85
    1186:	50 e0       	ldi	r21, 0x00	; 0
    1188:	61 e2       	ldi	r22, 0x21	; 33
    118a:	71 e0       	ldi	r23, 0x01	; 1
    118c:	82 e4       	ldi	r24, 0x42	; 66
    118e:	9a e0       	ldi	r25, 0x0A	; 10
    1190:	0e 94 9b 07 	call	0xf36	; 0xf36 <xTaskGenericCreate>
    1194:	81 30       	cpi	r24, 0x01	; 1
    1196:	49 f4       	brne	.+18     	; 0x11aa <vTaskStartScheduler+0x4e>
    1198:	f8 94       	cli
    119a:	80 93 10 07 	sts	0x0710, r24	; 0x800710 <xSchedulerRunning>
    119e:	10 92 13 07 	sts	0x0713, r1	; 0x800713 <xTickCount+0x1>
    11a2:	10 92 12 07 	sts	0x0712, r1	; 0x800712 <xTickCount>
    11a6:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <xPortStartScheduler>
    11aa:	0f 91       	pop	r16
    11ac:	ff 90       	pop	r15
    11ae:	ef 90       	pop	r14
    11b0:	df 90       	pop	r13
    11b2:	cf 90       	pop	r12
    11b4:	bf 90       	pop	r11
    11b6:	af 90       	pop	r10
    11b8:	08 95       	ret

000011ba <vTaskSuspendAll>:
    11ba:	80 91 0b 07 	lds	r24, 0x070B	; 0x80070b <uxSchedulerSuspended>
    11be:	8f 5f       	subi	r24, 0xFF	; 255
    11c0:	80 93 0b 07 	sts	0x070B, r24	; 0x80070b <uxSchedulerSuspended>
    11c4:	08 95       	ret

000011c6 <xTaskIncrementTick>:
    11c6:	cf 92       	push	r12
    11c8:	df 92       	push	r13
    11ca:	ef 92       	push	r14
    11cc:	ff 92       	push	r15
    11ce:	0f 93       	push	r16
    11d0:	1f 93       	push	r17
    11d2:	cf 93       	push	r28
    11d4:	df 93       	push	r29
    11d6:	80 91 0b 07 	lds	r24, 0x070B	; 0x80070b <uxSchedulerSuspended>
    11da:	81 11       	cpse	r24, r1
    11dc:	9b c0       	rjmp	.+310    	; 0x1314 <xTaskIncrementTick+0x14e>
    11de:	80 91 12 07 	lds	r24, 0x0712	; 0x800712 <xTickCount>
    11e2:	90 91 13 07 	lds	r25, 0x0713	; 0x800713 <xTickCount+0x1>
    11e6:	01 96       	adiw	r24, 0x01	; 1
    11e8:	90 93 13 07 	sts	0x0713, r25	; 0x800713 <xTickCount+0x1>
    11ec:	80 93 12 07 	sts	0x0712, r24	; 0x800712 <xTickCount>
    11f0:	e0 90 12 07 	lds	r14, 0x0712	; 0x800712 <xTickCount>
    11f4:	f0 90 13 07 	lds	r15, 0x0713	; 0x800713 <xTickCount+0x1>
    11f8:	e1 14       	cp	r14, r1
    11fa:	f1 04       	cpc	r15, r1
    11fc:	b9 f4       	brne	.+46     	; 0x122c <xTaskIncrementTick+0x66>
    11fe:	80 91 35 07 	lds	r24, 0x0735	; 0x800735 <pxDelayedTaskList>
    1202:	90 91 36 07 	lds	r25, 0x0736	; 0x800736 <pxDelayedTaskList+0x1>
    1206:	20 91 33 07 	lds	r18, 0x0733	; 0x800733 <pxOverflowDelayedTaskList>
    120a:	30 91 34 07 	lds	r19, 0x0734	; 0x800734 <pxOverflowDelayedTaskList+0x1>
    120e:	30 93 36 07 	sts	0x0736, r19	; 0x800736 <pxDelayedTaskList+0x1>
    1212:	20 93 35 07 	sts	0x0735, r18	; 0x800735 <pxDelayedTaskList>
    1216:	90 93 34 07 	sts	0x0734, r25	; 0x800734 <pxOverflowDelayedTaskList+0x1>
    121a:	80 93 33 07 	sts	0x0733, r24	; 0x800733 <pxOverflowDelayedTaskList>
    121e:	80 91 0d 07 	lds	r24, 0x070D	; 0x80070d <xNumOfOverflows>
    1222:	8f 5f       	subi	r24, 0xFF	; 255
    1224:	80 93 0d 07 	sts	0x070D, r24	; 0x80070d <xNumOfOverflows>
    1228:	0e 94 45 07 	call	0xe8a	; 0xe8a <prvResetNextTaskUnblockTime>
    122c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <xNextTaskUnblockTime>
    1230:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <xNextTaskUnblockTime+0x1>
    1234:	e8 16       	cp	r14, r24
    1236:	f9 06       	cpc	r15, r25
    1238:	10 f4       	brcc	.+4      	; 0x123e <xTaskIncrementTick+0x78>
    123a:	d1 2c       	mov	r13, r1
    123c:	53 c0       	rjmp	.+166    	; 0x12e4 <xTaskIncrementTick+0x11e>
    123e:	d1 2c       	mov	r13, r1
    1240:	cc 24       	eor	r12, r12
    1242:	c3 94       	inc	r12
    1244:	e0 91 35 07 	lds	r30, 0x0735	; 0x800735 <pxDelayedTaskList>
    1248:	f0 91 36 07 	lds	r31, 0x0736	; 0x800736 <pxDelayedTaskList+0x1>
    124c:	80 81       	ld	r24, Z
    124e:	81 11       	cpse	r24, r1
    1250:	07 c0       	rjmp	.+14     	; 0x1260 <xTaskIncrementTick+0x9a>
    1252:	8f ef       	ldi	r24, 0xFF	; 255
    1254:	9f ef       	ldi	r25, 0xFF	; 255
    1256:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    125a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    125e:	42 c0       	rjmp	.+132    	; 0x12e4 <xTaskIncrementTick+0x11e>
    1260:	e0 91 35 07 	lds	r30, 0x0735	; 0x800735 <pxDelayedTaskList>
    1264:	f0 91 36 07 	lds	r31, 0x0736	; 0x800736 <pxDelayedTaskList+0x1>
    1268:	05 80       	ldd	r0, Z+5	; 0x05
    126a:	f6 81       	ldd	r31, Z+6	; 0x06
    126c:	e0 2d       	mov	r30, r0
    126e:	c6 81       	ldd	r28, Z+6	; 0x06
    1270:	d7 81       	ldd	r29, Z+7	; 0x07
    1272:	8a 81       	ldd	r24, Y+2	; 0x02
    1274:	9b 81       	ldd	r25, Y+3	; 0x03
    1276:	e8 16       	cp	r14, r24
    1278:	f9 06       	cpc	r15, r25
    127a:	28 f4       	brcc	.+10     	; 0x1286 <xTaskIncrementTick+0xc0>
    127c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <xNextTaskUnblockTime+0x1>
    1280:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <xNextTaskUnblockTime>
    1284:	2f c0       	rjmp	.+94     	; 0x12e4 <xTaskIncrementTick+0x11e>
    1286:	8e 01       	movw	r16, r28
    1288:	0e 5f       	subi	r16, 0xFE	; 254
    128a:	1f 4f       	sbci	r17, 0xFF	; 255
    128c:	c8 01       	movw	r24, r16
    128e:	0e 94 59 02 	call	0x4b2	; 0x4b2 <uxListRemove>
    1292:	8c 89       	ldd	r24, Y+20	; 0x14
    1294:	9d 89       	ldd	r25, Y+21	; 0x15
    1296:	89 2b       	or	r24, r25
    1298:	21 f0       	breq	.+8      	; 0x12a2 <xTaskIncrementTick+0xdc>
    129a:	ce 01       	movw	r24, r28
    129c:	0c 96       	adiw	r24, 0x0c	; 12
    129e:	0e 94 59 02 	call	0x4b2	; 0x4b2 <uxListRemove>
    12a2:	8e 89       	ldd	r24, Y+22	; 0x16
    12a4:	90 91 11 07 	lds	r25, 0x0711	; 0x800711 <uxTopReadyPriority>
    12a8:	98 17       	cp	r25, r24
    12aa:	10 f4       	brcc	.+4      	; 0x12b0 <xTaskIncrementTick+0xea>
    12ac:	80 93 11 07 	sts	0x0711, r24	; 0x800711 <uxTopReadyPriority>
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	9c 01       	movw	r18, r24
    12b4:	22 0f       	add	r18, r18
    12b6:	33 1f       	adc	r19, r19
    12b8:	22 0f       	add	r18, r18
    12ba:	33 1f       	adc	r19, r19
    12bc:	22 0f       	add	r18, r18
    12be:	33 1f       	adc	r19, r19
    12c0:	82 0f       	add	r24, r18
    12c2:	93 1f       	adc	r25, r19
    12c4:	b8 01       	movw	r22, r16
    12c6:	87 5b       	subi	r24, 0xB7	; 183
    12c8:	98 4f       	sbci	r25, 0xF8	; 248
    12ca:	0e 94 07 02 	call	0x40e	; 0x40e <vListInsertEnd>
    12ce:	e0 91 6d 07 	lds	r30, 0x076D	; 0x80076d <pxCurrentTCB>
    12d2:	f0 91 6e 07 	lds	r31, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    12d6:	9e 89       	ldd	r25, Y+22	; 0x16
    12d8:	86 89       	ldd	r24, Z+22	; 0x16
    12da:	98 17       	cp	r25, r24
    12dc:	08 f4       	brcc	.+2      	; 0x12e0 <xTaskIncrementTick+0x11a>
    12de:	b2 cf       	rjmp	.-156    	; 0x1244 <xTaskIncrementTick+0x7e>
    12e0:	dc 2c       	mov	r13, r12
    12e2:	b0 cf       	rjmp	.-160    	; 0x1244 <xTaskIncrementTick+0x7e>
    12e4:	e0 91 6d 07 	lds	r30, 0x076D	; 0x80076d <pxCurrentTCB>
    12e8:	f0 91 6e 07 	lds	r31, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    12ec:	86 89       	ldd	r24, Z+22	; 0x16
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	fc 01       	movw	r30, r24
    12f2:	ee 0f       	add	r30, r30
    12f4:	ff 1f       	adc	r31, r31
    12f6:	ee 0f       	add	r30, r30
    12f8:	ff 1f       	adc	r31, r31
    12fa:	ee 0f       	add	r30, r30
    12fc:	ff 1f       	adc	r31, r31
    12fe:	8e 0f       	add	r24, r30
    1300:	9f 1f       	adc	r25, r31
    1302:	fc 01       	movw	r30, r24
    1304:	e7 5b       	subi	r30, 0xB7	; 183
    1306:	f8 4f       	sbci	r31, 0xF8	; 248
    1308:	80 81       	ld	r24, Z
    130a:	82 30       	cpi	r24, 0x02	; 2
    130c:	48 f0       	brcs	.+18     	; 0x1320 <xTaskIncrementTick+0x15a>
    130e:	dd 24       	eor	r13, r13
    1310:	d3 94       	inc	r13
    1312:	06 c0       	rjmp	.+12     	; 0x1320 <xTaskIncrementTick+0x15a>
    1314:	80 91 0f 07 	lds	r24, 0x070F	; 0x80070f <uxPendedTicks>
    1318:	8f 5f       	subi	r24, 0xFF	; 255
    131a:	80 93 0f 07 	sts	0x070F, r24	; 0x80070f <uxPendedTicks>
    131e:	d1 2c       	mov	r13, r1
    1320:	80 91 0e 07 	lds	r24, 0x070E	; 0x80070e <xYieldPending>
    1324:	88 23       	and	r24, r24
    1326:	11 f0       	breq	.+4      	; 0x132c <xTaskIncrementTick+0x166>
    1328:	dd 24       	eor	r13, r13
    132a:	d3 94       	inc	r13
    132c:	8d 2d       	mov	r24, r13
    132e:	df 91       	pop	r29
    1330:	cf 91       	pop	r28
    1332:	1f 91       	pop	r17
    1334:	0f 91       	pop	r16
    1336:	ff 90       	pop	r15
    1338:	ef 90       	pop	r14
    133a:	df 90       	pop	r13
    133c:	cf 90       	pop	r12
    133e:	08 95       	ret

00001340 <xTaskResumeAll>:
    1340:	df 92       	push	r13
    1342:	ef 92       	push	r14
    1344:	ff 92       	push	r15
    1346:	0f 93       	push	r16
    1348:	1f 93       	push	r17
    134a:	cf 93       	push	r28
    134c:	df 93       	push	r29
    134e:	0f b6       	in	r0, 0x3f	; 63
    1350:	f8 94       	cli
    1352:	0f 92       	push	r0
    1354:	80 91 0b 07 	lds	r24, 0x070B	; 0x80070b <uxSchedulerSuspended>
    1358:	81 50       	subi	r24, 0x01	; 1
    135a:	80 93 0b 07 	sts	0x070B, r24	; 0x80070b <uxSchedulerSuspended>
    135e:	80 91 0b 07 	lds	r24, 0x070B	; 0x80070b <uxSchedulerSuspended>
    1362:	81 11       	cpse	r24, r1
    1364:	62 c0       	rjmp	.+196    	; 0x142a <xTaskResumeAll+0xea>
    1366:	80 91 14 07 	lds	r24, 0x0714	; 0x800714 <uxCurrentNumberOfTasks>
    136a:	81 11       	cpse	r24, r1
    136c:	33 c0       	rjmp	.+102    	; 0x13d4 <xTaskResumeAll+0x94>
    136e:	60 c0       	rjmp	.+192    	; 0x1430 <xTaskResumeAll+0xf0>
    1370:	d7 01       	movw	r26, r14
    1372:	15 96       	adiw	r26, 0x05	; 5
    1374:	ed 91       	ld	r30, X+
    1376:	fc 91       	ld	r31, X
    1378:	16 97       	sbiw	r26, 0x06	; 6
    137a:	c6 81       	ldd	r28, Z+6	; 0x06
    137c:	d7 81       	ldd	r29, Z+7	; 0x07
    137e:	ce 01       	movw	r24, r28
    1380:	0c 96       	adiw	r24, 0x0c	; 12
    1382:	0e 94 59 02 	call	0x4b2	; 0x4b2 <uxListRemove>
    1386:	8e 01       	movw	r16, r28
    1388:	0e 5f       	subi	r16, 0xFE	; 254
    138a:	1f 4f       	sbci	r17, 0xFF	; 255
    138c:	c8 01       	movw	r24, r16
    138e:	0e 94 59 02 	call	0x4b2	; 0x4b2 <uxListRemove>
    1392:	8e 89       	ldd	r24, Y+22	; 0x16
    1394:	90 91 11 07 	lds	r25, 0x0711	; 0x800711 <uxTopReadyPriority>
    1398:	98 17       	cp	r25, r24
    139a:	10 f4       	brcc	.+4      	; 0x13a0 <xTaskResumeAll+0x60>
    139c:	80 93 11 07 	sts	0x0711, r24	; 0x800711 <uxTopReadyPriority>
    13a0:	90 e0       	ldi	r25, 0x00	; 0
    13a2:	9c 01       	movw	r18, r24
    13a4:	22 0f       	add	r18, r18
    13a6:	33 1f       	adc	r19, r19
    13a8:	22 0f       	add	r18, r18
    13aa:	33 1f       	adc	r19, r19
    13ac:	22 0f       	add	r18, r18
    13ae:	33 1f       	adc	r19, r19
    13b0:	82 0f       	add	r24, r18
    13b2:	93 1f       	adc	r25, r19
    13b4:	b8 01       	movw	r22, r16
    13b6:	87 5b       	subi	r24, 0xB7	; 183
    13b8:	98 4f       	sbci	r25, 0xF8	; 248
    13ba:	0e 94 07 02 	call	0x40e	; 0x40e <vListInsertEnd>
    13be:	e0 91 6d 07 	lds	r30, 0x076D	; 0x80076d <pxCurrentTCB>
    13c2:	f0 91 6e 07 	lds	r31, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    13c6:	9e 89       	ldd	r25, Y+22	; 0x16
    13c8:	86 89       	ldd	r24, Z+22	; 0x16
    13ca:	98 17       	cp	r25, r24
    13cc:	58 f0       	brcs	.+22     	; 0x13e4 <xTaskResumeAll+0xa4>
    13ce:	d0 92 0e 07 	sts	0x070E, r13	; 0x80070e <xYieldPending>
    13d2:	08 c0       	rjmp	.+16     	; 0x13e4 <xTaskResumeAll+0xa4>
    13d4:	0f 2e       	mov	r0, r31
    13d6:	fa e2       	ldi	r31, 0x2A	; 42
    13d8:	ef 2e       	mov	r14, r31
    13da:	f7 e0       	ldi	r31, 0x07	; 7
    13dc:	ff 2e       	mov	r15, r31
    13de:	f0 2d       	mov	r31, r0
    13e0:	dd 24       	eor	r13, r13
    13e2:	d3 94       	inc	r13
    13e4:	f7 01       	movw	r30, r14
    13e6:	80 81       	ld	r24, Z
    13e8:	81 11       	cpse	r24, r1
    13ea:	c2 cf       	rjmp	.-124    	; 0x1370 <xTaskResumeAll+0x30>
    13ec:	80 91 0f 07 	lds	r24, 0x070F	; 0x80070f <uxPendedTicks>
    13f0:	88 23       	and	r24, r24
    13f2:	99 f0       	breq	.+38     	; 0x141a <xTaskResumeAll+0xda>
    13f4:	80 91 0f 07 	lds	r24, 0x070F	; 0x80070f <uxPendedTicks>
    13f8:	88 23       	and	r24, r24
    13fa:	79 f0       	breq	.+30     	; 0x141a <xTaskResumeAll+0xda>
    13fc:	c1 e0       	ldi	r28, 0x01	; 1
    13fe:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <xTaskIncrementTick>
    1402:	81 11       	cpse	r24, r1
    1404:	c0 93 0e 07 	sts	0x070E, r28	; 0x80070e <xYieldPending>
    1408:	80 91 0f 07 	lds	r24, 0x070F	; 0x80070f <uxPendedTicks>
    140c:	81 50       	subi	r24, 0x01	; 1
    140e:	80 93 0f 07 	sts	0x070F, r24	; 0x80070f <uxPendedTicks>
    1412:	80 91 0f 07 	lds	r24, 0x070F	; 0x80070f <uxPendedTicks>
    1416:	81 11       	cpse	r24, r1
    1418:	f2 cf       	rjmp	.-28     	; 0x13fe <xTaskResumeAll+0xbe>
    141a:	80 91 0e 07 	lds	r24, 0x070E	; 0x80070e <xYieldPending>
    141e:	81 30       	cpi	r24, 0x01	; 1
    1420:	31 f4       	brne	.+12     	; 0x142e <xTaskResumeAll+0xee>
    1422:	0e 94 25 03 	call	0x64a	; 0x64a <vPortYield>
    1426:	81 e0       	ldi	r24, 0x01	; 1
    1428:	03 c0       	rjmp	.+6      	; 0x1430 <xTaskResumeAll+0xf0>
    142a:	80 e0       	ldi	r24, 0x00	; 0
    142c:	01 c0       	rjmp	.+2      	; 0x1430 <xTaskResumeAll+0xf0>
    142e:	80 e0       	ldi	r24, 0x00	; 0
    1430:	0f 90       	pop	r0
    1432:	0f be       	out	0x3f, r0	; 63
    1434:	df 91       	pop	r29
    1436:	cf 91       	pop	r28
    1438:	1f 91       	pop	r17
    143a:	0f 91       	pop	r16
    143c:	ff 90       	pop	r15
    143e:	ef 90       	pop	r14
    1440:	df 90       	pop	r13
    1442:	08 95       	ret

00001444 <vTaskDelay>:
    1444:	cf 93       	push	r28
    1446:	df 93       	push	r29
    1448:	ec 01       	movw	r28, r24
    144a:	89 2b       	or	r24, r25
    144c:	b1 f0       	breq	.+44     	; 0x147a <vTaskDelay+0x36>
    144e:	0e 94 dd 08 	call	0x11ba	; 0x11ba <vTaskSuspendAll>
    1452:	80 91 12 07 	lds	r24, 0x0712	; 0x800712 <xTickCount>
    1456:	90 91 13 07 	lds	r25, 0x0713	; 0x800713 <xTickCount+0x1>
    145a:	c8 0f       	add	r28, r24
    145c:	d9 1f       	adc	r29, r25
    145e:	80 91 6d 07 	lds	r24, 0x076D	; 0x80076d <pxCurrentTCB>
    1462:	90 91 6e 07 	lds	r25, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    1466:	02 96       	adiw	r24, 0x02	; 2
    1468:	0e 94 59 02 	call	0x4b2	; 0x4b2 <uxListRemove>
    146c:	ce 01       	movw	r24, r28
    146e:	0e 94 64 07 	call	0xec8	; 0xec8 <prvAddCurrentTaskToDelayedList>
    1472:	0e 94 a0 09 	call	0x1340	; 0x1340 <xTaskResumeAll>
    1476:	81 11       	cpse	r24, r1
    1478:	02 c0       	rjmp	.+4      	; 0x147e <vTaskDelay+0x3a>
    147a:	0e 94 25 03 	call	0x64a	; 0x64a <vPortYield>
    147e:	df 91       	pop	r29
    1480:	cf 91       	pop	r28
    1482:	08 95       	ret

00001484 <prvIdleTask>:
    1484:	01 e2       	ldi	r16, 0x21	; 33
    1486:	17 e0       	ldi	r17, 0x07	; 7
    1488:	0f 2e       	mov	r0, r31
    148a:	f9 e4       	ldi	r31, 0x49	; 73
    148c:	ef 2e       	mov	r14, r31
    148e:	f7 e0       	ldi	r31, 0x07	; 7
    1490:	ff 2e       	mov	r15, r31
    1492:	f0 2d       	mov	r31, r0
    1494:	29 c0       	rjmp	.+82     	; 0x14e8 <prvIdleTask+0x64>
    1496:	0e 94 dd 08 	call	0x11ba	; 0x11ba <vTaskSuspendAll>
    149a:	d8 01       	movw	r26, r16
    149c:	cc 91       	ld	r28, X
    149e:	0e 94 a0 09 	call	0x1340	; 0x1340 <xTaskResumeAll>
    14a2:	cc 23       	and	r28, r28
    14a4:	09 f1       	breq	.+66     	; 0x14e8 <prvIdleTask+0x64>
    14a6:	0f b6       	in	r0, 0x3f	; 63
    14a8:	f8 94       	cli
    14aa:	0f 92       	push	r0
    14ac:	d8 01       	movw	r26, r16
    14ae:	15 96       	adiw	r26, 0x05	; 5
    14b0:	ed 91       	ld	r30, X+
    14b2:	fc 91       	ld	r31, X
    14b4:	16 97       	sbiw	r26, 0x06	; 6
    14b6:	c6 81       	ldd	r28, Z+6	; 0x06
    14b8:	d7 81       	ldd	r29, Z+7	; 0x07
    14ba:	ce 01       	movw	r24, r28
    14bc:	02 96       	adiw	r24, 0x02	; 2
    14be:	0e 94 59 02 	call	0x4b2	; 0x4b2 <uxListRemove>
    14c2:	80 91 14 07 	lds	r24, 0x0714	; 0x800714 <uxCurrentNumberOfTasks>
    14c6:	81 50       	subi	r24, 0x01	; 1
    14c8:	80 93 14 07 	sts	0x0714, r24	; 0x800714 <uxCurrentNumberOfTasks>
    14cc:	80 91 20 07 	lds	r24, 0x0720	; 0x800720 <uxTasksDeleted>
    14d0:	81 50       	subi	r24, 0x01	; 1
    14d2:	80 93 20 07 	sts	0x0720, r24	; 0x800720 <uxTasksDeleted>
    14d6:	0f 90       	pop	r0
    14d8:	0f be       	out	0x3f, r0	; 63
    14da:	8f 89       	ldd	r24, Y+23	; 0x17
    14dc:	98 8d       	ldd	r25, Y+24	; 0x18
    14de:	0e 94 77 04 	call	0x8ee	; 0x8ee <vPortFree>
    14e2:	ce 01       	movw	r24, r28
    14e4:	0e 94 77 04 	call	0x8ee	; 0x8ee <vPortFree>
    14e8:	80 91 20 07 	lds	r24, 0x0720	; 0x800720 <uxTasksDeleted>
    14ec:	81 11       	cpse	r24, r1
    14ee:	d3 cf       	rjmp	.-90     	; 0x1496 <prvIdleTask+0x12>
    14f0:	f7 01       	movw	r30, r14
    14f2:	80 81       	ld	r24, Z
    14f4:	82 30       	cpi	r24, 0x02	; 2
    14f6:	c0 f3       	brcs	.-16     	; 0x14e8 <prvIdleTask+0x64>
    14f8:	0e 94 25 03 	call	0x64a	; 0x64a <vPortYield>
    14fc:	f5 cf       	rjmp	.-22     	; 0x14e8 <prvIdleTask+0x64>

000014fe <vTaskSwitchContext>:
    14fe:	80 91 0b 07 	lds	r24, 0x070B	; 0x80070b <uxSchedulerSuspended>
    1502:	88 23       	and	r24, r24
    1504:	21 f0       	breq	.+8      	; 0x150e <vTaskSwitchContext+0x10>
    1506:	81 e0       	ldi	r24, 0x01	; 1
    1508:	80 93 0e 07 	sts	0x070E, r24	; 0x80070e <xYieldPending>
    150c:	08 95       	ret
    150e:	10 92 0e 07 	sts	0x070E, r1	; 0x80070e <xYieldPending>
    1512:	80 91 11 07 	lds	r24, 0x0711	; 0x800711 <uxTopReadyPriority>
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	fc 01       	movw	r30, r24
    151a:	ee 0f       	add	r30, r30
    151c:	ff 1f       	adc	r31, r31
    151e:	ee 0f       	add	r30, r30
    1520:	ff 1f       	adc	r31, r31
    1522:	ee 0f       	add	r30, r30
    1524:	ff 1f       	adc	r31, r31
    1526:	8e 0f       	add	r24, r30
    1528:	9f 1f       	adc	r25, r31
    152a:	fc 01       	movw	r30, r24
    152c:	e7 5b       	subi	r30, 0xB7	; 183
    152e:	f8 4f       	sbci	r31, 0xF8	; 248
    1530:	80 81       	ld	r24, Z
    1532:	81 11       	cpse	r24, r1
    1534:	17 c0       	rjmp	.+46     	; 0x1564 <vTaskSwitchContext+0x66>
    1536:	80 91 11 07 	lds	r24, 0x0711	; 0x800711 <uxTopReadyPriority>
    153a:	81 50       	subi	r24, 0x01	; 1
    153c:	80 93 11 07 	sts	0x0711, r24	; 0x800711 <uxTopReadyPriority>
    1540:	80 91 11 07 	lds	r24, 0x0711	; 0x800711 <uxTopReadyPriority>
    1544:	90 e0       	ldi	r25, 0x00	; 0
    1546:	fc 01       	movw	r30, r24
    1548:	ee 0f       	add	r30, r30
    154a:	ff 1f       	adc	r31, r31
    154c:	ee 0f       	add	r30, r30
    154e:	ff 1f       	adc	r31, r31
    1550:	ee 0f       	add	r30, r30
    1552:	ff 1f       	adc	r31, r31
    1554:	8e 0f       	add	r24, r30
    1556:	9f 1f       	adc	r25, r31
    1558:	fc 01       	movw	r30, r24
    155a:	e7 5b       	subi	r30, 0xB7	; 183
    155c:	f8 4f       	sbci	r31, 0xF8	; 248
    155e:	80 81       	ld	r24, Z
    1560:	88 23       	and	r24, r24
    1562:	49 f3       	breq	.-46     	; 0x1536 <vTaskSwitchContext+0x38>
    1564:	80 91 11 07 	lds	r24, 0x0711	; 0x800711 <uxTopReadyPriority>
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	9c 01       	movw	r18, r24
    156c:	22 0f       	add	r18, r18
    156e:	33 1f       	adc	r19, r19
    1570:	22 0f       	add	r18, r18
    1572:	33 1f       	adc	r19, r19
    1574:	22 0f       	add	r18, r18
    1576:	33 1f       	adc	r19, r19
    1578:	28 0f       	add	r18, r24
    157a:	39 1f       	adc	r19, r25
    157c:	d9 01       	movw	r26, r18
    157e:	a7 5b       	subi	r26, 0xB7	; 183
    1580:	b8 4f       	sbci	r27, 0xF8	; 248
    1582:	11 96       	adiw	r26, 0x01	; 1
    1584:	ed 91       	ld	r30, X+
    1586:	fc 91       	ld	r31, X
    1588:	12 97       	sbiw	r26, 0x02	; 2
    158a:	02 80       	ldd	r0, Z+2	; 0x02
    158c:	f3 81       	ldd	r31, Z+3	; 0x03
    158e:	e0 2d       	mov	r30, r0
    1590:	12 96       	adiw	r26, 0x02	; 2
    1592:	fc 93       	st	X, r31
    1594:	ee 93       	st	-X, r30
    1596:	11 97       	sbiw	r26, 0x01	; 1
    1598:	24 5b       	subi	r18, 0xB4	; 180
    159a:	38 4f       	sbci	r19, 0xF8	; 248
    159c:	e2 17       	cp	r30, r18
    159e:	f3 07       	cpc	r31, r19
    15a0:	29 f4       	brne	.+10     	; 0x15ac <vTaskSwitchContext+0xae>
    15a2:	22 81       	ldd	r18, Z+2	; 0x02
    15a4:	33 81       	ldd	r19, Z+3	; 0x03
    15a6:	fd 01       	movw	r30, r26
    15a8:	32 83       	std	Z+2, r19	; 0x02
    15aa:	21 83       	std	Z+1, r18	; 0x01
    15ac:	fc 01       	movw	r30, r24
    15ae:	ee 0f       	add	r30, r30
    15b0:	ff 1f       	adc	r31, r31
    15b2:	ee 0f       	add	r30, r30
    15b4:	ff 1f       	adc	r31, r31
    15b6:	ee 0f       	add	r30, r30
    15b8:	ff 1f       	adc	r31, r31
    15ba:	8e 0f       	add	r24, r30
    15bc:	9f 1f       	adc	r25, r31
    15be:	fc 01       	movw	r30, r24
    15c0:	e7 5b       	subi	r30, 0xB7	; 183
    15c2:	f8 4f       	sbci	r31, 0xF8	; 248
    15c4:	01 80       	ldd	r0, Z+1	; 0x01
    15c6:	f2 81       	ldd	r31, Z+2	; 0x02
    15c8:	e0 2d       	mov	r30, r0
    15ca:	86 81       	ldd	r24, Z+6	; 0x06
    15cc:	97 81       	ldd	r25, Z+7	; 0x07
    15ce:	90 93 6e 07 	sts	0x076E, r25	; 0x80076e <pxCurrentTCB+0x1>
    15d2:	80 93 6d 07 	sts	0x076D, r24	; 0x80076d <pxCurrentTCB>
    15d6:	08 95       	ret

000015d8 <vTaskPlaceOnEventList>:
    15d8:	cf 93       	push	r28
    15da:	df 93       	push	r29
    15dc:	eb 01       	movw	r28, r22
    15de:	60 91 6d 07 	lds	r22, 0x076D	; 0x80076d <pxCurrentTCB>
    15e2:	70 91 6e 07 	lds	r23, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    15e6:	64 5f       	subi	r22, 0xF4	; 244
    15e8:	7f 4f       	sbci	r23, 0xFF	; 255
    15ea:	0e 94 28 02 	call	0x450	; 0x450 <vListInsert>
    15ee:	80 91 6d 07 	lds	r24, 0x076D	; 0x80076d <pxCurrentTCB>
    15f2:	90 91 6e 07 	lds	r25, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    15f6:	02 96       	adiw	r24, 0x02	; 2
    15f8:	0e 94 59 02 	call	0x4b2	; 0x4b2 <uxListRemove>
    15fc:	cf 3f       	cpi	r28, 0xFF	; 255
    15fe:	8f ef       	ldi	r24, 0xFF	; 255
    1600:	d8 07       	cpc	r29, r24
    1602:	59 f4       	brne	.+22     	; 0x161a <vTaskPlaceOnEventList+0x42>
    1604:	60 91 6d 07 	lds	r22, 0x076D	; 0x80076d <pxCurrentTCB>
    1608:	70 91 6e 07 	lds	r23, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    160c:	6e 5f       	subi	r22, 0xFE	; 254
    160e:	7f 4f       	sbci	r23, 0xFF	; 255
    1610:	87 e1       	ldi	r24, 0x17	; 23
    1612:	97 e0       	ldi	r25, 0x07	; 7
    1614:	0e 94 07 02 	call	0x40e	; 0x40e <vListInsertEnd>
    1618:	08 c0       	rjmp	.+16     	; 0x162a <vTaskPlaceOnEventList+0x52>
    161a:	80 91 12 07 	lds	r24, 0x0712	; 0x800712 <xTickCount>
    161e:	90 91 13 07 	lds	r25, 0x0713	; 0x800713 <xTickCount+0x1>
    1622:	8c 0f       	add	r24, r28
    1624:	9d 1f       	adc	r25, r29
    1626:	0e 94 64 07 	call	0xec8	; 0xec8 <prvAddCurrentTaskToDelayedList>
    162a:	df 91       	pop	r29
    162c:	cf 91       	pop	r28
    162e:	08 95       	ret

00001630 <xTaskRemoveFromEventList>:
    1630:	0f 93       	push	r16
    1632:	1f 93       	push	r17
    1634:	cf 93       	push	r28
    1636:	df 93       	push	r29
    1638:	dc 01       	movw	r26, r24
    163a:	15 96       	adiw	r26, 0x05	; 5
    163c:	ed 91       	ld	r30, X+
    163e:	fc 91       	ld	r31, X
    1640:	16 97       	sbiw	r26, 0x06	; 6
    1642:	c6 81       	ldd	r28, Z+6	; 0x06
    1644:	d7 81       	ldd	r29, Z+7	; 0x07
    1646:	8e 01       	movw	r16, r28
    1648:	04 5f       	subi	r16, 0xF4	; 244
    164a:	1f 4f       	sbci	r17, 0xFF	; 255
    164c:	c8 01       	movw	r24, r16
    164e:	0e 94 59 02 	call	0x4b2	; 0x4b2 <uxListRemove>
    1652:	80 91 0b 07 	lds	r24, 0x070B	; 0x80070b <uxSchedulerSuspended>
    1656:	81 11       	cpse	r24, r1
    1658:	1c c0       	rjmp	.+56     	; 0x1692 <xTaskRemoveFromEventList+0x62>
    165a:	0a 50       	subi	r16, 0x0A	; 10
    165c:	11 09       	sbc	r17, r1
    165e:	c8 01       	movw	r24, r16
    1660:	0e 94 59 02 	call	0x4b2	; 0x4b2 <uxListRemove>
    1664:	8e 89       	ldd	r24, Y+22	; 0x16
    1666:	90 91 11 07 	lds	r25, 0x0711	; 0x800711 <uxTopReadyPriority>
    166a:	98 17       	cp	r25, r24
    166c:	10 f4       	brcc	.+4      	; 0x1672 <xTaskRemoveFromEventList+0x42>
    166e:	80 93 11 07 	sts	0x0711, r24	; 0x800711 <uxTopReadyPriority>
    1672:	90 e0       	ldi	r25, 0x00	; 0
    1674:	9c 01       	movw	r18, r24
    1676:	22 0f       	add	r18, r18
    1678:	33 1f       	adc	r19, r19
    167a:	22 0f       	add	r18, r18
    167c:	33 1f       	adc	r19, r19
    167e:	22 0f       	add	r18, r18
    1680:	33 1f       	adc	r19, r19
    1682:	82 0f       	add	r24, r18
    1684:	93 1f       	adc	r25, r19
    1686:	b8 01       	movw	r22, r16
    1688:	87 5b       	subi	r24, 0xB7	; 183
    168a:	98 4f       	sbci	r25, 0xF8	; 248
    168c:	0e 94 07 02 	call	0x40e	; 0x40e <vListInsertEnd>
    1690:	05 c0       	rjmp	.+10     	; 0x169c <xTaskRemoveFromEventList+0x6c>
    1692:	b8 01       	movw	r22, r16
    1694:	8a e2       	ldi	r24, 0x2A	; 42
    1696:	97 e0       	ldi	r25, 0x07	; 7
    1698:	0e 94 07 02 	call	0x40e	; 0x40e <vListInsertEnd>
    169c:	e0 91 6d 07 	lds	r30, 0x076D	; 0x80076d <pxCurrentTCB>
    16a0:	f0 91 6e 07 	lds	r31, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    16a4:	9e 89       	ldd	r25, Y+22	; 0x16
    16a6:	86 89       	ldd	r24, Z+22	; 0x16
    16a8:	89 17       	cp	r24, r25
    16aa:	20 f4       	brcc	.+8      	; 0x16b4 <xTaskRemoveFromEventList+0x84>
    16ac:	81 e0       	ldi	r24, 0x01	; 1
    16ae:	80 93 0e 07 	sts	0x070E, r24	; 0x80070e <xYieldPending>
    16b2:	01 c0       	rjmp	.+2      	; 0x16b6 <xTaskRemoveFromEventList+0x86>
    16b4:	80 e0       	ldi	r24, 0x00	; 0
    16b6:	df 91       	pop	r29
    16b8:	cf 91       	pop	r28
    16ba:	1f 91       	pop	r17
    16bc:	0f 91       	pop	r16
    16be:	08 95       	ret

000016c0 <vTaskSetTimeOutState>:
    16c0:	20 91 0d 07 	lds	r18, 0x070D	; 0x80070d <xNumOfOverflows>
    16c4:	fc 01       	movw	r30, r24
    16c6:	20 83       	st	Z, r18
    16c8:	20 91 12 07 	lds	r18, 0x0712	; 0x800712 <xTickCount>
    16cc:	30 91 13 07 	lds	r19, 0x0713	; 0x800713 <xTickCount+0x1>
    16d0:	32 83       	std	Z+2, r19	; 0x02
    16d2:	21 83       	std	Z+1, r18	; 0x01
    16d4:	08 95       	ret

000016d6 <xTaskCheckForTimeOut>:
    16d6:	0f b6       	in	r0, 0x3f	; 63
    16d8:	f8 94       	cli
    16da:	0f 92       	push	r0
    16dc:	40 91 12 07 	lds	r20, 0x0712	; 0x800712 <xTickCount>
    16e0:	50 91 13 07 	lds	r21, 0x0713	; 0x800713 <xTickCount+0x1>
    16e4:	db 01       	movw	r26, r22
    16e6:	2d 91       	ld	r18, X+
    16e8:	3c 91       	ld	r19, X
    16ea:	2f 3f       	cpi	r18, 0xFF	; 255
    16ec:	bf ef       	ldi	r27, 0xFF	; 255
    16ee:	3b 07       	cpc	r19, r27
    16f0:	19 f1       	breq	.+70     	; 0x1738 <xTaskCheckForTimeOut+0x62>
    16f2:	e0 91 0d 07 	lds	r30, 0x070D	; 0x80070d <xNumOfOverflows>
    16f6:	dc 01       	movw	r26, r24
    16f8:	fc 91       	ld	r31, X
    16fa:	fe 17       	cp	r31, r30
    16fc:	39 f0       	breq	.+14     	; 0x170c <xTaskCheckForTimeOut+0x36>
    16fe:	11 96       	adiw	r26, 0x01	; 1
    1700:	ed 91       	ld	r30, X+
    1702:	fc 91       	ld	r31, X
    1704:	12 97       	sbiw	r26, 0x02	; 2
    1706:	4e 17       	cp	r20, r30
    1708:	5f 07       	cpc	r21, r31
    170a:	c0 f4       	brcc	.+48     	; 0x173c <xTaskCheckForTimeOut+0x66>
    170c:	dc 01       	movw	r26, r24
    170e:	11 96       	adiw	r26, 0x01	; 1
    1710:	ed 91       	ld	r30, X+
    1712:	fc 91       	ld	r31, X
    1714:	12 97       	sbiw	r26, 0x02	; 2
    1716:	da 01       	movw	r26, r20
    1718:	ae 1b       	sub	r26, r30
    171a:	bf 0b       	sbc	r27, r31
    171c:	a2 17       	cp	r26, r18
    171e:	b3 07       	cpc	r27, r19
    1720:	78 f4       	brcc	.+30     	; 0x1740 <xTaskCheckForTimeOut+0x6a>
    1722:	db 01       	movw	r26, r22
    1724:	e4 1b       	sub	r30, r20
    1726:	f5 0b       	sbc	r31, r21
    1728:	2e 0f       	add	r18, r30
    172a:	3f 1f       	adc	r19, r31
    172c:	2d 93       	st	X+, r18
    172e:	3c 93       	st	X, r19
    1730:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <vTaskSetTimeOutState>
    1734:	80 e0       	ldi	r24, 0x00	; 0
    1736:	05 c0       	rjmp	.+10     	; 0x1742 <xTaskCheckForTimeOut+0x6c>
    1738:	80 e0       	ldi	r24, 0x00	; 0
    173a:	03 c0       	rjmp	.+6      	; 0x1742 <xTaskCheckForTimeOut+0x6c>
    173c:	81 e0       	ldi	r24, 0x01	; 1
    173e:	01 c0       	rjmp	.+2      	; 0x1742 <xTaskCheckForTimeOut+0x6c>
    1740:	81 e0       	ldi	r24, 0x01	; 1
    1742:	0f 90       	pop	r0
    1744:	0f be       	out	0x3f, r0	; 63
    1746:	08 95       	ret

00001748 <vTaskMissedYield>:
    1748:	81 e0       	ldi	r24, 0x01	; 1
    174a:	80 93 0e 07 	sts	0x070E, r24	; 0x80070e <xYieldPending>
    174e:	08 95       	ret

00001750 <vTaskPriorityInherit>:
    1750:	0f 93       	push	r16
    1752:	1f 93       	push	r17
    1754:	cf 93       	push	r28
    1756:	df 93       	push	r29
    1758:	fc 01       	movw	r30, r24
    175a:	89 2b       	or	r24, r25
    175c:	09 f4       	brne	.+2      	; 0x1760 <vTaskPriorityInherit+0x10>
    175e:	55 c0       	rjmp	.+170    	; 0x180a <vTaskPriorityInherit+0xba>
    1760:	26 89       	ldd	r18, Z+22	; 0x16
    1762:	a0 91 6d 07 	lds	r26, 0x076D	; 0x80076d <pxCurrentTCB>
    1766:	b0 91 6e 07 	lds	r27, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    176a:	56 96       	adiw	r26, 0x16	; 22
    176c:	8c 91       	ld	r24, X
    176e:	28 17       	cp	r18, r24
    1770:	08 f0       	brcs	.+2      	; 0x1774 <vTaskPriorityInherit+0x24>
    1772:	4b c0       	rjmp	.+150    	; 0x180a <vTaskPriorityInherit+0xba>
    1774:	84 85       	ldd	r24, Z+12	; 0x0c
    1776:	95 85       	ldd	r25, Z+13	; 0x0d
    1778:	99 23       	and	r25, r25
    177a:	64 f0       	brlt	.+24     	; 0x1794 <vTaskPriorityInherit+0x44>
    177c:	a0 91 6d 07 	lds	r26, 0x076D	; 0x80076d <pxCurrentTCB>
    1780:	b0 91 6e 07 	lds	r27, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    1784:	56 96       	adiw	r26, 0x16	; 22
    1786:	3c 91       	ld	r19, X
    1788:	84 e0       	ldi	r24, 0x04	; 4
    178a:	90 e0       	ldi	r25, 0x00	; 0
    178c:	83 1b       	sub	r24, r19
    178e:	91 09       	sbc	r25, r1
    1790:	95 87       	std	Z+13, r25	; 0x0d
    1792:	84 87       	std	Z+12, r24	; 0x0c
    1794:	30 e0       	ldi	r19, 0x00	; 0
    1796:	c9 01       	movw	r24, r18
    1798:	88 0f       	add	r24, r24
    179a:	99 1f       	adc	r25, r25
    179c:	88 0f       	add	r24, r24
    179e:	99 1f       	adc	r25, r25
    17a0:	88 0f       	add	r24, r24
    17a2:	99 1f       	adc	r25, r25
    17a4:	28 0f       	add	r18, r24
    17a6:	39 1f       	adc	r19, r25
    17a8:	27 5b       	subi	r18, 0xB7	; 183
    17aa:	38 4f       	sbci	r19, 0xF8	; 248
    17ac:	82 85       	ldd	r24, Z+10	; 0x0a
    17ae:	93 85       	ldd	r25, Z+11	; 0x0b
    17b0:	82 17       	cp	r24, r18
    17b2:	93 07       	cpc	r25, r19
    17b4:	19 f5       	brne	.+70     	; 0x17fc <vTaskPriorityInherit+0xac>
    17b6:	8f 01       	movw	r16, r30
    17b8:	ef 01       	movw	r28, r30
    17ba:	22 96       	adiw	r28, 0x02	; 2
    17bc:	ce 01       	movw	r24, r28
    17be:	0e 94 59 02 	call	0x4b2	; 0x4b2 <uxListRemove>
    17c2:	e0 91 6d 07 	lds	r30, 0x076D	; 0x80076d <pxCurrentTCB>
    17c6:	f0 91 6e 07 	lds	r31, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    17ca:	86 89       	ldd	r24, Z+22	; 0x16
    17cc:	f8 01       	movw	r30, r16
    17ce:	86 8b       	std	Z+22, r24	; 0x16
    17d0:	90 91 11 07 	lds	r25, 0x0711	; 0x800711 <uxTopReadyPriority>
    17d4:	98 17       	cp	r25, r24
    17d6:	10 f4       	brcc	.+4      	; 0x17dc <vTaskPriorityInherit+0x8c>
    17d8:	80 93 11 07 	sts	0x0711, r24	; 0x800711 <uxTopReadyPriority>
    17dc:	90 e0       	ldi	r25, 0x00	; 0
    17de:	9c 01       	movw	r18, r24
    17e0:	22 0f       	add	r18, r18
    17e2:	33 1f       	adc	r19, r19
    17e4:	22 0f       	add	r18, r18
    17e6:	33 1f       	adc	r19, r19
    17e8:	22 0f       	add	r18, r18
    17ea:	33 1f       	adc	r19, r19
    17ec:	82 0f       	add	r24, r18
    17ee:	93 1f       	adc	r25, r19
    17f0:	be 01       	movw	r22, r28
    17f2:	87 5b       	subi	r24, 0xB7	; 183
    17f4:	98 4f       	sbci	r25, 0xF8	; 248
    17f6:	0e 94 07 02 	call	0x40e	; 0x40e <vListInsertEnd>
    17fa:	07 c0       	rjmp	.+14     	; 0x180a <vTaskPriorityInherit+0xba>
    17fc:	a0 91 6d 07 	lds	r26, 0x076D	; 0x80076d <pxCurrentTCB>
    1800:	b0 91 6e 07 	lds	r27, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    1804:	56 96       	adiw	r26, 0x16	; 22
    1806:	8c 91       	ld	r24, X
    1808:	86 8b       	std	Z+22, r24	; 0x16
    180a:	df 91       	pop	r29
    180c:	cf 91       	pop	r28
    180e:	1f 91       	pop	r17
    1810:	0f 91       	pop	r16
    1812:	08 95       	ret

00001814 <xTaskPriorityDisinherit>:
    1814:	0f 93       	push	r16
    1816:	1f 93       	push	r17
    1818:	cf 93       	push	r28
    181a:	df 93       	push	r29
    181c:	fc 01       	movw	r30, r24
    181e:	89 2b       	or	r24, r25
    1820:	79 f1       	breq	.+94     	; 0x1880 <xTaskPriorityDisinherit+0x6c>
    1822:	82 a1       	ldd	r24, Z+34	; 0x22
    1824:	81 50       	subi	r24, 0x01	; 1
    1826:	82 a3       	std	Z+34, r24	; 0x22
    1828:	26 89       	ldd	r18, Z+22	; 0x16
    182a:	91 a1       	ldd	r25, Z+33	; 0x21
    182c:	29 17       	cp	r18, r25
    182e:	51 f1       	breq	.+84     	; 0x1884 <xTaskPriorityDisinherit+0x70>
    1830:	81 11       	cpse	r24, r1
    1832:	2a c0       	rjmp	.+84     	; 0x1888 <xTaskPriorityDisinherit+0x74>
    1834:	ef 01       	movw	r28, r30
    1836:	8f 01       	movw	r16, r30
    1838:	0e 5f       	subi	r16, 0xFE	; 254
    183a:	1f 4f       	sbci	r17, 0xFF	; 255
    183c:	c8 01       	movw	r24, r16
    183e:	0e 94 59 02 	call	0x4b2	; 0x4b2 <uxListRemove>
    1842:	89 a1       	ldd	r24, Y+33	; 0x21
    1844:	8e 8b       	std	Y+22, r24	; 0x16
    1846:	24 e0       	ldi	r18, 0x04	; 4
    1848:	30 e0       	ldi	r19, 0x00	; 0
    184a:	28 1b       	sub	r18, r24
    184c:	31 09       	sbc	r19, r1
    184e:	3d 87       	std	Y+13, r19	; 0x0d
    1850:	2c 87       	std	Y+12, r18	; 0x0c
    1852:	90 91 11 07 	lds	r25, 0x0711	; 0x800711 <uxTopReadyPriority>
    1856:	98 17       	cp	r25, r24
    1858:	10 f4       	brcc	.+4      	; 0x185e <xTaskPriorityDisinherit+0x4a>
    185a:	80 93 11 07 	sts	0x0711, r24	; 0x800711 <uxTopReadyPriority>
    185e:	90 e0       	ldi	r25, 0x00	; 0
    1860:	9c 01       	movw	r18, r24
    1862:	22 0f       	add	r18, r18
    1864:	33 1f       	adc	r19, r19
    1866:	22 0f       	add	r18, r18
    1868:	33 1f       	adc	r19, r19
    186a:	22 0f       	add	r18, r18
    186c:	33 1f       	adc	r19, r19
    186e:	82 0f       	add	r24, r18
    1870:	93 1f       	adc	r25, r19
    1872:	b8 01       	movw	r22, r16
    1874:	87 5b       	subi	r24, 0xB7	; 183
    1876:	98 4f       	sbci	r25, 0xF8	; 248
    1878:	0e 94 07 02 	call	0x40e	; 0x40e <vListInsertEnd>
    187c:	81 e0       	ldi	r24, 0x01	; 1
    187e:	05 c0       	rjmp	.+10     	; 0x188a <xTaskPriorityDisinherit+0x76>
    1880:	80 e0       	ldi	r24, 0x00	; 0
    1882:	03 c0       	rjmp	.+6      	; 0x188a <xTaskPriorityDisinherit+0x76>
    1884:	80 e0       	ldi	r24, 0x00	; 0
    1886:	01 c0       	rjmp	.+2      	; 0x188a <xTaskPriorityDisinherit+0x76>
    1888:	80 e0       	ldi	r24, 0x00	; 0
    188a:	df 91       	pop	r29
    188c:	cf 91       	pop	r28
    188e:	1f 91       	pop	r17
    1890:	0f 91       	pop	r16
    1892:	08 95       	ret

00001894 <pvTaskIncrementMutexHeldCount>:
    1894:	80 91 6d 07 	lds	r24, 0x076D	; 0x80076d <pxCurrentTCB>
    1898:	90 91 6e 07 	lds	r25, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    189c:	89 2b       	or	r24, r25
    189e:	39 f0       	breq	.+14     	; 0x18ae <pvTaskIncrementMutexHeldCount+0x1a>
    18a0:	e0 91 6d 07 	lds	r30, 0x076D	; 0x80076d <pxCurrentTCB>
    18a4:	f0 91 6e 07 	lds	r31, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    18a8:	82 a1       	ldd	r24, Z+34	; 0x22
    18aa:	8f 5f       	subi	r24, 0xFF	; 255
    18ac:	82 a3       	std	Z+34, r24	; 0x22
    18ae:	80 91 6d 07 	lds	r24, 0x076D	; 0x80076d <pxCurrentTCB>
    18b2:	90 91 6e 07 	lds	r25, 0x076E	; 0x80076e <pxCurrentTCB+0x1>
    18b6:	08 95       	ret

000018b8 <__vector_1>:
    18b8:	1f 92       	push	r1
    18ba:	0f 92       	push	r0
    18bc:	0f b6       	in	r0, 0x3f	; 63
    18be:	0f 92       	push	r0
    18c0:	11 24       	eor	r1, r1
    18c2:	2f 93       	push	r18
    18c4:	3f 93       	push	r19
    18c6:	4f 93       	push	r20
    18c8:	5f 93       	push	r21
    18ca:	6f 93       	push	r22
    18cc:	7f 93       	push	r23
    18ce:	8f 93       	push	r24
    18d0:	9f 93       	push	r25
    18d2:	af 93       	push	r26
    18d4:	bf 93       	push	r27
    18d6:	ef 93       	push	r30
    18d8:	ff 93       	push	r31
    18da:	80 91 6f 07 	lds	r24, 0x076F	; 0x80076f <intFunc>
    18de:	90 91 70 07 	lds	r25, 0x0770	; 0x800770 <intFunc+0x1>
    18e2:	89 2b       	or	r24, r25
    18e4:	29 f0       	breq	.+10     	; 0x18f0 <__vector_1+0x38>
    18e6:	e0 91 6f 07 	lds	r30, 0x076F	; 0x80076f <intFunc>
    18ea:	f0 91 70 07 	lds	r31, 0x0770	; 0x800770 <intFunc+0x1>
    18ee:	09 95       	icall
    18f0:	ff 91       	pop	r31
    18f2:	ef 91       	pop	r30
    18f4:	bf 91       	pop	r27
    18f6:	af 91       	pop	r26
    18f8:	9f 91       	pop	r25
    18fa:	8f 91       	pop	r24
    18fc:	7f 91       	pop	r23
    18fe:	6f 91       	pop	r22
    1900:	5f 91       	pop	r21
    1902:	4f 91       	pop	r20
    1904:	3f 91       	pop	r19
    1906:	2f 91       	pop	r18
    1908:	0f 90       	pop	r0
    190a:	0f be       	out	0x3f, r0	; 63
    190c:	0f 90       	pop	r0
    190e:	1f 90       	pop	r1
    1910:	18 95       	reti

00001912 <__vector_2>:
    1912:	1f 92       	push	r1
    1914:	0f 92       	push	r0
    1916:	0f b6       	in	r0, 0x3f	; 63
    1918:	0f 92       	push	r0
    191a:	11 24       	eor	r1, r1
    191c:	2f 93       	push	r18
    191e:	3f 93       	push	r19
    1920:	4f 93       	push	r20
    1922:	5f 93       	push	r21
    1924:	6f 93       	push	r22
    1926:	7f 93       	push	r23
    1928:	8f 93       	push	r24
    192a:	9f 93       	push	r25
    192c:	af 93       	push	r26
    192e:	bf 93       	push	r27
    1930:	ef 93       	push	r30
    1932:	ff 93       	push	r31
    1934:	80 91 71 07 	lds	r24, 0x0771	; 0x800771 <intFunc+0x2>
    1938:	90 91 72 07 	lds	r25, 0x0772	; 0x800772 <intFunc+0x3>
    193c:	89 2b       	or	r24, r25
    193e:	29 f0       	breq	.+10     	; 0x194a <__vector_2+0x38>
    1940:	e0 91 71 07 	lds	r30, 0x0771	; 0x800771 <intFunc+0x2>
    1944:	f0 91 72 07 	lds	r31, 0x0772	; 0x800772 <intFunc+0x3>
    1948:	09 95       	icall
    194a:	ff 91       	pop	r31
    194c:	ef 91       	pop	r30
    194e:	bf 91       	pop	r27
    1950:	af 91       	pop	r26
    1952:	9f 91       	pop	r25
    1954:	8f 91       	pop	r24
    1956:	7f 91       	pop	r23
    1958:	6f 91       	pop	r22
    195a:	5f 91       	pop	r21
    195c:	4f 91       	pop	r20
    195e:	3f 91       	pop	r19
    1960:	2f 91       	pop	r18
    1962:	0f 90       	pop	r0
    1964:	0f be       	out	0x3f, r0	; 63
    1966:	0f 90       	pop	r0
    1968:	1f 90       	pop	r1
    196a:	18 95       	reti

0000196c <memcpy>:
    196c:	fb 01       	movw	r30, r22
    196e:	dc 01       	movw	r26, r24
    1970:	02 c0       	rjmp	.+4      	; 0x1976 <memcpy+0xa>
    1972:	01 90       	ld	r0, Z+
    1974:	0d 92       	st	X+, r0
    1976:	41 50       	subi	r20, 0x01	; 1
    1978:	50 40       	sbci	r21, 0x00	; 0
    197a:	d8 f7       	brcc	.-10     	; 0x1972 <memcpy+0x6>
    197c:	08 95       	ret

0000197e <__itoa_ncheck>:
    197e:	bb 27       	eor	r27, r27
    1980:	4a 30       	cpi	r20, 0x0A	; 10
    1982:	31 f4       	brne	.+12     	; 0x1990 <__itoa_ncheck+0x12>
    1984:	99 23       	and	r25, r25
    1986:	22 f4       	brpl	.+8      	; 0x1990 <__itoa_ncheck+0x12>
    1988:	bd e2       	ldi	r27, 0x2D	; 45
    198a:	90 95       	com	r25
    198c:	81 95       	neg	r24
    198e:	9f 4f       	sbci	r25, 0xFF	; 255
    1990:	0c 94 cb 0c 	jmp	0x1996	; 0x1996 <__utoa_common>

00001994 <__utoa_ncheck>:
    1994:	bb 27       	eor	r27, r27

00001996 <__utoa_common>:
    1996:	fb 01       	movw	r30, r22
    1998:	55 27       	eor	r21, r21
    199a:	aa 27       	eor	r26, r26
    199c:	88 0f       	add	r24, r24
    199e:	99 1f       	adc	r25, r25
    19a0:	aa 1f       	adc	r26, r26
    19a2:	a4 17       	cp	r26, r20
    19a4:	10 f0       	brcs	.+4      	; 0x19aa <__utoa_common+0x14>
    19a6:	a4 1b       	sub	r26, r20
    19a8:	83 95       	inc	r24
    19aa:	50 51       	subi	r21, 0x10	; 16
    19ac:	b9 f7       	brne	.-18     	; 0x199c <__utoa_common+0x6>
    19ae:	a0 5d       	subi	r26, 0xD0	; 208
    19b0:	aa 33       	cpi	r26, 0x3A	; 58
    19b2:	08 f0       	brcs	.+2      	; 0x19b6 <__utoa_common+0x20>
    19b4:	a9 5d       	subi	r26, 0xD9	; 217
    19b6:	a1 93       	st	Z+, r26
    19b8:	00 97       	sbiw	r24, 0x00	; 0
    19ba:	79 f7       	brne	.-34     	; 0x199a <__utoa_common+0x4>
    19bc:	b1 11       	cpse	r27, r1
    19be:	b1 93       	st	Z+, r27
    19c0:	11 92       	st	Z+, r1
    19c2:	cb 01       	movw	r24, r22
    19c4:	0c 94 e4 0c 	jmp	0x19c8	; 0x19c8 <strrev>

000019c8 <strrev>:
    19c8:	dc 01       	movw	r26, r24
    19ca:	fc 01       	movw	r30, r24
    19cc:	67 2f       	mov	r22, r23
    19ce:	71 91       	ld	r23, Z+
    19d0:	77 23       	and	r23, r23
    19d2:	e1 f7       	brne	.-8      	; 0x19cc <strrev+0x4>
    19d4:	32 97       	sbiw	r30, 0x02	; 2
    19d6:	04 c0       	rjmp	.+8      	; 0x19e0 <strrev+0x18>
    19d8:	7c 91       	ld	r23, X
    19da:	6d 93       	st	X+, r22
    19dc:	70 83       	st	Z, r23
    19de:	62 91       	ld	r22, -Z
    19e0:	ae 17       	cp	r26, r30
    19e2:	bf 07       	cpc	r27, r31
    19e4:	c8 f3       	brcs	.-14     	; 0x19d8 <strrev+0x10>
    19e6:	08 95       	ret

000019e8 <_exit>:
    19e8:	f8 94       	cli

000019ea <__stop_program>:
    19ea:	ff cf       	rjmp	.-2      	; 0x19ea <__stop_program>
