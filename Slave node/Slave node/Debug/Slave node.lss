
Slave node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  00001a4a  00001ade  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a4a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000651  0080013c  0080013c  00001b1a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001b1a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b4c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000468  00000000  00000000  00001b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004fc9  00000000  00000000  00001ff4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001412  00000000  00000000  00006fbd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002ee3  00000000  00000000  000083cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000cec  00000000  00000000  0000b2b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000183e  00000000  00000000  0000bfa0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004be9  00000000  00000000  0000d7de  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000458  00000000  00000000  000123c7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 80 0c 	jmp	0x1900	; 0x1900 <__vector_1>
       8:	0c 94 ad 0c 	jmp	0x195a	; 0x195a <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 fe 03 	jmp	0x7fc	; 0x7fc <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__vector_24>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ea e4       	ldi	r30, 0x4A	; 74
      7c:	fa e1       	ldi	r31, 0x1A	; 26
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ac 33       	cpi	r26, 0x3C	; 60
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	27 e0       	ldi	r18, 0x07	; 7
      8c:	ac e3       	ldi	r26, 0x3C	; 60
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ad 38       	cpi	r26, 0x8D	; 141
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 89 01 	call	0x312	; 0x312 <main>
      9e:	0c 94 23 0d 	jmp	0x1a46	; 0x1a46 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2c_initSlave>:
      a6:	ec eb       	ldi	r30, 0xBC	; 188
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	94 e0       	ldi	r25, 0x04	; 4
      ac:	90 83       	st	Z, r25
      ae:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7e00ba>
      b2:	84 ec       	ldi	r24, 0xC4	; 196
      b4:	80 83       	st	Z, r24
      b6:	80 81       	ld	r24, Z
      b8:	81 60       	ori	r24, 0x01	; 1
      ba:	80 83       	st	Z, r24
      bc:	08 95       	ret

000000be <LCD_Command>:
      be:	95 b1       	in	r25, 0x05	; 5
      c0:	93 70       	andi	r25, 0x03	; 3
      c2:	28 2f       	mov	r18, r24
      c4:	26 95       	lsr	r18
      c6:	26 95       	lsr	r18
      c8:	92 2b       	or	r25, r18
      ca:	95 b9       	out	0x05, r25	; 5
      cc:	28 98       	cbi	0x05, 0	; 5
      ce:	29 9a       	sbi	0x05, 1	; 5
      d0:	95 e0       	ldi	r25, 0x05	; 5
      d2:	9a 95       	dec	r25
      d4:	f1 f7       	brne	.-4      	; 0xd2 <LCD_Command+0x14>
      d6:	00 00       	nop
      d8:	29 98       	cbi	0x05, 1	; 5
      da:	ef e1       	ldi	r30, 0x1F	; 31
      dc:	f3 e0       	ldi	r31, 0x03	; 3
      de:	31 97       	sbiw	r30, 0x01	; 1
      e0:	f1 f7       	brne	.-4      	; 0xde <LCD_Command+0x20>
      e2:	00 c0       	rjmp	.+0      	; 0xe4 <LCD_Command+0x26>
      e4:	00 00       	nop
      e6:	95 b1       	in	r25, 0x05	; 5
      e8:	93 70       	andi	r25, 0x03	; 3
      ea:	88 0f       	add	r24, r24
      ec:	88 0f       	add	r24, r24
      ee:	89 2b       	or	r24, r25
      f0:	85 b9       	out	0x05, r24	; 5
      f2:	29 9a       	sbi	0x05, 1	; 5
      f4:	f5 e0       	ldi	r31, 0x05	; 5
      f6:	fa 95       	dec	r31
      f8:	f1 f7       	brne	.-4      	; 0xf6 <LCD_Command+0x38>
      fa:	00 00       	nop
      fc:	29 98       	cbi	0x05, 1	; 5
      fe:	8f e3       	ldi	r24, 0x3F	; 63
     100:	9f e1       	ldi	r25, 0x1F	; 31
     102:	01 97       	sbiw	r24, 0x01	; 1
     104:	f1 f7       	brne	.-4      	; 0x102 <LCD_Command+0x44>
     106:	00 c0       	rjmp	.+0      	; 0x108 <LCD_Command+0x4a>
     108:	00 00       	nop
     10a:	08 95       	ret

0000010c <LCD_Char>:
     10c:	95 b1       	in	r25, 0x05	; 5
     10e:	93 70       	andi	r25, 0x03	; 3
     110:	28 2f       	mov	r18, r24
     112:	26 95       	lsr	r18
     114:	26 95       	lsr	r18
     116:	92 2b       	or	r25, r18
     118:	95 b9       	out	0x05, r25	; 5
     11a:	28 9a       	sbi	0x05, 0	; 5
     11c:	29 9a       	sbi	0x05, 1	; 5
     11e:	95 e0       	ldi	r25, 0x05	; 5
     120:	9a 95       	dec	r25
     122:	f1 f7       	brne	.-4      	; 0x120 <LCD_Char+0x14>
     124:	00 00       	nop
     126:	29 98       	cbi	0x05, 1	; 5
     128:	ef e1       	ldi	r30, 0x1F	; 31
     12a:	f3 e0       	ldi	r31, 0x03	; 3
     12c:	31 97       	sbiw	r30, 0x01	; 1
     12e:	f1 f7       	brne	.-4      	; 0x12c <LCD_Char+0x20>
     130:	00 c0       	rjmp	.+0      	; 0x132 <LCD_Char+0x26>
     132:	00 00       	nop
     134:	95 b1       	in	r25, 0x05	; 5
     136:	93 70       	andi	r25, 0x03	; 3
     138:	88 0f       	add	r24, r24
     13a:	88 0f       	add	r24, r24
     13c:	89 2b       	or	r24, r25
     13e:	85 b9       	out	0x05, r24	; 5
     140:	29 9a       	sbi	0x05, 1	; 5
     142:	f5 e0       	ldi	r31, 0x05	; 5
     144:	fa 95       	dec	r31
     146:	f1 f7       	brne	.-4      	; 0x144 <LCD_Char+0x38>
     148:	00 00       	nop
     14a:	29 98       	cbi	0x05, 1	; 5
     14c:	8f e3       	ldi	r24, 0x3F	; 63
     14e:	9f e1       	ldi	r25, 0x1F	; 31
     150:	01 97       	sbiw	r24, 0x01	; 1
     152:	f1 f7       	brne	.-4      	; 0x150 <LCD_Char+0x44>
     154:	00 c0       	rjmp	.+0      	; 0x156 <LCD_Char+0x4a>
     156:	00 00       	nop
     158:	08 95       	ret

0000015a <LCD_Init>:
     15a:	8f ef       	ldi	r24, 0xFF	; 255
     15c:	84 b9       	out	0x04, r24	; 4
     15e:	2f ef       	ldi	r18, 0xFF	; 255
     160:	89 ef       	ldi	r24, 0xF9	; 249
     162:	90 e0       	ldi	r25, 0x00	; 0
     164:	21 50       	subi	r18, 0x01	; 1
     166:	80 40       	sbci	r24, 0x00	; 0
     168:	90 40       	sbci	r25, 0x00	; 0
     16a:	e1 f7       	brne	.-8      	; 0x164 <LCD_Init+0xa>
     16c:	00 c0       	rjmp	.+0      	; 0x16e <LCD_Init+0x14>
     16e:	00 00       	nop
     170:	82 e0       	ldi	r24, 0x02	; 2
     172:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
     176:	88 e2       	ldi	r24, 0x28	; 40
     178:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
     17c:	8c e0       	ldi	r24, 0x0C	; 12
     17e:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
     182:	86 e0       	ldi	r24, 0x06	; 6
     184:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
     188:	81 e0       	ldi	r24, 0x01	; 1
     18a:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
     18e:	8f e3       	ldi	r24, 0x3F	; 63
     190:	9f e1       	ldi	r25, 0x1F	; 31
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <LCD_Init+0x38>
     196:	00 c0       	rjmp	.+0      	; 0x198 <LCD_Init+0x3e>
     198:	00 00       	nop
     19a:	08 95       	ret

0000019c <LCD_String>:
     19c:	cf 93       	push	r28
     19e:	df 93       	push	r29
     1a0:	ec 01       	movw	r28, r24
     1a2:	88 81       	ld	r24, Y
     1a4:	88 23       	and	r24, r24
     1a6:	31 f0       	breq	.+12     	; 0x1b4 <LCD_String+0x18>
     1a8:	21 96       	adiw	r28, 0x01	; 1
     1aa:	0e 94 86 00 	call	0x10c	; 0x10c <LCD_Char>
     1ae:	89 91       	ld	r24, Y+
     1b0:	81 11       	cpse	r24, r1
     1b2:	fb cf       	rjmp	.-10     	; 0x1aa <LCD_String+0xe>
     1b4:	df 91       	pop	r29
     1b6:	cf 91       	pop	r28
     1b8:	08 95       	ret

000001ba <LCD_Clear>:
     1ba:	81 e0       	ldi	r24, 0x01	; 1
     1bc:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1c0:	8f e3       	ldi	r24, 0x3F	; 63
     1c2:	9f e1       	ldi	r25, 0x1F	; 31
     1c4:	01 97       	sbiw	r24, 0x01	; 1
     1c6:	f1 f7       	brne	.-4      	; 0x1c4 <LCD_Clear+0xa>
     1c8:	00 c0       	rjmp	.+0      	; 0x1ca <LCD_Clear+0x10>
     1ca:	00 00       	nop
     1cc:	80 e8       	ldi	r24, 0x80	; 128
     1ce:	0e 94 5f 00 	call	0xbe	; 0xbe <LCD_Command>
     1d2:	08 95       	ret

000001d4 <PWM0_setDutyCycle>:
     1d4:	87 bd       	out	0x27, r24	; 39
     1d6:	08 95       	ret

000001d8 <PWM1_setDutyCycle>:
     1d8:	88 bd       	out	0x28, r24	; 40
     1da:	08 95       	ret

000001dc <PWM0_ClockWise>:
     1dc:	58 9a       	sbi	0x0b, 0	; 11
     1de:	59 98       	cbi	0x0b, 1	; 11
     1e0:	08 95       	ret

000001e2 <PWM1_AntiClockWise>:
     1e2:	5f 9a       	sbi	0x0b, 7	; 11
     1e4:	5c 98       	cbi	0x0b, 4	; 11
     1e6:	08 95       	ret

000001e8 <PWM_start>:
     1e8:	8a b1       	in	r24, 0x0a	; 10
     1ea:	83 6f       	ori	r24, 0xF3	; 243
     1ec:	8a b9       	out	0x0a, r24	; 10
     1ee:	84 b5       	in	r24, 0x24	; 36
     1f0:	80 6a       	ori	r24, 0xA0	; 160
     1f2:	84 bd       	out	0x24, r24	; 36
     1f4:	84 b5       	in	r24, 0x24	; 36
     1f6:	81 60       	ori	r24, 0x01	; 1
     1f8:	84 bd       	out	0x24, r24	; 36
     1fa:	85 b5       	in	r24, 0x25	; 37
     1fc:	82 60       	ori	r24, 0x02	; 2
     1fe:	85 bd       	out	0x25, r24	; 37
     200:	8f ef       	ldi	r24, 0xFF	; 255
     202:	87 bd       	out	0x27, r24	; 39
     204:	88 bd       	out	0x28, r24	; 40
     206:	0e 94 ee 00 	call	0x1dc	; 0x1dc <PWM0_ClockWise>
     20a:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <PWM1_AntiClockWise>
     20e:	08 95       	ret

00000210 <task_PWM>:

	return 0;
}

void task_PWM()
{
     210:	cf 93       	push	r28
     212:	df 93       	push	r29
     214:	1f 92       	push	r1
     216:	cd b7       	in	r28, 0x3d	; 61
     218:	de b7       	in	r29, 0x3e	; 62
	PWM_start();
     21a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <PWM_start>
	for(;;)
	{
		if( uxQueueMessagesWaiting( xQueuePWM ) != 0 )
		{
			xQueueReceive(xQueuePWM,&data,0);
			if(data = 0xff)
     21e:	1f ef       	ldi	r17, 0xFF	; 255
					PWM0_setDutyCycle(0);
					PWM1_setDutyCycle(0);
				}
				else
				{
					isON = 1;
     220:	01 e0       	ldi	r16, 0x01	; 1
	const TickType_t xDelay = 100 / portTICK_PERIOD_MS;
	unsigned char data;

	for(;;)
	{
		if( uxQueueMessagesWaiting( xQueuePWM ) != 0 )
     222:	80 91 8b 07 	lds	r24, 0x078B	; 0x80078b <xQueuePWM>
     226:	90 91 8c 07 	lds	r25, 0x078C	; 0x80078c <xQueuePWM+0x1>
     22a:	0e 94 61 07 	call	0xec2	; 0xec2 <uxQueueMessagesWaiting>
     22e:	88 23       	and	r24, r24
     230:	11 f1       	breq	.+68     	; 0x276 <task_PWM+0x66>
		{
			xQueueReceive(xQueuePWM,&data,0);
     232:	20 e0       	ldi	r18, 0x00	; 0
     234:	40 e0       	ldi	r20, 0x00	; 0
     236:	50 e0       	ldi	r21, 0x00	; 0
     238:	be 01       	movw	r22, r28
     23a:	6f 5f       	subi	r22, 0xFF	; 255
     23c:	7f 4f       	sbci	r23, 0xFF	; 255
     23e:	80 91 8b 07 	lds	r24, 0x078B	; 0x80078b <xQueuePWM>
     242:	90 91 8c 07 	lds	r25, 0x078C	; 0x80078c <xQueuePWM+0x1>
     246:	0e 94 9e 06 	call	0xd3c	; 0xd3c <xQueueGenericReceive>
			if(data = 0xff)
     24a:	19 83       	std	Y+1, r17	; 0x01
			{
				if (isON)
     24c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     250:	88 23       	and	r24, r24
     252:	49 f0       	breq	.+18     	; 0x266 <task_PWM+0x56>
				{
					isON = 0;
     254:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
					PWM0_setDutyCycle(0);
     258:	80 e0       	ldi	r24, 0x00	; 0
     25a:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <PWM0_setDutyCycle>
					PWM1_setDutyCycle(0);
     25e:	80 e0       	ldi	r24, 0x00	; 0
     260:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <PWM1_setDutyCycle>
     264:	08 c0       	rjmp	.+16     	; 0x276 <task_PWM+0x66>
				}
				else
				{
					isON = 1;
     266:	00 93 00 01 	sts	0x0100, r16	; 0x800100 <__data_start>
					PWM0_setDutyCycle(255);
     26a:	81 2f       	mov	r24, r17
     26c:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <PWM0_setDutyCycle>
					PWM1_setDutyCycle(255);
     270:	81 2f       	mov	r24, r17
     272:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <PWM1_setDutyCycle>
				}
				
			}
		}
		vTaskDelay( xDelay );
     276:	84 e6       	ldi	r24, 0x64	; 100
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	0e 94 46 0a 	call	0x148c	; 0x148c <vTaskDelay>
	}
     27e:	d1 cf       	rjmp	.-94     	; 0x222 <task_PWM+0x12>

00000280 <task_LCD>:

}
void task_LCD()
{
     280:	cf 93       	push	r28
     282:	df 93       	push	r29
     284:	cd b7       	in	r28, 0x3d	; 61
     286:	de b7       	in	r29, 0x3e	; 62
     288:	2b 97       	sbiw	r28, 0x0b	; 11
     28a:	0f b6       	in	r0, 0x3f	; 63
     28c:	f8 94       	cli
     28e:	de bf       	out	0x3e, r29	; 62
     290:	0f be       	out	0x3f, r0	; 63
     292:	cd bf       	out	0x3d, r28	; 61
	LCD_Init();
     294:	0e 94 ad 00 	call	0x15a	; 0x15a <LCD_Init>
	const TickType_t xDelay = 100 / portTICK_PERIOD_MS;
	unsigned char data;

	for(;;)
	{
		LCD_Clear();
     298:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_Clear>
		if( uxQueueMessagesWaiting( xQueueLCD ) != 0 )
     29c:	80 91 89 07 	lds	r24, 0x0789	; 0x800789 <xQueueLCD>
     2a0:	90 91 8a 07 	lds	r25, 0x078A	; 0x80078a <xQueueLCD+0x1>
     2a4:	0e 94 61 07 	call	0xec2	; 0xec2 <uxQueueMessagesWaiting>
     2a8:	88 23       	and	r24, r24
     2aa:	31 f1       	breq	.+76     	; 0x2f8 <task_LCD+0x78>
		{
			xQueueReceive(xQueueLCD,&data,0);
     2ac:	20 e0       	ldi	r18, 0x00	; 0
     2ae:	40 e0       	ldi	r20, 0x00	; 0
     2b0:	50 e0       	ldi	r21, 0x00	; 0
     2b2:	be 01       	movw	r22, r28
     2b4:	6f 5f       	subi	r22, 0xFF	; 255
     2b6:	7f 4f       	sbci	r23, 0xFF	; 255
     2b8:	80 91 89 07 	lds	r24, 0x0789	; 0x800789 <xQueueLCD>
     2bc:	90 91 8a 07 	lds	r25, 0x078A	; 0x80078a <xQueueLCD+0x1>
     2c0:	0e 94 9e 06 	call	0xd3c	; 0xd3c <xQueueGenericReceive>
			isON = 0;
     2c4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
			if((data & 0x80)) //from temperature sensor
     2c8:	89 81       	ldd	r24, Y+1	; 0x01
     2ca:	88 23       	and	r24, r24
     2cc:	2c f4       	brge	.+10     	; 0x2d8 <task_LCD+0x58>
			{
				LCD_String("Temp: ");
     2ce:	85 e0       	ldi	r24, 0x05	; 5
     2d0:	91 e0       	ldi	r25, 0x01	; 1
     2d2:	0e 94 ce 00 	call	0x19c	; 0x19c <LCD_String>
     2d6:	04 c0       	rjmp	.+8      	; 0x2e0 <task_LCD+0x60>
			}
			else //from ultra sonic sensor
			{
				LCD_String("US: ");
     2d8:	8c e0       	ldi	r24, 0x0C	; 12
     2da:	91 e0       	ldi	r25, 0x01	; 1
     2dc:	0e 94 ce 00 	call	0x19c	; 0x19c <LCD_String>
			}
			char buffer[10];
			LCD_String(itoa(data,buffer,10));
     2e0:	89 81       	ldd	r24, Y+1	; 0x01
     2e2:	4a e0       	ldi	r20, 0x0A	; 10
     2e4:	50 e0       	ldi	r21, 0x00	; 0
     2e6:	be 01       	movw	r22, r28
     2e8:	6e 5f       	subi	r22, 0xFE	; 254
     2ea:	7f 4f       	sbci	r23, 0xFF	; 255
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <itoa>
     2f2:	0e 94 ce 00 	call	0x19c	; 0x19c <LCD_String>
     2f6:	08 c0       	rjmp	.+16     	; 0x308 <task_LCD+0x88>
		}
		else if (isON)
     2f8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     2fc:	88 23       	and	r24, r24
     2fe:	21 f0       	breq	.+8      	; 0x308 <task_LCD+0x88>
		{
			LCD_String("MOTOR ON");
     300:	81 e1       	ldi	r24, 0x11	; 17
     302:	91 e0       	ldi	r25, 0x01	; 1
     304:	0e 94 ce 00 	call	0x19c	; 0x19c <LCD_String>
		}
		vTaskDelay( xDelay );
     308:	84 e6       	ldi	r24, 0x64	; 100
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	0e 94 46 0a 	call	0x148c	; 0x148c <vTaskDelay>
	}
     310:	c3 cf       	rjmp	.-122    	; 0x298 <task_LCD+0x18>

00000312 <main>:

unsigned char isON = 1;

int main(void)
{
	xTaskCreate(task_LCD,"task_LCD",0x100,NULL,0x01,NULL);
     312:	a1 2c       	mov	r10, r1
     314:	b1 2c       	mov	r11, r1
     316:	c1 2c       	mov	r12, r1
     318:	d1 2c       	mov	r13, r1
     31a:	e1 2c       	mov	r14, r1
     31c:	f1 2c       	mov	r15, r1
     31e:	01 e0       	ldi	r16, 0x01	; 1
     320:	20 e0       	ldi	r18, 0x00	; 0
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	40 e0       	ldi	r20, 0x00	; 0
     326:	51 e0       	ldi	r21, 0x01	; 1
     328:	6a e1       	ldi	r22, 0x1A	; 26
     32a:	71 e0       	ldi	r23, 0x01	; 1
     32c:	80 e4       	ldi	r24, 0x40	; 64
     32e:	91 e0       	ldi	r25, 0x01	; 1
     330:	0e 94 bf 07 	call	0xf7e	; 0xf7e <xTaskGenericCreate>
	xTaskCreate(task_PWM,"task_PWM",0x100,NULL,0x01,NULL);
     334:	20 e0       	ldi	r18, 0x00	; 0
     336:	30 e0       	ldi	r19, 0x00	; 0
     338:	40 e0       	ldi	r20, 0x00	; 0
     33a:	51 e0       	ldi	r21, 0x01	; 1
     33c:	63 e2       	ldi	r22, 0x23	; 35
     33e:	71 e0       	ldi	r23, 0x01	; 1
     340:	88 e0       	ldi	r24, 0x08	; 8
     342:	91 e0       	ldi	r25, 0x01	; 1
     344:	0e 94 bf 07 	call	0xf7e	; 0xf7e <xTaskGenericCreate>
	xQueueLCD = xQueueCreate(0x0a,sizeof(unsigned char));
     348:	40 e0       	ldi	r20, 0x00	; 0
     34a:	61 e0       	ldi	r22, 0x01	; 1
     34c:	8a e0       	ldi	r24, 0x0A	; 10
     34e:	0e 94 d1 05 	call	0xba2	; 0xba2 <xQueueGenericCreate>
     352:	90 93 8a 07 	sts	0x078A, r25	; 0x80078a <xQueueLCD+0x1>
     356:	80 93 89 07 	sts	0x0789, r24	; 0x800789 <xQueueLCD>
	xQueuePWM = xQueueCreate(0x0a,sizeof(unsigned char));
     35a:	40 e0       	ldi	r20, 0x00	; 0
     35c:	61 e0       	ldi	r22, 0x01	; 1
     35e:	8a e0       	ldi	r24, 0x0A	; 10
     360:	0e 94 d1 05 	call	0xba2	; 0xba2 <xQueueGenericCreate>
     364:	90 93 8c 07 	sts	0x078C, r25	; 0x80078c <xQueuePWM+0x1>
     368:	80 93 8b 07 	sts	0x078B, r24	; 0x80078b <xQueuePWM>
	i2c_initSlave(0x02); //i2c address = 0x02
     36c:	82 e0       	ldi	r24, 0x02	; 2
     36e:	0e 94 53 00 	call	0xa6	; 0xa6 <i2c_initSlave>
	vTaskStartScheduler();
     372:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <vTaskStartScheduler>
	sei();
     376:	78 94       	sei
     378:	ff cf       	rjmp	.-2      	; 0x378 <main+0x66>

0000037a <__vector_24>:
		vTaskDelay( xDelay );
	}
}

ISR (TWI_vect)
{
     37a:	1f 92       	push	r1
     37c:	0f 92       	push	r0
     37e:	0f b6       	in	r0, 0x3f	; 63
     380:	0f 92       	push	r0
     382:	11 24       	eor	r1, r1
     384:	2f 93       	push	r18
     386:	3f 93       	push	r19
     388:	4f 93       	push	r20
     38a:	5f 93       	push	r21
     38c:	6f 93       	push	r22
     38e:	7f 93       	push	r23
     390:	8f 93       	push	r24
     392:	9f 93       	push	r25
     394:	af 93       	push	r26
     396:	bf 93       	push	r27
     398:	ef 93       	push	r30
     39a:	ff 93       	push	r31
     39c:	cf 93       	push	r28
     39e:	df 93       	push	r29
     3a0:	1f 92       	push	r1
     3a2:	cd b7       	in	r28, 0x3d	; 61
     3a4:	de b7       	in	r29, 0x3e	; 62
	if(((TWSR & 0xF8))==0b01100000) //slaved addressed status
     3a6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     3aa:	88 7f       	andi	r24, 0xF8	; 248
     3ac:	80 36       	cpi	r24, 0x60	; 96
     3ae:	31 f4       	brne	.+12     	; 0x3bc <__vector_24+0x42>
	{
		TWCR |= (1<<TWINT) ;
     3b0:	ec eb       	ldi	r30, 0xBC	; 188
     3b2:	f0 e0       	ldi	r31, 0x00	; 0
     3b4:	80 81       	ld	r24, Z
     3b6:	80 68       	ori	r24, 0x80	; 128
     3b8:	80 83       	st	Z, r24
     3ba:	27 c0       	rjmp	.+78     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
	}
	else if (((TWSR & 0xF8))==0b10000000) //slaved read status
     3bc:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     3c0:	88 7f       	andi	r24, 0xF8	; 248
     3c2:	80 38       	cpi	r24, 0x80	; 128
     3c4:	11 f5       	brne	.+68     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
	{
		unsigned char data = TWDR;
     3c6:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     3ca:	89 83       	std	Y+1, r24	; 0x01
		xQueueSendToFront(xQueueLCD,&data,0);
     3cc:	21 e0       	ldi	r18, 0x01	; 1
     3ce:	40 e0       	ldi	r20, 0x00	; 0
     3d0:	50 e0       	ldi	r21, 0x00	; 0
     3d2:	be 01       	movw	r22, r28
     3d4:	6f 5f       	subi	r22, 0xFF	; 255
     3d6:	7f 4f       	sbci	r23, 0xFF	; 255
     3d8:	80 91 89 07 	lds	r24, 0x0789	; 0x800789 <xQueueLCD>
     3dc:	90 91 8a 07 	lds	r25, 0x078A	; 0x80078a <xQueueLCD+0x1>
     3e0:	0e 94 fd 05 	call	0xbfa	; 0xbfa <xQueueGenericSend>
		if (data = 0xff)
     3e4:	8f ef       	ldi	r24, 0xFF	; 255
     3e6:	89 83       	std	Y+1, r24	; 0x01
		{
			xQueueSendToFront(xQueuePWM,&data,0);
     3e8:	21 e0       	ldi	r18, 0x01	; 1
     3ea:	40 e0       	ldi	r20, 0x00	; 0
     3ec:	50 e0       	ldi	r21, 0x00	; 0
     3ee:	be 01       	movw	r22, r28
     3f0:	6f 5f       	subi	r22, 0xFF	; 255
     3f2:	7f 4f       	sbci	r23, 0xFF	; 255
     3f4:	80 91 8b 07 	lds	r24, 0x078B	; 0x80078b <xQueuePWM>
     3f8:	90 91 8c 07 	lds	r25, 0x078C	; 0x80078c <xQueuePWM+0x1>
     3fc:	0e 94 fd 05 	call	0xbfa	; 0xbfa <xQueueGenericSend>
		}
		TWCR |= (1<<TWINT) ;
     400:	ec eb       	ldi	r30, 0xBC	; 188
     402:	f0 e0       	ldi	r31, 0x00	; 0
     404:	80 81       	ld	r24, Z
     406:	80 68       	ori	r24, 0x80	; 128
     408:	80 83       	st	Z, r24
	}
}
     40a:	0f 90       	pop	r0
     40c:	df 91       	pop	r29
     40e:	cf 91       	pop	r28
     410:	ff 91       	pop	r31
     412:	ef 91       	pop	r30
     414:	bf 91       	pop	r27
     416:	af 91       	pop	r26
     418:	9f 91       	pop	r25
     41a:	8f 91       	pop	r24
     41c:	7f 91       	pop	r23
     41e:	6f 91       	pop	r22
     420:	5f 91       	pop	r21
     422:	4f 91       	pop	r20
     424:	3f 91       	pop	r19
     426:	2f 91       	pop	r18
     428:	0f 90       	pop	r0
     42a:	0f be       	out	0x3f, r0	; 63
     42c:	0f 90       	pop	r0
     42e:	1f 90       	pop	r1
     430:	18 95       	reti

00000432 <vListInitialise>:
     432:	fc 01       	movw	r30, r24
     434:	03 96       	adiw	r24, 0x03	; 3
     436:	92 83       	std	Z+2, r25	; 0x02
     438:	81 83       	std	Z+1, r24	; 0x01
     43a:	2f ef       	ldi	r18, 0xFF	; 255
     43c:	3f ef       	ldi	r19, 0xFF	; 255
     43e:	34 83       	std	Z+4, r19	; 0x04
     440:	23 83       	std	Z+3, r18	; 0x03
     442:	96 83       	std	Z+6, r25	; 0x06
     444:	85 83       	std	Z+5, r24	; 0x05
     446:	90 87       	std	Z+8, r25	; 0x08
     448:	87 83       	std	Z+7, r24	; 0x07
     44a:	10 82       	st	Z, r1
     44c:	08 95       	ret

0000044e <vListInitialiseItem>:
     44e:	fc 01       	movw	r30, r24
     450:	11 86       	std	Z+9, r1	; 0x09
     452:	10 86       	std	Z+8, r1	; 0x08
     454:	08 95       	ret

00000456 <vListInsertEnd>:
     456:	cf 93       	push	r28
     458:	df 93       	push	r29
     45a:	9c 01       	movw	r18, r24
     45c:	fb 01       	movw	r30, r22
     45e:	dc 01       	movw	r26, r24
     460:	11 96       	adiw	r26, 0x01	; 1
     462:	cd 91       	ld	r28, X+
     464:	dc 91       	ld	r29, X
     466:	12 97       	sbiw	r26, 0x02	; 2
     468:	d3 83       	std	Z+3, r29	; 0x03
     46a:	c2 83       	std	Z+2, r28	; 0x02
     46c:	8c 81       	ldd	r24, Y+4	; 0x04
     46e:	9d 81       	ldd	r25, Y+5	; 0x05
     470:	95 83       	std	Z+5, r25	; 0x05
     472:	84 83       	std	Z+4, r24	; 0x04
     474:	8c 81       	ldd	r24, Y+4	; 0x04
     476:	9d 81       	ldd	r25, Y+5	; 0x05
     478:	dc 01       	movw	r26, r24
     47a:	13 96       	adiw	r26, 0x03	; 3
     47c:	7c 93       	st	X, r23
     47e:	6e 93       	st	-X, r22
     480:	12 97       	sbiw	r26, 0x02	; 2
     482:	7d 83       	std	Y+5, r23	; 0x05
     484:	6c 83       	std	Y+4, r22	; 0x04
     486:	31 87       	std	Z+9, r19	; 0x09
     488:	20 87       	std	Z+8, r18	; 0x08
     48a:	f9 01       	movw	r30, r18
     48c:	80 81       	ld	r24, Z
     48e:	8f 5f       	subi	r24, 0xFF	; 255
     490:	80 83       	st	Z, r24
     492:	df 91       	pop	r29
     494:	cf 91       	pop	r28
     496:	08 95       	ret

00000498 <vListInsert>:
     498:	cf 93       	push	r28
     49a:	df 93       	push	r29
     49c:	eb 01       	movw	r28, r22
     49e:	48 81       	ld	r20, Y
     4a0:	59 81       	ldd	r21, Y+1	; 0x01
     4a2:	4f 3f       	cpi	r20, 0xFF	; 255
     4a4:	2f ef       	ldi	r18, 0xFF	; 255
     4a6:	52 07       	cpc	r21, r18
     4a8:	21 f4       	brne	.+8      	; 0x4b2 <vListInsert+0x1a>
     4aa:	fc 01       	movw	r30, r24
     4ac:	a7 81       	ldd	r26, Z+7	; 0x07
     4ae:	b0 85       	ldd	r27, Z+8	; 0x08
     4b0:	0d c0       	rjmp	.+26     	; 0x4cc <vListInsert+0x34>
     4b2:	dc 01       	movw	r26, r24
     4b4:	13 96       	adiw	r26, 0x03	; 3
     4b6:	01 c0       	rjmp	.+2      	; 0x4ba <vListInsert+0x22>
     4b8:	df 01       	movw	r26, r30
     4ba:	12 96       	adiw	r26, 0x02	; 2
     4bc:	ed 91       	ld	r30, X+
     4be:	fc 91       	ld	r31, X
     4c0:	13 97       	sbiw	r26, 0x03	; 3
     4c2:	20 81       	ld	r18, Z
     4c4:	31 81       	ldd	r19, Z+1	; 0x01
     4c6:	42 17       	cp	r20, r18
     4c8:	53 07       	cpc	r21, r19
     4ca:	b0 f7       	brcc	.-20     	; 0x4b8 <vListInsert+0x20>
     4cc:	12 96       	adiw	r26, 0x02	; 2
     4ce:	ed 91       	ld	r30, X+
     4d0:	fc 91       	ld	r31, X
     4d2:	13 97       	sbiw	r26, 0x03	; 3
     4d4:	fb 83       	std	Y+3, r31	; 0x03
     4d6:	ea 83       	std	Y+2, r30	; 0x02
     4d8:	d5 83       	std	Z+5, r29	; 0x05
     4da:	c4 83       	std	Z+4, r28	; 0x04
     4dc:	bd 83       	std	Y+5, r27	; 0x05
     4de:	ac 83       	std	Y+4, r26	; 0x04
     4e0:	13 96       	adiw	r26, 0x03	; 3
     4e2:	dc 93       	st	X, r29
     4e4:	ce 93       	st	-X, r28
     4e6:	12 97       	sbiw	r26, 0x02	; 2
     4e8:	99 87       	std	Y+9, r25	; 0x09
     4ea:	88 87       	std	Y+8, r24	; 0x08
     4ec:	fc 01       	movw	r30, r24
     4ee:	20 81       	ld	r18, Z
     4f0:	2f 5f       	subi	r18, 0xFF	; 255
     4f2:	20 83       	st	Z, r18
     4f4:	df 91       	pop	r29
     4f6:	cf 91       	pop	r28
     4f8:	08 95       	ret

000004fa <uxListRemove>:
     4fa:	cf 93       	push	r28
     4fc:	df 93       	push	r29
     4fe:	fc 01       	movw	r30, r24
     500:	a0 85       	ldd	r26, Z+8	; 0x08
     502:	b1 85       	ldd	r27, Z+9	; 0x09
     504:	c2 81       	ldd	r28, Z+2	; 0x02
     506:	d3 81       	ldd	r29, Z+3	; 0x03
     508:	84 81       	ldd	r24, Z+4	; 0x04
     50a:	95 81       	ldd	r25, Z+5	; 0x05
     50c:	9d 83       	std	Y+5, r25	; 0x05
     50e:	8c 83       	std	Y+4, r24	; 0x04
     510:	c4 81       	ldd	r28, Z+4	; 0x04
     512:	d5 81       	ldd	r29, Z+5	; 0x05
     514:	82 81       	ldd	r24, Z+2	; 0x02
     516:	93 81       	ldd	r25, Z+3	; 0x03
     518:	9b 83       	std	Y+3, r25	; 0x03
     51a:	8a 83       	std	Y+2, r24	; 0x02
     51c:	11 96       	adiw	r26, 0x01	; 1
     51e:	8d 91       	ld	r24, X+
     520:	9c 91       	ld	r25, X
     522:	12 97       	sbiw	r26, 0x02	; 2
     524:	e8 17       	cp	r30, r24
     526:	f9 07       	cpc	r31, r25
     528:	31 f4       	brne	.+12     	; 0x536 <uxListRemove+0x3c>
     52a:	84 81       	ldd	r24, Z+4	; 0x04
     52c:	95 81       	ldd	r25, Z+5	; 0x05
     52e:	12 96       	adiw	r26, 0x02	; 2
     530:	9c 93       	st	X, r25
     532:	8e 93       	st	-X, r24
     534:	11 97       	sbiw	r26, 0x01	; 1
     536:	11 86       	std	Z+9, r1	; 0x09
     538:	10 86       	std	Z+8, r1	; 0x08
     53a:	8c 91       	ld	r24, X
     53c:	81 50       	subi	r24, 0x01	; 1
     53e:	8c 93       	st	X, r24
     540:	df 91       	pop	r29
     542:	cf 91       	pop	r28
     544:	08 95       	ret

00000546 <pxPortInitialiseStack>:
     546:	31 e1       	ldi	r19, 0x11	; 17
     548:	fc 01       	movw	r30, r24
     54a:	30 83       	st	Z, r19
     54c:	31 97       	sbiw	r30, 0x01	; 1
     54e:	22 e2       	ldi	r18, 0x22	; 34
     550:	20 83       	st	Z, r18
     552:	31 97       	sbiw	r30, 0x01	; 1
     554:	a3 e3       	ldi	r26, 0x33	; 51
     556:	a0 83       	st	Z, r26
     558:	31 97       	sbiw	r30, 0x01	; 1
     55a:	60 83       	st	Z, r22
     55c:	31 97       	sbiw	r30, 0x01	; 1
     55e:	70 83       	st	Z, r23
     560:	31 97       	sbiw	r30, 0x01	; 1
     562:	10 82       	st	Z, r1
     564:	31 97       	sbiw	r30, 0x01	; 1
     566:	60 e8       	ldi	r22, 0x80	; 128
     568:	60 83       	st	Z, r22
     56a:	31 97       	sbiw	r30, 0x01	; 1
     56c:	10 82       	st	Z, r1
     56e:	31 97       	sbiw	r30, 0x01	; 1
     570:	62 e0       	ldi	r22, 0x02	; 2
     572:	60 83       	st	Z, r22
     574:	31 97       	sbiw	r30, 0x01	; 1
     576:	63 e0       	ldi	r22, 0x03	; 3
     578:	60 83       	st	Z, r22
     57a:	31 97       	sbiw	r30, 0x01	; 1
     57c:	64 e0       	ldi	r22, 0x04	; 4
     57e:	60 83       	st	Z, r22
     580:	31 97       	sbiw	r30, 0x01	; 1
     582:	65 e0       	ldi	r22, 0x05	; 5
     584:	60 83       	st	Z, r22
     586:	31 97       	sbiw	r30, 0x01	; 1
     588:	66 e0       	ldi	r22, 0x06	; 6
     58a:	60 83       	st	Z, r22
     58c:	31 97       	sbiw	r30, 0x01	; 1
     58e:	67 e0       	ldi	r22, 0x07	; 7
     590:	60 83       	st	Z, r22
     592:	31 97       	sbiw	r30, 0x01	; 1
     594:	68 e0       	ldi	r22, 0x08	; 8
     596:	60 83       	st	Z, r22
     598:	31 97       	sbiw	r30, 0x01	; 1
     59a:	69 e0       	ldi	r22, 0x09	; 9
     59c:	60 83       	st	Z, r22
     59e:	31 97       	sbiw	r30, 0x01	; 1
     5a0:	60 e1       	ldi	r22, 0x10	; 16
     5a2:	60 83       	st	Z, r22
     5a4:	31 97       	sbiw	r30, 0x01	; 1
     5a6:	30 83       	st	Z, r19
     5a8:	31 97       	sbiw	r30, 0x01	; 1
     5aa:	32 e1       	ldi	r19, 0x12	; 18
     5ac:	30 83       	st	Z, r19
     5ae:	31 97       	sbiw	r30, 0x01	; 1
     5b0:	33 e1       	ldi	r19, 0x13	; 19
     5b2:	30 83       	st	Z, r19
     5b4:	31 97       	sbiw	r30, 0x01	; 1
     5b6:	34 e1       	ldi	r19, 0x14	; 20
     5b8:	30 83       	st	Z, r19
     5ba:	31 97       	sbiw	r30, 0x01	; 1
     5bc:	35 e1       	ldi	r19, 0x15	; 21
     5be:	30 83       	st	Z, r19
     5c0:	31 97       	sbiw	r30, 0x01	; 1
     5c2:	36 e1       	ldi	r19, 0x16	; 22
     5c4:	30 83       	st	Z, r19
     5c6:	31 97       	sbiw	r30, 0x01	; 1
     5c8:	37 e1       	ldi	r19, 0x17	; 23
     5ca:	30 83       	st	Z, r19
     5cc:	31 97       	sbiw	r30, 0x01	; 1
     5ce:	38 e1       	ldi	r19, 0x18	; 24
     5d0:	30 83       	st	Z, r19
     5d2:	31 97       	sbiw	r30, 0x01	; 1
     5d4:	39 e1       	ldi	r19, 0x19	; 25
     5d6:	30 83       	st	Z, r19
     5d8:	31 97       	sbiw	r30, 0x01	; 1
     5da:	30 e2       	ldi	r19, 0x20	; 32
     5dc:	30 83       	st	Z, r19
     5de:	31 97       	sbiw	r30, 0x01	; 1
     5e0:	31 e2       	ldi	r19, 0x21	; 33
     5e2:	30 83       	st	Z, r19
     5e4:	31 97       	sbiw	r30, 0x01	; 1
     5e6:	20 83       	st	Z, r18
     5e8:	31 97       	sbiw	r30, 0x01	; 1
     5ea:	23 e2       	ldi	r18, 0x23	; 35
     5ec:	20 83       	st	Z, r18
     5ee:	31 97       	sbiw	r30, 0x01	; 1
     5f0:	40 83       	st	Z, r20
     5f2:	31 97       	sbiw	r30, 0x01	; 1
     5f4:	50 83       	st	Z, r21
     5f6:	31 97       	sbiw	r30, 0x01	; 1
     5f8:	26 e2       	ldi	r18, 0x26	; 38
     5fa:	20 83       	st	Z, r18
     5fc:	31 97       	sbiw	r30, 0x01	; 1
     5fe:	27 e2       	ldi	r18, 0x27	; 39
     600:	20 83       	st	Z, r18
     602:	31 97       	sbiw	r30, 0x01	; 1
     604:	28 e2       	ldi	r18, 0x28	; 40
     606:	20 83       	st	Z, r18
     608:	31 97       	sbiw	r30, 0x01	; 1
     60a:	29 e2       	ldi	r18, 0x29	; 41
     60c:	20 83       	st	Z, r18
     60e:	31 97       	sbiw	r30, 0x01	; 1
     610:	20 e3       	ldi	r18, 0x30	; 48
     612:	20 83       	st	Z, r18
     614:	31 97       	sbiw	r30, 0x01	; 1
     616:	21 e3       	ldi	r18, 0x31	; 49
     618:	20 83       	st	Z, r18
     61a:	86 97       	sbiw	r24, 0x26	; 38
     61c:	08 95       	ret

0000061e <xPortStartScheduler>:
     61e:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     622:	8c e7       	ldi	r24, 0x7C	; 124
     624:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     628:	8b e0       	ldi	r24, 0x0B	; 11
     62a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     62e:	ef e6       	ldi	r30, 0x6F	; 111
     630:	f0 e0       	ldi	r31, 0x00	; 0
     632:	80 81       	ld	r24, Z
     634:	82 60       	ori	r24, 0x02	; 2
     636:	80 83       	st	Z, r24
     638:	a0 91 83 07 	lds	r26, 0x0783	; 0x800783 <pxCurrentTCB>
     63c:	b0 91 84 07 	lds	r27, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
     640:	cd 91       	ld	r28, X+
     642:	cd bf       	out	0x3d, r28	; 61
     644:	dd 91       	ld	r29, X+
     646:	de bf       	out	0x3e, r29	; 62
     648:	ff 91       	pop	r31
     64a:	ef 91       	pop	r30
     64c:	df 91       	pop	r29
     64e:	cf 91       	pop	r28
     650:	bf 91       	pop	r27
     652:	af 91       	pop	r26
     654:	9f 91       	pop	r25
     656:	8f 91       	pop	r24
     658:	7f 91       	pop	r23
     65a:	6f 91       	pop	r22
     65c:	5f 91       	pop	r21
     65e:	4f 91       	pop	r20
     660:	3f 91       	pop	r19
     662:	2f 91       	pop	r18
     664:	1f 91       	pop	r17
     666:	0f 91       	pop	r16
     668:	ff 90       	pop	r15
     66a:	ef 90       	pop	r14
     66c:	df 90       	pop	r13
     66e:	cf 90       	pop	r12
     670:	bf 90       	pop	r11
     672:	af 90       	pop	r10
     674:	9f 90       	pop	r9
     676:	8f 90       	pop	r8
     678:	7f 90       	pop	r7
     67a:	6f 90       	pop	r6
     67c:	5f 90       	pop	r5
     67e:	4f 90       	pop	r4
     680:	3f 90       	pop	r3
     682:	2f 90       	pop	r2
     684:	1f 90       	pop	r1
     686:	0f 90       	pop	r0
     688:	0f be       	out	0x3f, r0	; 63
     68a:	0f 90       	pop	r0
     68c:	08 95       	ret
     68e:	81 e0       	ldi	r24, 0x01	; 1
     690:	08 95       	ret

00000692 <vPortYield>:
     692:	0f 92       	push	r0
     694:	0f b6       	in	r0, 0x3f	; 63
     696:	f8 94       	cli
     698:	0f 92       	push	r0
     69a:	1f 92       	push	r1
     69c:	11 24       	eor	r1, r1
     69e:	2f 92       	push	r2
     6a0:	3f 92       	push	r3
     6a2:	4f 92       	push	r4
     6a4:	5f 92       	push	r5
     6a6:	6f 92       	push	r6
     6a8:	7f 92       	push	r7
     6aa:	8f 92       	push	r8
     6ac:	9f 92       	push	r9
     6ae:	af 92       	push	r10
     6b0:	bf 92       	push	r11
     6b2:	cf 92       	push	r12
     6b4:	df 92       	push	r13
     6b6:	ef 92       	push	r14
     6b8:	ff 92       	push	r15
     6ba:	0f 93       	push	r16
     6bc:	1f 93       	push	r17
     6be:	2f 93       	push	r18
     6c0:	3f 93       	push	r19
     6c2:	4f 93       	push	r20
     6c4:	5f 93       	push	r21
     6c6:	6f 93       	push	r22
     6c8:	7f 93       	push	r23
     6ca:	8f 93       	push	r24
     6cc:	9f 93       	push	r25
     6ce:	af 93       	push	r26
     6d0:	bf 93       	push	r27
     6d2:	cf 93       	push	r28
     6d4:	df 93       	push	r29
     6d6:	ef 93       	push	r30
     6d8:	ff 93       	push	r31
     6da:	a0 91 83 07 	lds	r26, 0x0783	; 0x800783 <pxCurrentTCB>
     6de:	b0 91 84 07 	lds	r27, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
     6e2:	0d b6       	in	r0, 0x3d	; 61
     6e4:	0d 92       	st	X+, r0
     6e6:	0e b6       	in	r0, 0x3e	; 62
     6e8:	0d 92       	st	X+, r0
     6ea:	0e 94 a3 0a 	call	0x1546	; 0x1546 <vTaskSwitchContext>
     6ee:	a0 91 83 07 	lds	r26, 0x0783	; 0x800783 <pxCurrentTCB>
     6f2:	b0 91 84 07 	lds	r27, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
     6f6:	cd 91       	ld	r28, X+
     6f8:	cd bf       	out	0x3d, r28	; 61
     6fa:	dd 91       	ld	r29, X+
     6fc:	de bf       	out	0x3e, r29	; 62
     6fe:	ff 91       	pop	r31
     700:	ef 91       	pop	r30
     702:	df 91       	pop	r29
     704:	cf 91       	pop	r28
     706:	bf 91       	pop	r27
     708:	af 91       	pop	r26
     70a:	9f 91       	pop	r25
     70c:	8f 91       	pop	r24
     70e:	7f 91       	pop	r23
     710:	6f 91       	pop	r22
     712:	5f 91       	pop	r21
     714:	4f 91       	pop	r20
     716:	3f 91       	pop	r19
     718:	2f 91       	pop	r18
     71a:	1f 91       	pop	r17
     71c:	0f 91       	pop	r16
     71e:	ff 90       	pop	r15
     720:	ef 90       	pop	r14
     722:	df 90       	pop	r13
     724:	cf 90       	pop	r12
     726:	bf 90       	pop	r11
     728:	af 90       	pop	r10
     72a:	9f 90       	pop	r9
     72c:	8f 90       	pop	r8
     72e:	7f 90       	pop	r7
     730:	6f 90       	pop	r6
     732:	5f 90       	pop	r5
     734:	4f 90       	pop	r4
     736:	3f 90       	pop	r3
     738:	2f 90       	pop	r2
     73a:	1f 90       	pop	r1
     73c:	0f 90       	pop	r0
     73e:	0f be       	out	0x3f, r0	; 63
     740:	0f 90       	pop	r0
     742:	08 95       	ret

00000744 <vPortYieldFromTick>:
     744:	0f 92       	push	r0
     746:	0f b6       	in	r0, 0x3f	; 63
     748:	f8 94       	cli
     74a:	0f 92       	push	r0
     74c:	1f 92       	push	r1
     74e:	11 24       	eor	r1, r1
     750:	2f 92       	push	r2
     752:	3f 92       	push	r3
     754:	4f 92       	push	r4
     756:	5f 92       	push	r5
     758:	6f 92       	push	r6
     75a:	7f 92       	push	r7
     75c:	8f 92       	push	r8
     75e:	9f 92       	push	r9
     760:	af 92       	push	r10
     762:	bf 92       	push	r11
     764:	cf 92       	push	r12
     766:	df 92       	push	r13
     768:	ef 92       	push	r14
     76a:	ff 92       	push	r15
     76c:	0f 93       	push	r16
     76e:	1f 93       	push	r17
     770:	2f 93       	push	r18
     772:	3f 93       	push	r19
     774:	4f 93       	push	r20
     776:	5f 93       	push	r21
     778:	6f 93       	push	r22
     77a:	7f 93       	push	r23
     77c:	8f 93       	push	r24
     77e:	9f 93       	push	r25
     780:	af 93       	push	r26
     782:	bf 93       	push	r27
     784:	cf 93       	push	r28
     786:	df 93       	push	r29
     788:	ef 93       	push	r30
     78a:	ff 93       	push	r31
     78c:	a0 91 83 07 	lds	r26, 0x0783	; 0x800783 <pxCurrentTCB>
     790:	b0 91 84 07 	lds	r27, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
     794:	0d b6       	in	r0, 0x3d	; 61
     796:	0d 92       	st	X+, r0
     798:	0e b6       	in	r0, 0x3e	; 62
     79a:	0d 92       	st	X+, r0
     79c:	0e 94 07 09 	call	0x120e	; 0x120e <xTaskIncrementTick>
     7a0:	81 11       	cpse	r24, r1
     7a2:	0e 94 a3 0a 	call	0x1546	; 0x1546 <vTaskSwitchContext>
     7a6:	a0 91 83 07 	lds	r26, 0x0783	; 0x800783 <pxCurrentTCB>
     7aa:	b0 91 84 07 	lds	r27, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
     7ae:	cd 91       	ld	r28, X+
     7b0:	cd bf       	out	0x3d, r28	; 61
     7b2:	dd 91       	ld	r29, X+
     7b4:	de bf       	out	0x3e, r29	; 62
     7b6:	ff 91       	pop	r31
     7b8:	ef 91       	pop	r30
     7ba:	df 91       	pop	r29
     7bc:	cf 91       	pop	r28
     7be:	bf 91       	pop	r27
     7c0:	af 91       	pop	r26
     7c2:	9f 91       	pop	r25
     7c4:	8f 91       	pop	r24
     7c6:	7f 91       	pop	r23
     7c8:	6f 91       	pop	r22
     7ca:	5f 91       	pop	r21
     7cc:	4f 91       	pop	r20
     7ce:	3f 91       	pop	r19
     7d0:	2f 91       	pop	r18
     7d2:	1f 91       	pop	r17
     7d4:	0f 91       	pop	r16
     7d6:	ff 90       	pop	r15
     7d8:	ef 90       	pop	r14
     7da:	df 90       	pop	r13
     7dc:	cf 90       	pop	r12
     7de:	bf 90       	pop	r11
     7e0:	af 90       	pop	r10
     7e2:	9f 90       	pop	r9
     7e4:	8f 90       	pop	r8
     7e6:	7f 90       	pop	r7
     7e8:	6f 90       	pop	r6
     7ea:	5f 90       	pop	r5
     7ec:	4f 90       	pop	r4
     7ee:	3f 90       	pop	r3
     7f0:	2f 90       	pop	r2
     7f2:	1f 90       	pop	r1
     7f4:	0f 90       	pop	r0
     7f6:	0f be       	out	0x3f, r0	; 63
     7f8:	0f 90       	pop	r0
     7fa:	08 95       	ret

000007fc <__vector_11>:
     7fc:	0e 94 a2 03 	call	0x744	; 0x744 <vPortYieldFromTick>
     800:	18 95       	reti

00000802 <pvPortMalloc>:
     802:	0f 93       	push	r16
     804:	1f 93       	push	r17
     806:	cf 93       	push	r28
     808:	df 93       	push	r29
     80a:	ec 01       	movw	r28, r24
     80c:	0e 94 01 09 	call	0x1202	; 0x1202 <vTaskSuspendAll>
     810:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__data_end>
     814:	81 11       	cpse	r24, r1
     816:	1d c0       	rjmp	.+58     	; 0x852 <pvPortMalloc+0x50>
     818:	e1 e4       	ldi	r30, 0x41	; 65
     81a:	f1 e0       	ldi	r31, 0x01	; 1
     81c:	86 e4       	ldi	r24, 0x46	; 70
     81e:	91 e0       	ldi	r25, 0x01	; 1
     820:	91 83       	std	Z+1, r25	; 0x01
     822:	80 83       	st	Z, r24
     824:	13 82       	std	Z+3, r1	; 0x03
     826:	12 82       	std	Z+2, r1	; 0x02
     828:	ed e3       	ldi	r30, 0x3D	; 61
     82a:	f1 e0       	ldi	r31, 0x01	; 1
     82c:	8b ed       	ldi	r24, 0xDB	; 219
     82e:	95 e0       	ldi	r25, 0x05	; 5
     830:	93 83       	std	Z+3, r25	; 0x03
     832:	82 83       	std	Z+2, r24	; 0x02
     834:	11 82       	std	Z+1, r1	; 0x01
     836:	10 82       	st	Z, r1
     838:	a5 e4       	ldi	r26, 0x45	; 69
     83a:	b1 e0       	ldi	r27, 0x01	; 1
     83c:	14 96       	adiw	r26, 0x04	; 4
     83e:	9c 93       	st	X, r25
     840:	8e 93       	st	-X, r24
     842:	13 97       	sbiw	r26, 0x03	; 3
     844:	12 96       	adiw	r26, 0x02	; 2
     846:	fc 93       	st	X, r31
     848:	ee 93       	st	-X, r30
     84a:	11 97       	sbiw	r26, 0x01	; 1
     84c:	81 e0       	ldi	r24, 0x01	; 1
     84e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <__data_end>
     852:	20 97       	sbiw	r28, 0x00	; 0
     854:	09 f4       	brne	.+2      	; 0x858 <pvPortMalloc+0x56>
     856:	5f c0       	rjmp	.+190    	; 0x916 <__stack+0x17>
     858:	9e 01       	movw	r18, r28
     85a:	2c 5f       	subi	r18, 0xFC	; 252
     85c:	3f 4f       	sbci	r19, 0xFF	; 255
     85e:	23 96       	adiw	r28, 0x03	; 3
     860:	ca 3d       	cpi	r28, 0xDA	; 218
     862:	d5 40       	sbci	r29, 0x05	; 5
     864:	08 f0       	brcs	.+2      	; 0x868 <pvPortMalloc+0x66>
     866:	5a c0       	rjmp	.+180    	; 0x91c <__stack+0x1d>
     868:	e0 91 41 01 	lds	r30, 0x0141	; 0x800141 <xStart>
     86c:	f0 91 42 01 	lds	r31, 0x0142	; 0x800142 <xStart+0x1>
     870:	a1 e4       	ldi	r26, 0x41	; 65
     872:	b1 e0       	ldi	r27, 0x01	; 1
     874:	02 c0       	rjmp	.+4      	; 0x87a <pvPortMalloc+0x78>
     876:	df 01       	movw	r26, r30
     878:	fc 01       	movw	r30, r24
     87a:	82 81       	ldd	r24, Z+2	; 0x02
     87c:	93 81       	ldd	r25, Z+3	; 0x03
     87e:	82 17       	cp	r24, r18
     880:	93 07       	cpc	r25, r19
     882:	20 f4       	brcc	.+8      	; 0x88c <pvPortMalloc+0x8a>
     884:	80 81       	ld	r24, Z
     886:	91 81       	ldd	r25, Z+1	; 0x01
     888:	00 97       	sbiw	r24, 0x00	; 0
     88a:	a9 f7       	brne	.-22     	; 0x876 <pvPortMalloc+0x74>
     88c:	c1 e0       	ldi	r28, 0x01	; 1
     88e:	ed 33       	cpi	r30, 0x3D	; 61
     890:	fc 07       	cpc	r31, r28
     892:	09 f4       	brne	.+2      	; 0x896 <pvPortMalloc+0x94>
     894:	46 c0       	rjmp	.+140    	; 0x922 <__stack+0x23>
     896:	cd 91       	ld	r28, X+
     898:	dc 91       	ld	r29, X
     89a:	11 97       	sbiw	r26, 0x01	; 1
     89c:	8e 01       	movw	r16, r28
     89e:	0c 5f       	subi	r16, 0xFC	; 252
     8a0:	1f 4f       	sbci	r17, 0xFF	; 255
     8a2:	80 81       	ld	r24, Z
     8a4:	91 81       	ldd	r25, Z+1	; 0x01
     8a6:	8d 93       	st	X+, r24
     8a8:	9c 93       	st	X, r25
     8aa:	82 81       	ldd	r24, Z+2	; 0x02
     8ac:	93 81       	ldd	r25, Z+3	; 0x03
     8ae:	82 1b       	sub	r24, r18
     8b0:	93 0b       	sbc	r25, r19
     8b2:	89 30       	cpi	r24, 0x09	; 9
     8b4:	91 05       	cpc	r25, r1
     8b6:	10 f1       	brcs	.+68     	; 0x8fc <pvPortMalloc+0xfa>
     8b8:	bf 01       	movw	r22, r30
     8ba:	62 0f       	add	r22, r18
     8bc:	73 1f       	adc	r23, r19
     8be:	db 01       	movw	r26, r22
     8c0:	13 96       	adiw	r26, 0x03	; 3
     8c2:	9c 93       	st	X, r25
     8c4:	8e 93       	st	-X, r24
     8c6:	12 97       	sbiw	r26, 0x02	; 2
     8c8:	33 83       	std	Z+3, r19	; 0x03
     8ca:	22 83       	std	Z+2, r18	; 0x02
     8cc:	12 96       	adiw	r26, 0x02	; 2
     8ce:	4d 91       	ld	r20, X+
     8d0:	5c 91       	ld	r21, X
     8d2:	13 97       	sbiw	r26, 0x03	; 3
     8d4:	81 e4       	ldi	r24, 0x41	; 65
     8d6:	91 e0       	ldi	r25, 0x01	; 1
     8d8:	01 c0       	rjmp	.+2      	; 0x8dc <pvPortMalloc+0xda>
     8da:	cd 01       	movw	r24, r26
     8dc:	ec 01       	movw	r28, r24
     8de:	a8 81       	ld	r26, Y
     8e0:	b9 81       	ldd	r27, Y+1	; 0x01
     8e2:	12 96       	adiw	r26, 0x02	; 2
     8e4:	2d 91       	ld	r18, X+
     8e6:	3c 91       	ld	r19, X
     8e8:	13 97       	sbiw	r26, 0x03	; 3
     8ea:	24 17       	cp	r18, r20
     8ec:	35 07       	cpc	r19, r21
     8ee:	a8 f3       	brcs	.-22     	; 0x8da <pvPortMalloc+0xd8>
     8f0:	eb 01       	movw	r28, r22
     8f2:	b9 83       	std	Y+1, r27	; 0x01
     8f4:	a8 83       	st	Y, r26
     8f6:	dc 01       	movw	r26, r24
     8f8:	6d 93       	st	X+, r22
     8fa:	7c 93       	st	X, r23
     8fc:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <xFreeBytesRemaining>
     900:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <xFreeBytesRemaining+0x1>
     904:	22 81       	ldd	r18, Z+2	; 0x02
     906:	33 81       	ldd	r19, Z+3	; 0x03
     908:	82 1b       	sub	r24, r18
     90a:	93 0b       	sbc	r25, r19
     90c:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <xFreeBytesRemaining+0x1>
     910:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <xFreeBytesRemaining>
     914:	08 c0       	rjmp	.+16     	; 0x926 <__stack+0x27>
     916:	00 e0       	ldi	r16, 0x00	; 0
     918:	10 e0       	ldi	r17, 0x00	; 0
     91a:	05 c0       	rjmp	.+10     	; 0x926 <__stack+0x27>
     91c:	00 e0       	ldi	r16, 0x00	; 0
     91e:	10 e0       	ldi	r17, 0x00	; 0
     920:	02 c0       	rjmp	.+4      	; 0x926 <__stack+0x27>
     922:	00 e0       	ldi	r16, 0x00	; 0
     924:	10 e0       	ldi	r17, 0x00	; 0
     926:	0e 94 c4 09 	call	0x1388	; 0x1388 <xTaskResumeAll>
     92a:	c8 01       	movw	r24, r16
     92c:	df 91       	pop	r29
     92e:	cf 91       	pop	r28
     930:	1f 91       	pop	r17
     932:	0f 91       	pop	r16
     934:	08 95       	ret

00000936 <vPortFree>:
     936:	0f 93       	push	r16
     938:	1f 93       	push	r17
     93a:	cf 93       	push	r28
     93c:	df 93       	push	r29
     93e:	00 97       	sbiw	r24, 0x00	; 0
     940:	41 f1       	breq	.+80     	; 0x992 <vPortFree+0x5c>
     942:	ec 01       	movw	r28, r24
     944:	8c 01       	movw	r16, r24
     946:	04 50       	subi	r16, 0x04	; 4
     948:	11 09       	sbc	r17, r1
     94a:	0e 94 01 09 	call	0x1202	; 0x1202 <vTaskSuspendAll>
     94e:	f8 01       	movw	r30, r16
     950:	42 81       	ldd	r20, Z+2	; 0x02
     952:	53 81       	ldd	r21, Z+3	; 0x03
     954:	a1 e4       	ldi	r26, 0x41	; 65
     956:	b1 e0       	ldi	r27, 0x01	; 1
     958:	01 c0       	rjmp	.+2      	; 0x95c <vPortFree+0x26>
     95a:	df 01       	movw	r26, r30
     95c:	ed 91       	ld	r30, X+
     95e:	fc 91       	ld	r31, X
     960:	11 97       	sbiw	r26, 0x01	; 1
     962:	22 81       	ldd	r18, Z+2	; 0x02
     964:	33 81       	ldd	r19, Z+3	; 0x03
     966:	24 17       	cp	r18, r20
     968:	35 07       	cpc	r19, r21
     96a:	b8 f3       	brcs	.-18     	; 0x95a <vPortFree+0x24>
     96c:	24 97       	sbiw	r28, 0x04	; 4
     96e:	f9 83       	std	Y+1, r31	; 0x01
     970:	e8 83       	st	Y, r30
     972:	0d 93       	st	X+, r16
     974:	1c 93       	st	X, r17
     976:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <xFreeBytesRemaining>
     97a:	30 91 02 01 	lds	r19, 0x0102	; 0x800102 <xFreeBytesRemaining+0x1>
     97e:	8a 81       	ldd	r24, Y+2	; 0x02
     980:	9b 81       	ldd	r25, Y+3	; 0x03
     982:	82 0f       	add	r24, r18
     984:	93 1f       	adc	r25, r19
     986:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <xFreeBytesRemaining+0x1>
     98a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <xFreeBytesRemaining>
     98e:	0e 94 c4 09 	call	0x1388	; 0x1388 <xTaskResumeAll>
     992:	df 91       	pop	r29
     994:	cf 91       	pop	r28
     996:	1f 91       	pop	r17
     998:	0f 91       	pop	r16
     99a:	08 95       	ret

0000099c <prvCopyDataToQueue>:
     99c:	1f 93       	push	r17
     99e:	cf 93       	push	r28
     9a0:	df 93       	push	r29
     9a2:	ec 01       	movw	r28, r24
     9a4:	14 2f       	mov	r17, r20
     9a6:	4c 8d       	ldd	r20, Y+28	; 0x1c
     9a8:	41 11       	cpse	r20, r1
     9aa:	0c c0       	rjmp	.+24     	; 0x9c4 <prvCopyDataToQueue+0x28>
     9ac:	88 81       	ld	r24, Y
     9ae:	99 81       	ldd	r25, Y+1	; 0x01
     9b0:	89 2b       	or	r24, r25
     9b2:	09 f0       	breq	.+2      	; 0x9b6 <prvCopyDataToQueue+0x1a>
     9b4:	45 c0       	rjmp	.+138    	; 0xa40 <prvCopyDataToQueue+0xa4>
     9b6:	8a 81       	ldd	r24, Y+2	; 0x02
     9b8:	9b 81       	ldd	r25, Y+3	; 0x03
     9ba:	0e 94 2e 0c 	call	0x185c	; 0x185c <xTaskPriorityDisinherit>
     9be:	1b 82       	std	Y+3, r1	; 0x03
     9c0:	1a 82       	std	Y+2, r1	; 0x02
     9c2:	45 c0       	rjmp	.+138    	; 0xa4e <prvCopyDataToQueue+0xb2>
     9c4:	11 11       	cpse	r17, r1
     9c6:	17 c0       	rjmp	.+46     	; 0x9f6 <prvCopyDataToQueue+0x5a>
     9c8:	50 e0       	ldi	r21, 0x00	; 0
     9ca:	8c 81       	ldd	r24, Y+4	; 0x04
     9cc:	9d 81       	ldd	r25, Y+5	; 0x05
     9ce:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <memcpy>
     9d2:	2c 8d       	ldd	r18, Y+28	; 0x1c
     9d4:	8c 81       	ldd	r24, Y+4	; 0x04
     9d6:	9d 81       	ldd	r25, Y+5	; 0x05
     9d8:	82 0f       	add	r24, r18
     9da:	91 1d       	adc	r25, r1
     9dc:	9d 83       	std	Y+5, r25	; 0x05
     9de:	8c 83       	std	Y+4, r24	; 0x04
     9e0:	2a 81       	ldd	r18, Y+2	; 0x02
     9e2:	3b 81       	ldd	r19, Y+3	; 0x03
     9e4:	82 17       	cp	r24, r18
     9e6:	93 07       	cpc	r25, r19
     9e8:	68 f1       	brcs	.+90     	; 0xa44 <prvCopyDataToQueue+0xa8>
     9ea:	88 81       	ld	r24, Y
     9ec:	99 81       	ldd	r25, Y+1	; 0x01
     9ee:	9d 83       	std	Y+5, r25	; 0x05
     9f0:	8c 83       	std	Y+4, r24	; 0x04
     9f2:	80 e0       	ldi	r24, 0x00	; 0
     9f4:	2c c0       	rjmp	.+88     	; 0xa4e <prvCopyDataToQueue+0xb2>
     9f6:	50 e0       	ldi	r21, 0x00	; 0
     9f8:	8e 81       	ldd	r24, Y+6	; 0x06
     9fa:	9f 81       	ldd	r25, Y+7	; 0x07
     9fc:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <memcpy>
     a00:	8c 8d       	ldd	r24, Y+28	; 0x1c
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	91 95       	neg	r25
     a06:	81 95       	neg	r24
     a08:	91 09       	sbc	r25, r1
     a0a:	2e 81       	ldd	r18, Y+6	; 0x06
     a0c:	3f 81       	ldd	r19, Y+7	; 0x07
     a0e:	28 0f       	add	r18, r24
     a10:	39 1f       	adc	r19, r25
     a12:	3f 83       	std	Y+7, r19	; 0x07
     a14:	2e 83       	std	Y+6, r18	; 0x06
     a16:	48 81       	ld	r20, Y
     a18:	59 81       	ldd	r21, Y+1	; 0x01
     a1a:	24 17       	cp	r18, r20
     a1c:	35 07       	cpc	r19, r21
     a1e:	30 f4       	brcc	.+12     	; 0xa2c <prvCopyDataToQueue+0x90>
     a20:	2a 81       	ldd	r18, Y+2	; 0x02
     a22:	3b 81       	ldd	r19, Y+3	; 0x03
     a24:	82 0f       	add	r24, r18
     a26:	93 1f       	adc	r25, r19
     a28:	9f 83       	std	Y+7, r25	; 0x07
     a2a:	8e 83       	std	Y+6, r24	; 0x06
     a2c:	12 30       	cpi	r17, 0x02	; 2
     a2e:	61 f4       	brne	.+24     	; 0xa48 <prvCopyDataToQueue+0xac>
     a30:	8a 8d       	ldd	r24, Y+26	; 0x1a
     a32:	88 23       	and	r24, r24
     a34:	59 f0       	breq	.+22     	; 0xa4c <prvCopyDataToQueue+0xb0>
     a36:	8a 8d       	ldd	r24, Y+26	; 0x1a
     a38:	81 50       	subi	r24, 0x01	; 1
     a3a:	8a 8f       	std	Y+26, r24	; 0x1a
     a3c:	80 e0       	ldi	r24, 0x00	; 0
     a3e:	07 c0       	rjmp	.+14     	; 0xa4e <prvCopyDataToQueue+0xb2>
     a40:	80 e0       	ldi	r24, 0x00	; 0
     a42:	05 c0       	rjmp	.+10     	; 0xa4e <prvCopyDataToQueue+0xb2>
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	03 c0       	rjmp	.+6      	; 0xa4e <prvCopyDataToQueue+0xb2>
     a48:	80 e0       	ldi	r24, 0x00	; 0
     a4a:	01 c0       	rjmp	.+2      	; 0xa4e <prvCopyDataToQueue+0xb2>
     a4c:	80 e0       	ldi	r24, 0x00	; 0
     a4e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     a50:	9f 5f       	subi	r25, 0xFF	; 255
     a52:	9a 8f       	std	Y+26, r25	; 0x1a
     a54:	df 91       	pop	r29
     a56:	cf 91       	pop	r28
     a58:	1f 91       	pop	r17
     a5a:	08 95       	ret

00000a5c <prvCopyDataFromQueue>:
     a5c:	fc 01       	movw	r30, r24
     a5e:	44 8d       	ldd	r20, Z+28	; 0x1c
     a60:	44 23       	and	r20, r20
     a62:	a9 f0       	breq	.+42     	; 0xa8e <prvCopyDataFromQueue+0x32>
     a64:	50 e0       	ldi	r21, 0x00	; 0
     a66:	26 81       	ldd	r18, Z+6	; 0x06
     a68:	37 81       	ldd	r19, Z+7	; 0x07
     a6a:	24 0f       	add	r18, r20
     a6c:	35 1f       	adc	r19, r21
     a6e:	37 83       	std	Z+7, r19	; 0x07
     a70:	26 83       	std	Z+6, r18	; 0x06
     a72:	82 81       	ldd	r24, Z+2	; 0x02
     a74:	93 81       	ldd	r25, Z+3	; 0x03
     a76:	28 17       	cp	r18, r24
     a78:	39 07       	cpc	r19, r25
     a7a:	20 f0       	brcs	.+8      	; 0xa84 <prvCopyDataFromQueue+0x28>
     a7c:	80 81       	ld	r24, Z
     a7e:	91 81       	ldd	r25, Z+1	; 0x01
     a80:	97 83       	std	Z+7, r25	; 0x07
     a82:	86 83       	std	Z+6, r24	; 0x06
     a84:	cb 01       	movw	r24, r22
     a86:	66 81       	ldd	r22, Z+6	; 0x06
     a88:	77 81       	ldd	r23, Z+7	; 0x07
     a8a:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <memcpy>
     a8e:	08 95       	ret

00000a90 <prvUnlockQueue>:
     a90:	0f 93       	push	r16
     a92:	1f 93       	push	r17
     a94:	cf 93       	push	r28
     a96:	df 93       	push	r29
     a98:	ec 01       	movw	r28, r24
     a9a:	0f b6       	in	r0, 0x3f	; 63
     a9c:	f8 94       	cli
     a9e:	0f 92       	push	r0
     aa0:	8e 8d       	ldd	r24, Y+30	; 0x1e
     aa2:	18 16       	cp	r1, r24
     aa4:	bc f4       	brge	.+46     	; 0xad4 <prvUnlockQueue+0x44>
     aa6:	89 89       	ldd	r24, Y+17	; 0x11
     aa8:	81 11       	cpse	r24, r1
     aaa:	05 c0       	rjmp	.+10     	; 0xab6 <prvUnlockQueue+0x26>
     aac:	13 c0       	rjmp	.+38     	; 0xad4 <prvUnlockQueue+0x44>
     aae:	89 89       	ldd	r24, Y+17	; 0x11
     ab0:	81 11       	cpse	r24, r1
     ab2:	04 c0       	rjmp	.+8      	; 0xabc <prvUnlockQueue+0x2c>
     ab4:	0f c0       	rjmp	.+30     	; 0xad4 <prvUnlockQueue+0x44>
     ab6:	8e 01       	movw	r16, r28
     ab8:	0f 5e       	subi	r16, 0xEF	; 239
     aba:	1f 4f       	sbci	r17, 0xFF	; 255
     abc:	c8 01       	movw	r24, r16
     abe:	0e 94 3c 0b 	call	0x1678	; 0x1678 <xTaskRemoveFromEventList>
     ac2:	81 11       	cpse	r24, r1
     ac4:	0e 94 c8 0b 	call	0x1790	; 0x1790 <vTaskMissedYield>
     ac8:	8e 8d       	ldd	r24, Y+30	; 0x1e
     aca:	81 50       	subi	r24, 0x01	; 1
     acc:	8e 8f       	std	Y+30, r24	; 0x1e
     ace:	8e 8d       	ldd	r24, Y+30	; 0x1e
     ad0:	18 16       	cp	r1, r24
     ad2:	6c f3       	brlt	.-38     	; 0xaae <prvUnlockQueue+0x1e>
     ad4:	8f ef       	ldi	r24, 0xFF	; 255
     ad6:	8e 8f       	std	Y+30, r24	; 0x1e
     ad8:	0f 90       	pop	r0
     ada:	0f be       	out	0x3f, r0	; 63
     adc:	0f b6       	in	r0, 0x3f	; 63
     ade:	f8 94       	cli
     ae0:	0f 92       	push	r0
     ae2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     ae4:	18 16       	cp	r1, r24
     ae6:	bc f4       	brge	.+46     	; 0xb16 <prvUnlockQueue+0x86>
     ae8:	88 85       	ldd	r24, Y+8	; 0x08
     aea:	81 11       	cpse	r24, r1
     aec:	05 c0       	rjmp	.+10     	; 0xaf8 <prvUnlockQueue+0x68>
     aee:	13 c0       	rjmp	.+38     	; 0xb16 <prvUnlockQueue+0x86>
     af0:	88 85       	ldd	r24, Y+8	; 0x08
     af2:	81 11       	cpse	r24, r1
     af4:	04 c0       	rjmp	.+8      	; 0xafe <prvUnlockQueue+0x6e>
     af6:	0f c0       	rjmp	.+30     	; 0xb16 <prvUnlockQueue+0x86>
     af8:	8e 01       	movw	r16, r28
     afa:	08 5f       	subi	r16, 0xF8	; 248
     afc:	1f 4f       	sbci	r17, 0xFF	; 255
     afe:	c8 01       	movw	r24, r16
     b00:	0e 94 3c 0b 	call	0x1678	; 0x1678 <xTaskRemoveFromEventList>
     b04:	81 11       	cpse	r24, r1
     b06:	0e 94 c8 0b 	call	0x1790	; 0x1790 <vTaskMissedYield>
     b0a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b0c:	81 50       	subi	r24, 0x01	; 1
     b0e:	8d 8f       	std	Y+29, r24	; 0x1d
     b10:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b12:	18 16       	cp	r1, r24
     b14:	6c f3       	brlt	.-38     	; 0xaf0 <prvUnlockQueue+0x60>
     b16:	8f ef       	ldi	r24, 0xFF	; 255
     b18:	8d 8f       	std	Y+29, r24	; 0x1d
     b1a:	0f 90       	pop	r0
     b1c:	0f be       	out	0x3f, r0	; 63
     b1e:	df 91       	pop	r29
     b20:	cf 91       	pop	r28
     b22:	1f 91       	pop	r17
     b24:	0f 91       	pop	r16
     b26:	08 95       	ret

00000b28 <xQueueGenericReset>:
     b28:	cf 93       	push	r28
     b2a:	df 93       	push	r29
     b2c:	ec 01       	movw	r28, r24
     b2e:	0f b6       	in	r0, 0x3f	; 63
     b30:	f8 94       	cli
     b32:	0f 92       	push	r0
     b34:	48 81       	ld	r20, Y
     b36:	59 81       	ldd	r21, Y+1	; 0x01
     b38:	2c 8d       	ldd	r18, Y+28	; 0x1c
     b3a:	30 e0       	ldi	r19, 0x00	; 0
     b3c:	7b 8d       	ldd	r23, Y+27	; 0x1b
     b3e:	72 9f       	mul	r23, r18
     b40:	c0 01       	movw	r24, r0
     b42:	73 9f       	mul	r23, r19
     b44:	90 0d       	add	r25, r0
     b46:	11 24       	eor	r1, r1
     b48:	fa 01       	movw	r30, r20
     b4a:	e8 0f       	add	r30, r24
     b4c:	f9 1f       	adc	r31, r25
     b4e:	fb 83       	std	Y+3, r31	; 0x03
     b50:	ea 83       	std	Y+2, r30	; 0x02
     b52:	1a 8e       	std	Y+26, r1	; 0x1a
     b54:	5d 83       	std	Y+5, r21	; 0x05
     b56:	4c 83       	std	Y+4, r20	; 0x04
     b58:	82 1b       	sub	r24, r18
     b5a:	93 0b       	sbc	r25, r19
     b5c:	84 0f       	add	r24, r20
     b5e:	95 1f       	adc	r25, r21
     b60:	9f 83       	std	Y+7, r25	; 0x07
     b62:	8e 83       	std	Y+6, r24	; 0x06
     b64:	8f ef       	ldi	r24, 0xFF	; 255
     b66:	8d 8f       	std	Y+29, r24	; 0x1d
     b68:	8e 8f       	std	Y+30, r24	; 0x1e
     b6a:	61 11       	cpse	r22, r1
     b6c:	0c c0       	rjmp	.+24     	; 0xb86 <xQueueGenericReset+0x5e>
     b6e:	88 85       	ldd	r24, Y+8	; 0x08
     b70:	88 23       	and	r24, r24
     b72:	89 f0       	breq	.+34     	; 0xb96 <xQueueGenericReset+0x6e>
     b74:	ce 01       	movw	r24, r28
     b76:	08 96       	adiw	r24, 0x08	; 8
     b78:	0e 94 3c 0b 	call	0x1678	; 0x1678 <xTaskRemoveFromEventList>
     b7c:	81 30       	cpi	r24, 0x01	; 1
     b7e:	59 f4       	brne	.+22     	; 0xb96 <xQueueGenericReset+0x6e>
     b80:	0e 94 49 03 	call	0x692	; 0x692 <vPortYield>
     b84:	08 c0       	rjmp	.+16     	; 0xb96 <xQueueGenericReset+0x6e>
     b86:	ce 01       	movw	r24, r28
     b88:	08 96       	adiw	r24, 0x08	; 8
     b8a:	0e 94 19 02 	call	0x432	; 0x432 <vListInitialise>
     b8e:	ce 01       	movw	r24, r28
     b90:	41 96       	adiw	r24, 0x11	; 17
     b92:	0e 94 19 02 	call	0x432	; 0x432 <vListInitialise>
     b96:	0f 90       	pop	r0
     b98:	0f be       	out	0x3f, r0	; 63
     b9a:	81 e0       	ldi	r24, 0x01	; 1
     b9c:	df 91       	pop	r29
     b9e:	cf 91       	pop	r28
     ba0:	08 95       	ret

00000ba2 <xQueueGenericCreate>:
     ba2:	0f 93       	push	r16
     ba4:	1f 93       	push	r17
     ba6:	cf 93       	push	r28
     ba8:	df 93       	push	r29
     baa:	08 2f       	mov	r16, r24
     bac:	16 2f       	mov	r17, r22
     bae:	66 23       	and	r22, r22
     bb0:	b9 f0       	breq	.+46     	; 0xbe0 <xQueueGenericCreate+0x3e>
     bb2:	86 9f       	mul	r24, r22
     bb4:	c0 01       	movw	r24, r0
     bb6:	11 24       	eor	r1, r1
     bb8:	80 96       	adiw	r24, 0x20	; 32
     bba:	0e 94 01 04 	call	0x802	; 0x802 <pvPortMalloc>
     bbe:	ec 01       	movw	r28, r24
     bc0:	00 97       	sbiw	r24, 0x00	; 0
     bc2:	21 f4       	brne	.+8      	; 0xbcc <xQueueGenericCreate+0x2a>
     bc4:	14 c0       	rjmp	.+40     	; 0xbee <xQueueGenericCreate+0x4c>
     bc6:	d9 83       	std	Y+1, r29	; 0x01
     bc8:	c8 83       	st	Y, r28
     bca:	03 c0       	rjmp	.+6      	; 0xbd2 <xQueueGenericCreate+0x30>
     bcc:	4f 96       	adiw	r24, 0x1f	; 31
     bce:	99 83       	std	Y+1, r25	; 0x01
     bd0:	88 83       	st	Y, r24
     bd2:	0b 8f       	std	Y+27, r16	; 0x1b
     bd4:	1c 8f       	std	Y+28, r17	; 0x1c
     bd6:	61 e0       	ldi	r22, 0x01	; 1
     bd8:	ce 01       	movw	r24, r28
     bda:	0e 94 94 05 	call	0xb28	; 0xb28 <xQueueGenericReset>
     bde:	07 c0       	rjmp	.+14     	; 0xbee <xQueueGenericCreate+0x4c>
     be0:	8f e1       	ldi	r24, 0x1F	; 31
     be2:	90 e0       	ldi	r25, 0x00	; 0
     be4:	0e 94 01 04 	call	0x802	; 0x802 <pvPortMalloc>
     be8:	ec 01       	movw	r28, r24
     bea:	89 2b       	or	r24, r25
     bec:	61 f7       	brne	.-40     	; 0xbc6 <xQueueGenericCreate+0x24>
     bee:	ce 01       	movw	r24, r28
     bf0:	df 91       	pop	r29
     bf2:	cf 91       	pop	r28
     bf4:	1f 91       	pop	r17
     bf6:	0f 91       	pop	r16
     bf8:	08 95       	ret

00000bfa <xQueueGenericSend>:
     bfa:	9f 92       	push	r9
     bfc:	af 92       	push	r10
     bfe:	bf 92       	push	r11
     c00:	cf 92       	push	r12
     c02:	df 92       	push	r13
     c04:	ef 92       	push	r14
     c06:	ff 92       	push	r15
     c08:	0f 93       	push	r16
     c0a:	1f 93       	push	r17
     c0c:	cf 93       	push	r28
     c0e:	df 93       	push	r29
     c10:	00 d0       	rcall	.+0      	; 0xc12 <xQueueGenericSend+0x18>
     c12:	00 d0       	rcall	.+0      	; 0xc14 <xQueueGenericSend+0x1a>
     c14:	1f 92       	push	r1
     c16:	cd b7       	in	r28, 0x3d	; 61
     c18:	de b7       	in	r29, 0x3e	; 62
     c1a:	8c 01       	movw	r16, r24
     c1c:	6b 01       	movw	r12, r22
     c1e:	5d 83       	std	Y+5, r21	; 0x05
     c20:	4c 83       	std	Y+4, r20	; 0x04
     c22:	a2 2e       	mov	r10, r18
     c24:	b1 2c       	mov	r11, r1
     c26:	99 24       	eor	r9, r9
     c28:	93 94       	inc	r9
     c2a:	7c 01       	movw	r14, r24
     c2c:	88 e0       	ldi	r24, 0x08	; 8
     c2e:	e8 0e       	add	r14, r24
     c30:	f1 1c       	adc	r15, r1
     c32:	0f b6       	in	r0, 0x3f	; 63
     c34:	f8 94       	cli
     c36:	0f 92       	push	r0
     c38:	f8 01       	movw	r30, r16
     c3a:	92 8d       	ldd	r25, Z+26	; 0x1a
     c3c:	83 8d       	ldd	r24, Z+27	; 0x1b
     c3e:	98 17       	cp	r25, r24
     c40:	18 f0       	brcs	.+6      	; 0xc48 <xQueueGenericSend+0x4e>
     c42:	f2 e0       	ldi	r31, 0x02	; 2
     c44:	af 12       	cpse	r10, r31
     c46:	19 c0       	rjmp	.+50     	; 0xc7a <xQueueGenericSend+0x80>
     c48:	4a 2d       	mov	r20, r10
     c4a:	b6 01       	movw	r22, r12
     c4c:	c8 01       	movw	r24, r16
     c4e:	0e 94 ce 04 	call	0x99c	; 0x99c <prvCopyDataToQueue>
     c52:	f8 01       	movw	r30, r16
     c54:	91 89       	ldd	r25, Z+17	; 0x11
     c56:	99 23       	and	r25, r25
     c58:	49 f0       	breq	.+18     	; 0xc6c <xQueueGenericSend+0x72>
     c5a:	c8 01       	movw	r24, r16
     c5c:	41 96       	adiw	r24, 0x11	; 17
     c5e:	0e 94 3c 0b 	call	0x1678	; 0x1678 <xTaskRemoveFromEventList>
     c62:	81 30       	cpi	r24, 0x01	; 1
     c64:	31 f4       	brne	.+12     	; 0xc72 <xQueueGenericSend+0x78>
     c66:	0e 94 49 03 	call	0x692	; 0x692 <vPortYield>
     c6a:	03 c0       	rjmp	.+6      	; 0xc72 <xQueueGenericSend+0x78>
     c6c:	81 11       	cpse	r24, r1
     c6e:	0e 94 49 03 	call	0x692	; 0x692 <vPortYield>
     c72:	0f 90       	pop	r0
     c74:	0f be       	out	0x3f, r0	; 63
     c76:	81 e0       	ldi	r24, 0x01	; 1
     c78:	50 c0       	rjmp	.+160    	; 0xd1a <xQueueGenericSend+0x120>
     c7a:	8c 81       	ldd	r24, Y+4	; 0x04
     c7c:	9d 81       	ldd	r25, Y+5	; 0x05
     c7e:	89 2b       	or	r24, r25
     c80:	21 f4       	brne	.+8      	; 0xc8a <xQueueGenericSend+0x90>
     c82:	0f 90       	pop	r0
     c84:	0f be       	out	0x3f, r0	; 63
     c86:	80 e0       	ldi	r24, 0x00	; 0
     c88:	48 c0       	rjmp	.+144    	; 0xd1a <xQueueGenericSend+0x120>
     c8a:	b1 10       	cpse	r11, r1
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <xQueueGenericSend+0x9e>
     c8e:	ce 01       	movw	r24, r28
     c90:	01 96       	adiw	r24, 0x01	; 1
     c92:	0e 94 84 0b 	call	0x1708	; 0x1708 <vTaskSetTimeOutState>
     c96:	b9 2c       	mov	r11, r9
     c98:	0f 90       	pop	r0
     c9a:	0f be       	out	0x3f, r0	; 63
     c9c:	0e 94 01 09 	call	0x1202	; 0x1202 <vTaskSuspendAll>
     ca0:	0f b6       	in	r0, 0x3f	; 63
     ca2:	f8 94       	cli
     ca4:	0f 92       	push	r0
     ca6:	f8 01       	movw	r30, r16
     ca8:	85 8d       	ldd	r24, Z+29	; 0x1d
     caa:	8f 3f       	cpi	r24, 0xFF	; 255
     cac:	09 f4       	brne	.+2      	; 0xcb0 <xQueueGenericSend+0xb6>
     cae:	15 8e       	std	Z+29, r1	; 0x1d
     cb0:	f8 01       	movw	r30, r16
     cb2:	86 8d       	ldd	r24, Z+30	; 0x1e
     cb4:	8f 3f       	cpi	r24, 0xFF	; 255
     cb6:	09 f4       	brne	.+2      	; 0xcba <xQueueGenericSend+0xc0>
     cb8:	16 8e       	std	Z+30, r1	; 0x1e
     cba:	0f 90       	pop	r0
     cbc:	0f be       	out	0x3f, r0	; 63
     cbe:	be 01       	movw	r22, r28
     cc0:	6c 5f       	subi	r22, 0xFC	; 252
     cc2:	7f 4f       	sbci	r23, 0xFF	; 255
     cc4:	ce 01       	movw	r24, r28
     cc6:	01 96       	adiw	r24, 0x01	; 1
     cc8:	0e 94 8f 0b 	call	0x171e	; 0x171e <xTaskCheckForTimeOut>
     ccc:	81 11       	cpse	r24, r1
     cce:	1f c0       	rjmp	.+62     	; 0xd0e <xQueueGenericSend+0x114>
     cd0:	0f b6       	in	r0, 0x3f	; 63
     cd2:	f8 94       	cli
     cd4:	0f 92       	push	r0
     cd6:	f8 01       	movw	r30, r16
     cd8:	92 8d       	ldd	r25, Z+26	; 0x1a
     cda:	0f 90       	pop	r0
     cdc:	0f be       	out	0x3f, r0	; 63
     cde:	83 8d       	ldd	r24, Z+27	; 0x1b
     ce0:	98 13       	cpse	r25, r24
     ce2:	0f c0       	rjmp	.+30     	; 0xd02 <xQueueGenericSend+0x108>
     ce4:	6c 81       	ldd	r22, Y+4	; 0x04
     ce6:	7d 81       	ldd	r23, Y+5	; 0x05
     ce8:	c7 01       	movw	r24, r14
     cea:	0e 94 10 0b 	call	0x1620	; 0x1620 <vTaskPlaceOnEventList>
     cee:	c8 01       	movw	r24, r16
     cf0:	0e 94 48 05 	call	0xa90	; 0xa90 <prvUnlockQueue>
     cf4:	0e 94 c4 09 	call	0x1388	; 0x1388 <xTaskResumeAll>
     cf8:	81 11       	cpse	r24, r1
     cfa:	9b cf       	rjmp	.-202    	; 0xc32 <xQueueGenericSend+0x38>
     cfc:	0e 94 49 03 	call	0x692	; 0x692 <vPortYield>
     d00:	98 cf       	rjmp	.-208    	; 0xc32 <xQueueGenericSend+0x38>
     d02:	c8 01       	movw	r24, r16
     d04:	0e 94 48 05 	call	0xa90	; 0xa90 <prvUnlockQueue>
     d08:	0e 94 c4 09 	call	0x1388	; 0x1388 <xTaskResumeAll>
     d0c:	92 cf       	rjmp	.-220    	; 0xc32 <xQueueGenericSend+0x38>
     d0e:	c8 01       	movw	r24, r16
     d10:	0e 94 48 05 	call	0xa90	; 0xa90 <prvUnlockQueue>
     d14:	0e 94 c4 09 	call	0x1388	; 0x1388 <xTaskResumeAll>
     d18:	80 e0       	ldi	r24, 0x00	; 0
     d1a:	0f 90       	pop	r0
     d1c:	0f 90       	pop	r0
     d1e:	0f 90       	pop	r0
     d20:	0f 90       	pop	r0
     d22:	0f 90       	pop	r0
     d24:	df 91       	pop	r29
     d26:	cf 91       	pop	r28
     d28:	1f 91       	pop	r17
     d2a:	0f 91       	pop	r16
     d2c:	ff 90       	pop	r15
     d2e:	ef 90       	pop	r14
     d30:	df 90       	pop	r13
     d32:	cf 90       	pop	r12
     d34:	bf 90       	pop	r11
     d36:	af 90       	pop	r10
     d38:	9f 90       	pop	r9
     d3a:	08 95       	ret

00000d3c <xQueueGenericReceive>:
     d3c:	9f 92       	push	r9
     d3e:	af 92       	push	r10
     d40:	bf 92       	push	r11
     d42:	cf 92       	push	r12
     d44:	df 92       	push	r13
     d46:	ef 92       	push	r14
     d48:	ff 92       	push	r15
     d4a:	0f 93       	push	r16
     d4c:	1f 93       	push	r17
     d4e:	cf 93       	push	r28
     d50:	df 93       	push	r29
     d52:	00 d0       	rcall	.+0      	; 0xd54 <xQueueGenericReceive+0x18>
     d54:	00 d0       	rcall	.+0      	; 0xd56 <xQueueGenericReceive+0x1a>
     d56:	1f 92       	push	r1
     d58:	cd b7       	in	r28, 0x3d	; 61
     d5a:	de b7       	in	r29, 0x3e	; 62
     d5c:	8c 01       	movw	r16, r24
     d5e:	6b 01       	movw	r12, r22
     d60:	5d 83       	std	Y+5, r21	; 0x05
     d62:	4c 83       	std	Y+4, r20	; 0x04
     d64:	92 2e       	mov	r9, r18
     d66:	b1 2c       	mov	r11, r1
     d68:	aa 24       	eor	r10, r10
     d6a:	a3 94       	inc	r10
     d6c:	7c 01       	movw	r14, r24
     d6e:	81 e1       	ldi	r24, 0x11	; 17
     d70:	e8 0e       	add	r14, r24
     d72:	f1 1c       	adc	r15, r1
     d74:	0f b6       	in	r0, 0x3f	; 63
     d76:	f8 94       	cli
     d78:	0f 92       	push	r0
     d7a:	f8 01       	movw	r30, r16
     d7c:	82 8d       	ldd	r24, Z+26	; 0x1a
     d7e:	88 23       	and	r24, r24
     d80:	99 f1       	breq	.+102    	; 0xde8 <xQueueGenericReceive+0xac>
     d82:	e6 80       	ldd	r14, Z+6	; 0x06
     d84:	f7 80       	ldd	r15, Z+7	; 0x07
     d86:	b6 01       	movw	r22, r12
     d88:	c8 01       	movw	r24, r16
     d8a:	0e 94 2e 05 	call	0xa5c	; 0xa5c <prvCopyDataFromQueue>
     d8e:	91 10       	cpse	r9, r1
     d90:	1a c0       	rjmp	.+52     	; 0xdc6 <xQueueGenericReceive+0x8a>
     d92:	f8 01       	movw	r30, r16
     d94:	82 8d       	ldd	r24, Z+26	; 0x1a
     d96:	81 50       	subi	r24, 0x01	; 1
     d98:	82 8f       	std	Z+26, r24	; 0x1a
     d9a:	80 81       	ld	r24, Z
     d9c:	91 81       	ldd	r25, Z+1	; 0x01
     d9e:	89 2b       	or	r24, r25
     da0:	29 f4       	brne	.+10     	; 0xdac <xQueueGenericReceive+0x70>
     da2:	0e 94 6e 0c 	call	0x18dc	; 0x18dc <pvTaskIncrementMutexHeldCount>
     da6:	f8 01       	movw	r30, r16
     da8:	93 83       	std	Z+3, r25	; 0x03
     daa:	82 83       	std	Z+2, r24	; 0x02
     dac:	f8 01       	movw	r30, r16
     dae:	80 85       	ldd	r24, Z+8	; 0x08
     db0:	88 23       	and	r24, r24
     db2:	b1 f0       	breq	.+44     	; 0xde0 <xQueueGenericReceive+0xa4>
     db4:	c8 01       	movw	r24, r16
     db6:	08 96       	adiw	r24, 0x08	; 8
     db8:	0e 94 3c 0b 	call	0x1678	; 0x1678 <xTaskRemoveFromEventList>
     dbc:	81 30       	cpi	r24, 0x01	; 1
     dbe:	81 f4       	brne	.+32     	; 0xde0 <xQueueGenericReceive+0xa4>
     dc0:	0e 94 49 03 	call	0x692	; 0x692 <vPortYield>
     dc4:	0d c0       	rjmp	.+26     	; 0xde0 <xQueueGenericReceive+0xa4>
     dc6:	f8 01       	movw	r30, r16
     dc8:	f7 82       	std	Z+7, r15	; 0x07
     dca:	e6 82       	std	Z+6, r14	; 0x06
     dcc:	81 89       	ldd	r24, Z+17	; 0x11
     dce:	88 23       	and	r24, r24
     dd0:	39 f0       	breq	.+14     	; 0xde0 <xQueueGenericReceive+0xa4>
     dd2:	c8 01       	movw	r24, r16
     dd4:	41 96       	adiw	r24, 0x11	; 17
     dd6:	0e 94 3c 0b 	call	0x1678	; 0x1678 <xTaskRemoveFromEventList>
     dda:	81 11       	cpse	r24, r1
     ddc:	0e 94 49 03 	call	0x692	; 0x692 <vPortYield>
     de0:	0f 90       	pop	r0
     de2:	0f be       	out	0x3f, r0	; 63
     de4:	81 e0       	ldi	r24, 0x01	; 1
     de6:	5c c0       	rjmp	.+184    	; 0xea0 <xQueueGenericReceive+0x164>
     de8:	8c 81       	ldd	r24, Y+4	; 0x04
     dea:	9d 81       	ldd	r25, Y+5	; 0x05
     dec:	89 2b       	or	r24, r25
     dee:	21 f4       	brne	.+8      	; 0xdf8 <xQueueGenericReceive+0xbc>
     df0:	0f 90       	pop	r0
     df2:	0f be       	out	0x3f, r0	; 63
     df4:	80 e0       	ldi	r24, 0x00	; 0
     df6:	54 c0       	rjmp	.+168    	; 0xea0 <xQueueGenericReceive+0x164>
     df8:	b1 10       	cpse	r11, r1
     dfa:	05 c0       	rjmp	.+10     	; 0xe06 <xQueueGenericReceive+0xca>
     dfc:	ce 01       	movw	r24, r28
     dfe:	01 96       	adiw	r24, 0x01	; 1
     e00:	0e 94 84 0b 	call	0x1708	; 0x1708 <vTaskSetTimeOutState>
     e04:	ba 2c       	mov	r11, r10
     e06:	0f 90       	pop	r0
     e08:	0f be       	out	0x3f, r0	; 63
     e0a:	0e 94 01 09 	call	0x1202	; 0x1202 <vTaskSuspendAll>
     e0e:	0f b6       	in	r0, 0x3f	; 63
     e10:	f8 94       	cli
     e12:	0f 92       	push	r0
     e14:	f8 01       	movw	r30, r16
     e16:	85 8d       	ldd	r24, Z+29	; 0x1d
     e18:	8f 3f       	cpi	r24, 0xFF	; 255
     e1a:	09 f4       	brne	.+2      	; 0xe1e <xQueueGenericReceive+0xe2>
     e1c:	15 8e       	std	Z+29, r1	; 0x1d
     e1e:	f8 01       	movw	r30, r16
     e20:	86 8d       	ldd	r24, Z+30	; 0x1e
     e22:	8f 3f       	cpi	r24, 0xFF	; 255
     e24:	09 f4       	brne	.+2      	; 0xe28 <xQueueGenericReceive+0xec>
     e26:	16 8e       	std	Z+30, r1	; 0x1e
     e28:	0f 90       	pop	r0
     e2a:	0f be       	out	0x3f, r0	; 63
     e2c:	be 01       	movw	r22, r28
     e2e:	6c 5f       	subi	r22, 0xFC	; 252
     e30:	7f 4f       	sbci	r23, 0xFF	; 255
     e32:	ce 01       	movw	r24, r28
     e34:	01 96       	adiw	r24, 0x01	; 1
     e36:	0e 94 8f 0b 	call	0x171e	; 0x171e <xTaskCheckForTimeOut>
     e3a:	81 11       	cpse	r24, r1
     e3c:	2b c0       	rjmp	.+86     	; 0xe94 <xQueueGenericReceive+0x158>
     e3e:	0f b6       	in	r0, 0x3f	; 63
     e40:	f8 94       	cli
     e42:	0f 92       	push	r0
     e44:	f8 01       	movw	r30, r16
     e46:	82 8d       	ldd	r24, Z+26	; 0x1a
     e48:	0f 90       	pop	r0
     e4a:	0f be       	out	0x3f, r0	; 63
     e4c:	81 11       	cpse	r24, r1
     e4e:	1c c0       	rjmp	.+56     	; 0xe88 <xQueueGenericReceive+0x14c>
     e50:	80 81       	ld	r24, Z
     e52:	91 81       	ldd	r25, Z+1	; 0x01
     e54:	89 2b       	or	r24, r25
     e56:	49 f4       	brne	.+18     	; 0xe6a <xQueueGenericReceive+0x12e>
     e58:	0f b6       	in	r0, 0x3f	; 63
     e5a:	f8 94       	cli
     e5c:	0f 92       	push	r0
     e5e:	82 81       	ldd	r24, Z+2	; 0x02
     e60:	93 81       	ldd	r25, Z+3	; 0x03
     e62:	0e 94 cc 0b 	call	0x1798	; 0x1798 <vTaskPriorityInherit>
     e66:	0f 90       	pop	r0
     e68:	0f be       	out	0x3f, r0	; 63
     e6a:	6c 81       	ldd	r22, Y+4	; 0x04
     e6c:	7d 81       	ldd	r23, Y+5	; 0x05
     e6e:	c7 01       	movw	r24, r14
     e70:	0e 94 10 0b 	call	0x1620	; 0x1620 <vTaskPlaceOnEventList>
     e74:	c8 01       	movw	r24, r16
     e76:	0e 94 48 05 	call	0xa90	; 0xa90 <prvUnlockQueue>
     e7a:	0e 94 c4 09 	call	0x1388	; 0x1388 <xTaskResumeAll>
     e7e:	81 11       	cpse	r24, r1
     e80:	79 cf       	rjmp	.-270    	; 0xd74 <xQueueGenericReceive+0x38>
     e82:	0e 94 49 03 	call	0x692	; 0x692 <vPortYield>
     e86:	76 cf       	rjmp	.-276    	; 0xd74 <xQueueGenericReceive+0x38>
     e88:	c8 01       	movw	r24, r16
     e8a:	0e 94 48 05 	call	0xa90	; 0xa90 <prvUnlockQueue>
     e8e:	0e 94 c4 09 	call	0x1388	; 0x1388 <xTaskResumeAll>
     e92:	70 cf       	rjmp	.-288    	; 0xd74 <xQueueGenericReceive+0x38>
     e94:	c8 01       	movw	r24, r16
     e96:	0e 94 48 05 	call	0xa90	; 0xa90 <prvUnlockQueue>
     e9a:	0e 94 c4 09 	call	0x1388	; 0x1388 <xTaskResumeAll>
     e9e:	80 e0       	ldi	r24, 0x00	; 0
     ea0:	0f 90       	pop	r0
     ea2:	0f 90       	pop	r0
     ea4:	0f 90       	pop	r0
     ea6:	0f 90       	pop	r0
     ea8:	0f 90       	pop	r0
     eaa:	df 91       	pop	r29
     eac:	cf 91       	pop	r28
     eae:	1f 91       	pop	r17
     eb0:	0f 91       	pop	r16
     eb2:	ff 90       	pop	r15
     eb4:	ef 90       	pop	r14
     eb6:	df 90       	pop	r13
     eb8:	cf 90       	pop	r12
     eba:	bf 90       	pop	r11
     ebc:	af 90       	pop	r10
     ebe:	9f 90       	pop	r9
     ec0:	08 95       	ret

00000ec2 <uxQueueMessagesWaiting>:
     ec2:	0f b6       	in	r0, 0x3f	; 63
     ec4:	f8 94       	cli
     ec6:	0f 92       	push	r0
     ec8:	fc 01       	movw	r30, r24
     eca:	82 8d       	ldd	r24, Z+26	; 0x1a
     ecc:	0f 90       	pop	r0
     ece:	0f be       	out	0x3f, r0	; 63
     ed0:	08 95       	ret

00000ed2 <prvResetNextTaskUnblockTime>:
     ed2:	e0 91 4b 07 	lds	r30, 0x074B	; 0x80074b <pxDelayedTaskList>
     ed6:	f0 91 4c 07 	lds	r31, 0x074C	; 0x80074c <pxDelayedTaskList+0x1>
     eda:	80 81       	ld	r24, Z
     edc:	81 11       	cpse	r24, r1
     ede:	07 c0       	rjmp	.+14     	; 0xeee <prvResetNextTaskUnblockTime+0x1c>
     ee0:	8f ef       	ldi	r24, 0xFF	; 255
     ee2:	9f ef       	ldi	r25, 0xFF	; 255
     ee4:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <xNextTaskUnblockTime+0x1>
     ee8:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <xNextTaskUnblockTime>
     eec:	08 95       	ret
     eee:	e0 91 4b 07 	lds	r30, 0x074B	; 0x80074b <pxDelayedTaskList>
     ef2:	f0 91 4c 07 	lds	r31, 0x074C	; 0x80074c <pxDelayedTaskList+0x1>
     ef6:	05 80       	ldd	r0, Z+5	; 0x05
     ef8:	f6 81       	ldd	r31, Z+6	; 0x06
     efa:	e0 2d       	mov	r30, r0
     efc:	06 80       	ldd	r0, Z+6	; 0x06
     efe:	f7 81       	ldd	r31, Z+7	; 0x07
     f00:	e0 2d       	mov	r30, r0
     f02:	82 81       	ldd	r24, Z+2	; 0x02
     f04:	93 81       	ldd	r25, Z+3	; 0x03
     f06:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <xNextTaskUnblockTime+0x1>
     f0a:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <xNextTaskUnblockTime>
     f0e:	08 95       	ret

00000f10 <prvAddCurrentTaskToDelayedList>:
     f10:	cf 93       	push	r28
     f12:	df 93       	push	r29
     f14:	ec 01       	movw	r28, r24
     f16:	e0 91 83 07 	lds	r30, 0x0783	; 0x800783 <pxCurrentTCB>
     f1a:	f0 91 84 07 	lds	r31, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
     f1e:	93 83       	std	Z+3, r25	; 0x03
     f20:	82 83       	std	Z+2, r24	; 0x02
     f22:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <xTickCount>
     f26:	90 91 29 07 	lds	r25, 0x0729	; 0x800729 <xTickCount+0x1>
     f2a:	c8 17       	cp	r28, r24
     f2c:	d9 07       	cpc	r29, r25
     f2e:	68 f4       	brcc	.+26     	; 0xf4a <prvAddCurrentTaskToDelayedList+0x3a>
     f30:	60 91 83 07 	lds	r22, 0x0783	; 0x800783 <pxCurrentTCB>
     f34:	70 91 84 07 	lds	r23, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
     f38:	80 91 49 07 	lds	r24, 0x0749	; 0x800749 <pxOverflowDelayedTaskList>
     f3c:	90 91 4a 07 	lds	r25, 0x074A	; 0x80074a <pxOverflowDelayedTaskList+0x1>
     f40:	6e 5f       	subi	r22, 0xFE	; 254
     f42:	7f 4f       	sbci	r23, 0xFF	; 255
     f44:	0e 94 4c 02 	call	0x498	; 0x498 <vListInsert>
     f48:	17 c0       	rjmp	.+46     	; 0xf78 <prvAddCurrentTaskToDelayedList+0x68>
     f4a:	60 91 83 07 	lds	r22, 0x0783	; 0x800783 <pxCurrentTCB>
     f4e:	70 91 84 07 	lds	r23, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
     f52:	80 91 4b 07 	lds	r24, 0x074B	; 0x80074b <pxDelayedTaskList>
     f56:	90 91 4c 07 	lds	r25, 0x074C	; 0x80074c <pxDelayedTaskList+0x1>
     f5a:	6e 5f       	subi	r22, 0xFE	; 254
     f5c:	7f 4f       	sbci	r23, 0xFF	; 255
     f5e:	0e 94 4c 02 	call	0x498	; 0x498 <vListInsert>
     f62:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <xNextTaskUnblockTime>
     f66:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <xNextTaskUnblockTime+0x1>
     f6a:	c8 17       	cp	r28, r24
     f6c:	d9 07       	cpc	r29, r25
     f6e:	20 f4       	brcc	.+8      	; 0xf78 <prvAddCurrentTaskToDelayedList+0x68>
     f70:	d0 93 04 01 	sts	0x0104, r29	; 0x800104 <xNextTaskUnblockTime+0x1>
     f74:	c0 93 03 01 	sts	0x0103, r28	; 0x800103 <xNextTaskUnblockTime>
     f78:	df 91       	pop	r29
     f7a:	cf 91       	pop	r28
     f7c:	08 95       	ret

00000f7e <xTaskGenericCreate>:
     f7e:	4f 92       	push	r4
     f80:	5f 92       	push	r5
     f82:	6f 92       	push	r6
     f84:	7f 92       	push	r7
     f86:	8f 92       	push	r8
     f88:	9f 92       	push	r9
     f8a:	af 92       	push	r10
     f8c:	bf 92       	push	r11
     f8e:	cf 92       	push	r12
     f90:	df 92       	push	r13
     f92:	ef 92       	push	r14
     f94:	ff 92       	push	r15
     f96:	0f 93       	push	r16
     f98:	1f 93       	push	r17
     f9a:	cf 93       	push	r28
     f9c:	df 93       	push	r29
     f9e:	4c 01       	movw	r8, r24
     fa0:	eb 01       	movw	r28, r22
     fa2:	5a 01       	movw	r10, r20
     fa4:	29 01       	movw	r4, r18
     fa6:	c1 14       	cp	r12, r1
     fa8:	d1 04       	cpc	r13, r1
     faa:	39 f4       	brne	.+14     	; 0xfba <xTaskGenericCreate+0x3c>
     fac:	ca 01       	movw	r24, r20
     fae:	0e 94 01 04 	call	0x802	; 0x802 <pvPortMalloc>
     fb2:	6c 01       	movw	r12, r24
     fb4:	89 2b       	or	r24, r25
     fb6:	09 f4       	brne	.+2      	; 0xfba <xTaskGenericCreate+0x3c>
     fb8:	e3 c0       	rjmp	.+454    	; 0x1180 <xTaskGenericCreate+0x202>
     fba:	88 e2       	ldi	r24, 0x28	; 40
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	0e 94 01 04 	call	0x802	; 0x802 <pvPortMalloc>
     fc2:	3c 01       	movw	r6, r24
     fc4:	00 97       	sbiw	r24, 0x00	; 0
     fc6:	79 f0       	breq	.+30     	; 0xfe6 <xTaskGenericCreate+0x68>
     fc8:	fc 01       	movw	r30, r24
     fca:	d0 8e       	std	Z+24, r13	; 0x18
     fcc:	c7 8a       	std	Z+23, r12	; 0x17
     fce:	f1 e0       	ldi	r31, 0x01	; 1
     fd0:	af 1a       	sub	r10, r31
     fd2:	b1 08       	sbc	r11, r1
     fd4:	ca 0c       	add	r12, r10
     fd6:	db 1c       	adc	r13, r11
     fd8:	88 81       	ld	r24, Y
     fda:	f3 01       	movw	r30, r6
     fdc:	81 8f       	std	Z+25, r24	; 0x19
     fde:	88 81       	ld	r24, Y
     fe0:	81 11       	cpse	r24, r1
     fe2:	05 c0       	rjmp	.+10     	; 0xfee <xTaskGenericCreate+0x70>
     fe4:	14 c0       	rjmp	.+40     	; 0x100e <xTaskGenericCreate+0x90>
     fe6:	c6 01       	movw	r24, r12
     fe8:	0e 94 9b 04 	call	0x936	; 0x936 <vPortFree>
     fec:	c9 c0       	rjmp	.+402    	; 0x1180 <xTaskGenericCreate+0x202>
     fee:	d3 01       	movw	r26, r6
     ff0:	5a 96       	adiw	r26, 0x1a	; 26
     ff2:	fe 01       	movw	r30, r28
     ff4:	31 96       	adiw	r30, 0x01	; 1
     ff6:	9e 01       	movw	r18, r28
     ff8:	28 5f       	subi	r18, 0xF8	; 248
     ffa:	3f 4f       	sbci	r19, 0xFF	; 255
     ffc:	ef 01       	movw	r28, r30
     ffe:	81 91       	ld	r24, Z+
    1000:	8d 93       	st	X+, r24
    1002:	88 81       	ld	r24, Y
    1004:	88 23       	and	r24, r24
    1006:	19 f0       	breq	.+6      	; 0x100e <xTaskGenericCreate+0x90>
    1008:	e2 17       	cp	r30, r18
    100a:	f3 07       	cpc	r31, r19
    100c:	b9 f7       	brne	.-18     	; 0xffc <xTaskGenericCreate+0x7e>
    100e:	f3 01       	movw	r30, r6
    1010:	10 a2       	std	Z+32, r1	; 0x20
    1012:	10 2f       	mov	r17, r16
    1014:	04 30       	cpi	r16, 0x04	; 4
    1016:	08 f0       	brcs	.+2      	; 0x101a <xTaskGenericCreate+0x9c>
    1018:	13 e0       	ldi	r17, 0x03	; 3
    101a:	f3 01       	movw	r30, r6
    101c:	16 8b       	std	Z+22, r17	; 0x16
    101e:	11 a3       	std	Z+33, r17	; 0x21
    1020:	12 a2       	std	Z+34, r1	; 0x22
    1022:	e3 01       	movw	r28, r6
    1024:	22 96       	adiw	r28, 0x02	; 2
    1026:	ce 01       	movw	r24, r28
    1028:	0e 94 27 02 	call	0x44e	; 0x44e <vListInitialiseItem>
    102c:	c3 01       	movw	r24, r6
    102e:	0c 96       	adiw	r24, 0x0c	; 12
    1030:	0e 94 27 02 	call	0x44e	; 0x44e <vListInitialiseItem>
    1034:	f3 01       	movw	r30, r6
    1036:	71 86       	std	Z+9, r7	; 0x09
    1038:	60 86       	std	Z+8, r6	; 0x08
    103a:	84 e0       	ldi	r24, 0x04	; 4
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	81 1b       	sub	r24, r17
    1040:	91 09       	sbc	r25, r1
    1042:	95 87       	std	Z+13, r25	; 0x0d
    1044:	84 87       	std	Z+12, r24	; 0x0c
    1046:	73 8a       	std	Z+19, r7	; 0x13
    1048:	62 8a       	std	Z+18, r6	; 0x12
    104a:	13 a2       	std	Z+35, r1	; 0x23
    104c:	14 a2       	std	Z+36, r1	; 0x24
    104e:	15 a2       	std	Z+37, r1	; 0x25
    1050:	16 a2       	std	Z+38, r1	; 0x26
    1052:	17 a2       	std	Z+39, r1	; 0x27
    1054:	a2 01       	movw	r20, r4
    1056:	b4 01       	movw	r22, r8
    1058:	c6 01       	movw	r24, r12
    105a:	0e 94 a3 02 	call	0x546	; 0x546 <pxPortInitialiseStack>
    105e:	f3 01       	movw	r30, r6
    1060:	91 83       	std	Z+1, r25	; 0x01
    1062:	80 83       	st	Z, r24
    1064:	e1 14       	cp	r14, r1
    1066:	f1 04       	cpc	r15, r1
    1068:	19 f0       	breq	.+6      	; 0x1070 <xTaskGenericCreate+0xf2>
    106a:	f7 01       	movw	r30, r14
    106c:	71 82       	std	Z+1, r7	; 0x01
    106e:	60 82       	st	Z, r6
    1070:	0f b6       	in	r0, 0x3f	; 63
    1072:	f8 94       	cli
    1074:	0f 92       	push	r0
    1076:	80 91 2a 07 	lds	r24, 0x072A	; 0x80072a <uxCurrentNumberOfTasks>
    107a:	8f 5f       	subi	r24, 0xFF	; 255
    107c:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxCurrentNumberOfTasks>
    1080:	80 91 83 07 	lds	r24, 0x0783	; 0x800783 <pxCurrentTCB>
    1084:	90 91 84 07 	lds	r25, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    1088:	89 2b       	or	r24, r25
    108a:	d1 f5       	brne	.+116    	; 0x1100 <xTaskGenericCreate+0x182>
    108c:	70 92 84 07 	sts	0x0784, r7	; 0x800784 <pxCurrentTCB+0x1>
    1090:	60 92 83 07 	sts	0x0783, r6	; 0x800783 <pxCurrentTCB>
    1094:	80 91 2a 07 	lds	r24, 0x072A	; 0x80072a <uxCurrentNumberOfTasks>
    1098:	81 30       	cpi	r24, 0x01	; 1
    109a:	09 f0       	breq	.+2      	; 0x109e <xTaskGenericCreate+0x120>
    109c:	40 c0       	rjmp	.+128    	; 0x111e <xTaskGenericCreate+0x1a0>
    109e:	8f e5       	ldi	r24, 0x5F	; 95
    10a0:	97 e0       	ldi	r25, 0x07	; 7
    10a2:	0e 94 19 02 	call	0x432	; 0x432 <vListInitialise>
    10a6:	88 e6       	ldi	r24, 0x68	; 104
    10a8:	97 e0       	ldi	r25, 0x07	; 7
    10aa:	0e 94 19 02 	call	0x432	; 0x432 <vListInitialise>
    10ae:	81 e7       	ldi	r24, 0x71	; 113
    10b0:	97 e0       	ldi	r25, 0x07	; 7
    10b2:	0e 94 19 02 	call	0x432	; 0x432 <vListInitialise>
    10b6:	8a e7       	ldi	r24, 0x7A	; 122
    10b8:	97 e0       	ldi	r25, 0x07	; 7
    10ba:	0e 94 19 02 	call	0x432	; 0x432 <vListInitialise>
    10be:	86 e5       	ldi	r24, 0x56	; 86
    10c0:	97 e0       	ldi	r25, 0x07	; 7
    10c2:	0e 94 19 02 	call	0x432	; 0x432 <vListInitialise>
    10c6:	8d e4       	ldi	r24, 0x4D	; 77
    10c8:	97 e0       	ldi	r25, 0x07	; 7
    10ca:	0e 94 19 02 	call	0x432	; 0x432 <vListInitialise>
    10ce:	80 e4       	ldi	r24, 0x40	; 64
    10d0:	97 e0       	ldi	r25, 0x07	; 7
    10d2:	0e 94 19 02 	call	0x432	; 0x432 <vListInitialise>
    10d6:	87 e3       	ldi	r24, 0x37	; 55
    10d8:	97 e0       	ldi	r25, 0x07	; 7
    10da:	0e 94 19 02 	call	0x432	; 0x432 <vListInitialise>
    10de:	8d e2       	ldi	r24, 0x2D	; 45
    10e0:	97 e0       	ldi	r25, 0x07	; 7
    10e2:	0e 94 19 02 	call	0x432	; 0x432 <vListInitialise>
    10e6:	86 e5       	ldi	r24, 0x56	; 86
    10e8:	97 e0       	ldi	r25, 0x07	; 7
    10ea:	90 93 4c 07 	sts	0x074C, r25	; 0x80074c <pxDelayedTaskList+0x1>
    10ee:	80 93 4b 07 	sts	0x074B, r24	; 0x80074b <pxDelayedTaskList>
    10f2:	8d e4       	ldi	r24, 0x4D	; 77
    10f4:	97 e0       	ldi	r25, 0x07	; 7
    10f6:	90 93 4a 07 	sts	0x074A, r25	; 0x80074a <pxOverflowDelayedTaskList+0x1>
    10fa:	80 93 49 07 	sts	0x0749, r24	; 0x800749 <pxOverflowDelayedTaskList>
    10fe:	0f c0       	rjmp	.+30     	; 0x111e <xTaskGenericCreate+0x1a0>
    1100:	80 91 26 07 	lds	r24, 0x0726	; 0x800726 <xSchedulerRunning>
    1104:	81 11       	cpse	r24, r1
    1106:	0b c0       	rjmp	.+22     	; 0x111e <xTaskGenericCreate+0x1a0>
    1108:	e0 91 83 07 	lds	r30, 0x0783	; 0x800783 <pxCurrentTCB>
    110c:	f0 91 84 07 	lds	r31, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    1110:	86 89       	ldd	r24, Z+22	; 0x16
    1112:	08 17       	cp	r16, r24
    1114:	20 f0       	brcs	.+8      	; 0x111e <xTaskGenericCreate+0x1a0>
    1116:	70 92 84 07 	sts	0x0784, r7	; 0x800784 <pxCurrentTCB+0x1>
    111a:	60 92 83 07 	sts	0x0783, r6	; 0x800783 <pxCurrentTCB>
    111e:	80 91 22 07 	lds	r24, 0x0722	; 0x800722 <uxTaskNumber>
    1122:	8f 5f       	subi	r24, 0xFF	; 255
    1124:	80 93 22 07 	sts	0x0722, r24	; 0x800722 <uxTaskNumber>
    1128:	f3 01       	movw	r30, r6
    112a:	86 89       	ldd	r24, Z+22	; 0x16
    112c:	90 91 27 07 	lds	r25, 0x0727	; 0x800727 <uxTopReadyPriority>
    1130:	98 17       	cp	r25, r24
    1132:	10 f4       	brcc	.+4      	; 0x1138 <xTaskGenericCreate+0x1ba>
    1134:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <uxTopReadyPriority>
    1138:	90 e0       	ldi	r25, 0x00	; 0
    113a:	9c 01       	movw	r18, r24
    113c:	22 0f       	add	r18, r18
    113e:	33 1f       	adc	r19, r19
    1140:	22 0f       	add	r18, r18
    1142:	33 1f       	adc	r19, r19
    1144:	22 0f       	add	r18, r18
    1146:	33 1f       	adc	r19, r19
    1148:	82 0f       	add	r24, r18
    114a:	93 1f       	adc	r25, r19
    114c:	be 01       	movw	r22, r28
    114e:	81 5a       	subi	r24, 0xA1	; 161
    1150:	98 4f       	sbci	r25, 0xF8	; 248
    1152:	0e 94 2b 02 	call	0x456	; 0x456 <vListInsertEnd>
    1156:	0f 90       	pop	r0
    1158:	0f be       	out	0x3f, r0	; 63
    115a:	80 91 26 07 	lds	r24, 0x0726	; 0x800726 <xSchedulerRunning>
    115e:	88 23       	and	r24, r24
    1160:	59 f0       	breq	.+22     	; 0x1178 <xTaskGenericCreate+0x1fa>
    1162:	e0 91 83 07 	lds	r30, 0x0783	; 0x800783 <pxCurrentTCB>
    1166:	f0 91 84 07 	lds	r31, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    116a:	86 89       	ldd	r24, Z+22	; 0x16
    116c:	80 17       	cp	r24, r16
    116e:	30 f4       	brcc	.+12     	; 0x117c <xTaskGenericCreate+0x1fe>
    1170:	0e 94 49 03 	call	0x692	; 0x692 <vPortYield>
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	05 c0       	rjmp	.+10     	; 0x1182 <xTaskGenericCreate+0x204>
    1178:	81 e0       	ldi	r24, 0x01	; 1
    117a:	03 c0       	rjmp	.+6      	; 0x1182 <xTaskGenericCreate+0x204>
    117c:	81 e0       	ldi	r24, 0x01	; 1
    117e:	01 c0       	rjmp	.+2      	; 0x1182 <xTaskGenericCreate+0x204>
    1180:	8f ef       	ldi	r24, 0xFF	; 255
    1182:	df 91       	pop	r29
    1184:	cf 91       	pop	r28
    1186:	1f 91       	pop	r17
    1188:	0f 91       	pop	r16
    118a:	ff 90       	pop	r15
    118c:	ef 90       	pop	r14
    118e:	df 90       	pop	r13
    1190:	cf 90       	pop	r12
    1192:	bf 90       	pop	r11
    1194:	af 90       	pop	r10
    1196:	9f 90       	pop	r9
    1198:	8f 90       	pop	r8
    119a:	7f 90       	pop	r7
    119c:	6f 90       	pop	r6
    119e:	5f 90       	pop	r5
    11a0:	4f 90       	pop	r4
    11a2:	08 95       	ret

000011a4 <vTaskStartScheduler>:
    11a4:	af 92       	push	r10
    11a6:	bf 92       	push	r11
    11a8:	cf 92       	push	r12
    11aa:	df 92       	push	r13
    11ac:	ef 92       	push	r14
    11ae:	ff 92       	push	r15
    11b0:	0f 93       	push	r16
    11b2:	a1 2c       	mov	r10, r1
    11b4:	b1 2c       	mov	r11, r1
    11b6:	c1 2c       	mov	r12, r1
    11b8:	d1 2c       	mov	r13, r1
    11ba:	0f 2e       	mov	r0, r31
    11bc:	fb e2       	ldi	r31, 0x2B	; 43
    11be:	ef 2e       	mov	r14, r31
    11c0:	f7 e0       	ldi	r31, 0x07	; 7
    11c2:	ff 2e       	mov	r15, r31
    11c4:	f0 2d       	mov	r31, r0
    11c6:	00 e0       	ldi	r16, 0x00	; 0
    11c8:	20 e0       	ldi	r18, 0x00	; 0
    11ca:	30 e0       	ldi	r19, 0x00	; 0
    11cc:	45 e5       	ldi	r20, 0x55	; 85
    11ce:	50 e0       	ldi	r21, 0x00	; 0
    11d0:	67 e3       	ldi	r22, 0x37	; 55
    11d2:	71 e0       	ldi	r23, 0x01	; 1
    11d4:	86 e6       	ldi	r24, 0x66	; 102
    11d6:	9a e0       	ldi	r25, 0x0A	; 10
    11d8:	0e 94 bf 07 	call	0xf7e	; 0xf7e <xTaskGenericCreate>
    11dc:	81 30       	cpi	r24, 0x01	; 1
    11de:	49 f4       	brne	.+18     	; 0x11f2 <vTaskStartScheduler+0x4e>
    11e0:	f8 94       	cli
    11e2:	80 93 26 07 	sts	0x0726, r24	; 0x800726 <xSchedulerRunning>
    11e6:	10 92 29 07 	sts	0x0729, r1	; 0x800729 <xTickCount+0x1>
    11ea:	10 92 28 07 	sts	0x0728, r1	; 0x800728 <xTickCount>
    11ee:	0e 94 0f 03 	call	0x61e	; 0x61e <xPortStartScheduler>
    11f2:	0f 91       	pop	r16
    11f4:	ff 90       	pop	r15
    11f6:	ef 90       	pop	r14
    11f8:	df 90       	pop	r13
    11fa:	cf 90       	pop	r12
    11fc:	bf 90       	pop	r11
    11fe:	af 90       	pop	r10
    1200:	08 95       	ret

00001202 <vTaskSuspendAll>:
    1202:	80 91 21 07 	lds	r24, 0x0721	; 0x800721 <uxSchedulerSuspended>
    1206:	8f 5f       	subi	r24, 0xFF	; 255
    1208:	80 93 21 07 	sts	0x0721, r24	; 0x800721 <uxSchedulerSuspended>
    120c:	08 95       	ret

0000120e <xTaskIncrementTick>:
    120e:	cf 92       	push	r12
    1210:	df 92       	push	r13
    1212:	ef 92       	push	r14
    1214:	ff 92       	push	r15
    1216:	0f 93       	push	r16
    1218:	1f 93       	push	r17
    121a:	cf 93       	push	r28
    121c:	df 93       	push	r29
    121e:	80 91 21 07 	lds	r24, 0x0721	; 0x800721 <uxSchedulerSuspended>
    1222:	81 11       	cpse	r24, r1
    1224:	9b c0       	rjmp	.+310    	; 0x135c <xTaskIncrementTick+0x14e>
    1226:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <xTickCount>
    122a:	90 91 29 07 	lds	r25, 0x0729	; 0x800729 <xTickCount+0x1>
    122e:	01 96       	adiw	r24, 0x01	; 1
    1230:	90 93 29 07 	sts	0x0729, r25	; 0x800729 <xTickCount+0x1>
    1234:	80 93 28 07 	sts	0x0728, r24	; 0x800728 <xTickCount>
    1238:	e0 90 28 07 	lds	r14, 0x0728	; 0x800728 <xTickCount>
    123c:	f0 90 29 07 	lds	r15, 0x0729	; 0x800729 <xTickCount+0x1>
    1240:	e1 14       	cp	r14, r1
    1242:	f1 04       	cpc	r15, r1
    1244:	b9 f4       	brne	.+46     	; 0x1274 <xTaskIncrementTick+0x66>
    1246:	80 91 4b 07 	lds	r24, 0x074B	; 0x80074b <pxDelayedTaskList>
    124a:	90 91 4c 07 	lds	r25, 0x074C	; 0x80074c <pxDelayedTaskList+0x1>
    124e:	20 91 49 07 	lds	r18, 0x0749	; 0x800749 <pxOverflowDelayedTaskList>
    1252:	30 91 4a 07 	lds	r19, 0x074A	; 0x80074a <pxOverflowDelayedTaskList+0x1>
    1256:	30 93 4c 07 	sts	0x074C, r19	; 0x80074c <pxDelayedTaskList+0x1>
    125a:	20 93 4b 07 	sts	0x074B, r18	; 0x80074b <pxDelayedTaskList>
    125e:	90 93 4a 07 	sts	0x074A, r25	; 0x80074a <pxOverflowDelayedTaskList+0x1>
    1262:	80 93 49 07 	sts	0x0749, r24	; 0x800749 <pxOverflowDelayedTaskList>
    1266:	80 91 23 07 	lds	r24, 0x0723	; 0x800723 <xNumOfOverflows>
    126a:	8f 5f       	subi	r24, 0xFF	; 255
    126c:	80 93 23 07 	sts	0x0723, r24	; 0x800723 <xNumOfOverflows>
    1270:	0e 94 69 07 	call	0xed2	; 0xed2 <prvResetNextTaskUnblockTime>
    1274:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <xNextTaskUnblockTime>
    1278:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <xNextTaskUnblockTime+0x1>
    127c:	e8 16       	cp	r14, r24
    127e:	f9 06       	cpc	r15, r25
    1280:	10 f4       	brcc	.+4      	; 0x1286 <xTaskIncrementTick+0x78>
    1282:	d1 2c       	mov	r13, r1
    1284:	53 c0       	rjmp	.+166    	; 0x132c <xTaskIncrementTick+0x11e>
    1286:	d1 2c       	mov	r13, r1
    1288:	cc 24       	eor	r12, r12
    128a:	c3 94       	inc	r12
    128c:	e0 91 4b 07 	lds	r30, 0x074B	; 0x80074b <pxDelayedTaskList>
    1290:	f0 91 4c 07 	lds	r31, 0x074C	; 0x80074c <pxDelayedTaskList+0x1>
    1294:	80 81       	ld	r24, Z
    1296:	81 11       	cpse	r24, r1
    1298:	07 c0       	rjmp	.+14     	; 0x12a8 <xTaskIncrementTick+0x9a>
    129a:	8f ef       	ldi	r24, 0xFF	; 255
    129c:	9f ef       	ldi	r25, 0xFF	; 255
    129e:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <xNextTaskUnblockTime+0x1>
    12a2:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <xNextTaskUnblockTime>
    12a6:	42 c0       	rjmp	.+132    	; 0x132c <xTaskIncrementTick+0x11e>
    12a8:	e0 91 4b 07 	lds	r30, 0x074B	; 0x80074b <pxDelayedTaskList>
    12ac:	f0 91 4c 07 	lds	r31, 0x074C	; 0x80074c <pxDelayedTaskList+0x1>
    12b0:	05 80       	ldd	r0, Z+5	; 0x05
    12b2:	f6 81       	ldd	r31, Z+6	; 0x06
    12b4:	e0 2d       	mov	r30, r0
    12b6:	c6 81       	ldd	r28, Z+6	; 0x06
    12b8:	d7 81       	ldd	r29, Z+7	; 0x07
    12ba:	8a 81       	ldd	r24, Y+2	; 0x02
    12bc:	9b 81       	ldd	r25, Y+3	; 0x03
    12be:	e8 16       	cp	r14, r24
    12c0:	f9 06       	cpc	r15, r25
    12c2:	28 f4       	brcc	.+10     	; 0x12ce <xTaskIncrementTick+0xc0>
    12c4:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <xNextTaskUnblockTime+0x1>
    12c8:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <xNextTaskUnblockTime>
    12cc:	2f c0       	rjmp	.+94     	; 0x132c <xTaskIncrementTick+0x11e>
    12ce:	8e 01       	movw	r16, r28
    12d0:	0e 5f       	subi	r16, 0xFE	; 254
    12d2:	1f 4f       	sbci	r17, 0xFF	; 255
    12d4:	c8 01       	movw	r24, r16
    12d6:	0e 94 7d 02 	call	0x4fa	; 0x4fa <uxListRemove>
    12da:	8c 89       	ldd	r24, Y+20	; 0x14
    12dc:	9d 89       	ldd	r25, Y+21	; 0x15
    12de:	89 2b       	or	r24, r25
    12e0:	21 f0       	breq	.+8      	; 0x12ea <xTaskIncrementTick+0xdc>
    12e2:	ce 01       	movw	r24, r28
    12e4:	0c 96       	adiw	r24, 0x0c	; 12
    12e6:	0e 94 7d 02 	call	0x4fa	; 0x4fa <uxListRemove>
    12ea:	8e 89       	ldd	r24, Y+22	; 0x16
    12ec:	90 91 27 07 	lds	r25, 0x0727	; 0x800727 <uxTopReadyPriority>
    12f0:	98 17       	cp	r25, r24
    12f2:	10 f4       	brcc	.+4      	; 0x12f8 <xTaskIncrementTick+0xea>
    12f4:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <uxTopReadyPriority>
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	9c 01       	movw	r18, r24
    12fc:	22 0f       	add	r18, r18
    12fe:	33 1f       	adc	r19, r19
    1300:	22 0f       	add	r18, r18
    1302:	33 1f       	adc	r19, r19
    1304:	22 0f       	add	r18, r18
    1306:	33 1f       	adc	r19, r19
    1308:	82 0f       	add	r24, r18
    130a:	93 1f       	adc	r25, r19
    130c:	b8 01       	movw	r22, r16
    130e:	81 5a       	subi	r24, 0xA1	; 161
    1310:	98 4f       	sbci	r25, 0xF8	; 248
    1312:	0e 94 2b 02 	call	0x456	; 0x456 <vListInsertEnd>
    1316:	e0 91 83 07 	lds	r30, 0x0783	; 0x800783 <pxCurrentTCB>
    131a:	f0 91 84 07 	lds	r31, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    131e:	9e 89       	ldd	r25, Y+22	; 0x16
    1320:	86 89       	ldd	r24, Z+22	; 0x16
    1322:	98 17       	cp	r25, r24
    1324:	08 f4       	brcc	.+2      	; 0x1328 <xTaskIncrementTick+0x11a>
    1326:	b2 cf       	rjmp	.-156    	; 0x128c <xTaskIncrementTick+0x7e>
    1328:	dc 2c       	mov	r13, r12
    132a:	b0 cf       	rjmp	.-160    	; 0x128c <xTaskIncrementTick+0x7e>
    132c:	e0 91 83 07 	lds	r30, 0x0783	; 0x800783 <pxCurrentTCB>
    1330:	f0 91 84 07 	lds	r31, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    1334:	86 89       	ldd	r24, Z+22	; 0x16
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	fc 01       	movw	r30, r24
    133a:	ee 0f       	add	r30, r30
    133c:	ff 1f       	adc	r31, r31
    133e:	ee 0f       	add	r30, r30
    1340:	ff 1f       	adc	r31, r31
    1342:	ee 0f       	add	r30, r30
    1344:	ff 1f       	adc	r31, r31
    1346:	8e 0f       	add	r24, r30
    1348:	9f 1f       	adc	r25, r31
    134a:	fc 01       	movw	r30, r24
    134c:	e1 5a       	subi	r30, 0xA1	; 161
    134e:	f8 4f       	sbci	r31, 0xF8	; 248
    1350:	80 81       	ld	r24, Z
    1352:	82 30       	cpi	r24, 0x02	; 2
    1354:	48 f0       	brcs	.+18     	; 0x1368 <xTaskIncrementTick+0x15a>
    1356:	dd 24       	eor	r13, r13
    1358:	d3 94       	inc	r13
    135a:	06 c0       	rjmp	.+12     	; 0x1368 <xTaskIncrementTick+0x15a>
    135c:	80 91 25 07 	lds	r24, 0x0725	; 0x800725 <uxPendedTicks>
    1360:	8f 5f       	subi	r24, 0xFF	; 255
    1362:	80 93 25 07 	sts	0x0725, r24	; 0x800725 <uxPendedTicks>
    1366:	d1 2c       	mov	r13, r1
    1368:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <xYieldPending>
    136c:	88 23       	and	r24, r24
    136e:	11 f0       	breq	.+4      	; 0x1374 <xTaskIncrementTick+0x166>
    1370:	dd 24       	eor	r13, r13
    1372:	d3 94       	inc	r13
    1374:	8d 2d       	mov	r24, r13
    1376:	df 91       	pop	r29
    1378:	cf 91       	pop	r28
    137a:	1f 91       	pop	r17
    137c:	0f 91       	pop	r16
    137e:	ff 90       	pop	r15
    1380:	ef 90       	pop	r14
    1382:	df 90       	pop	r13
    1384:	cf 90       	pop	r12
    1386:	08 95       	ret

00001388 <xTaskResumeAll>:
    1388:	df 92       	push	r13
    138a:	ef 92       	push	r14
    138c:	ff 92       	push	r15
    138e:	0f 93       	push	r16
    1390:	1f 93       	push	r17
    1392:	cf 93       	push	r28
    1394:	df 93       	push	r29
    1396:	0f b6       	in	r0, 0x3f	; 63
    1398:	f8 94       	cli
    139a:	0f 92       	push	r0
    139c:	80 91 21 07 	lds	r24, 0x0721	; 0x800721 <uxSchedulerSuspended>
    13a0:	81 50       	subi	r24, 0x01	; 1
    13a2:	80 93 21 07 	sts	0x0721, r24	; 0x800721 <uxSchedulerSuspended>
    13a6:	80 91 21 07 	lds	r24, 0x0721	; 0x800721 <uxSchedulerSuspended>
    13aa:	81 11       	cpse	r24, r1
    13ac:	62 c0       	rjmp	.+196    	; 0x1472 <xTaskResumeAll+0xea>
    13ae:	80 91 2a 07 	lds	r24, 0x072A	; 0x80072a <uxCurrentNumberOfTasks>
    13b2:	81 11       	cpse	r24, r1
    13b4:	33 c0       	rjmp	.+102    	; 0x141c <xTaskResumeAll+0x94>
    13b6:	60 c0       	rjmp	.+192    	; 0x1478 <xTaskResumeAll+0xf0>
    13b8:	d7 01       	movw	r26, r14
    13ba:	15 96       	adiw	r26, 0x05	; 5
    13bc:	ed 91       	ld	r30, X+
    13be:	fc 91       	ld	r31, X
    13c0:	16 97       	sbiw	r26, 0x06	; 6
    13c2:	c6 81       	ldd	r28, Z+6	; 0x06
    13c4:	d7 81       	ldd	r29, Z+7	; 0x07
    13c6:	ce 01       	movw	r24, r28
    13c8:	0c 96       	adiw	r24, 0x0c	; 12
    13ca:	0e 94 7d 02 	call	0x4fa	; 0x4fa <uxListRemove>
    13ce:	8e 01       	movw	r16, r28
    13d0:	0e 5f       	subi	r16, 0xFE	; 254
    13d2:	1f 4f       	sbci	r17, 0xFF	; 255
    13d4:	c8 01       	movw	r24, r16
    13d6:	0e 94 7d 02 	call	0x4fa	; 0x4fa <uxListRemove>
    13da:	8e 89       	ldd	r24, Y+22	; 0x16
    13dc:	90 91 27 07 	lds	r25, 0x0727	; 0x800727 <uxTopReadyPriority>
    13e0:	98 17       	cp	r25, r24
    13e2:	10 f4       	brcc	.+4      	; 0x13e8 <xTaskResumeAll+0x60>
    13e4:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <uxTopReadyPriority>
    13e8:	90 e0       	ldi	r25, 0x00	; 0
    13ea:	9c 01       	movw	r18, r24
    13ec:	22 0f       	add	r18, r18
    13ee:	33 1f       	adc	r19, r19
    13f0:	22 0f       	add	r18, r18
    13f2:	33 1f       	adc	r19, r19
    13f4:	22 0f       	add	r18, r18
    13f6:	33 1f       	adc	r19, r19
    13f8:	82 0f       	add	r24, r18
    13fa:	93 1f       	adc	r25, r19
    13fc:	b8 01       	movw	r22, r16
    13fe:	81 5a       	subi	r24, 0xA1	; 161
    1400:	98 4f       	sbci	r25, 0xF8	; 248
    1402:	0e 94 2b 02 	call	0x456	; 0x456 <vListInsertEnd>
    1406:	e0 91 83 07 	lds	r30, 0x0783	; 0x800783 <pxCurrentTCB>
    140a:	f0 91 84 07 	lds	r31, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    140e:	9e 89       	ldd	r25, Y+22	; 0x16
    1410:	86 89       	ldd	r24, Z+22	; 0x16
    1412:	98 17       	cp	r25, r24
    1414:	58 f0       	brcs	.+22     	; 0x142c <xTaskResumeAll+0xa4>
    1416:	d0 92 24 07 	sts	0x0724, r13	; 0x800724 <xYieldPending>
    141a:	08 c0       	rjmp	.+16     	; 0x142c <xTaskResumeAll+0xa4>
    141c:	0f 2e       	mov	r0, r31
    141e:	f0 e4       	ldi	r31, 0x40	; 64
    1420:	ef 2e       	mov	r14, r31
    1422:	f7 e0       	ldi	r31, 0x07	; 7
    1424:	ff 2e       	mov	r15, r31
    1426:	f0 2d       	mov	r31, r0
    1428:	dd 24       	eor	r13, r13
    142a:	d3 94       	inc	r13
    142c:	f7 01       	movw	r30, r14
    142e:	80 81       	ld	r24, Z
    1430:	81 11       	cpse	r24, r1
    1432:	c2 cf       	rjmp	.-124    	; 0x13b8 <xTaskResumeAll+0x30>
    1434:	80 91 25 07 	lds	r24, 0x0725	; 0x800725 <uxPendedTicks>
    1438:	88 23       	and	r24, r24
    143a:	99 f0       	breq	.+38     	; 0x1462 <xTaskResumeAll+0xda>
    143c:	80 91 25 07 	lds	r24, 0x0725	; 0x800725 <uxPendedTicks>
    1440:	88 23       	and	r24, r24
    1442:	79 f0       	breq	.+30     	; 0x1462 <xTaskResumeAll+0xda>
    1444:	c1 e0       	ldi	r28, 0x01	; 1
    1446:	0e 94 07 09 	call	0x120e	; 0x120e <xTaskIncrementTick>
    144a:	81 11       	cpse	r24, r1
    144c:	c0 93 24 07 	sts	0x0724, r28	; 0x800724 <xYieldPending>
    1450:	80 91 25 07 	lds	r24, 0x0725	; 0x800725 <uxPendedTicks>
    1454:	81 50       	subi	r24, 0x01	; 1
    1456:	80 93 25 07 	sts	0x0725, r24	; 0x800725 <uxPendedTicks>
    145a:	80 91 25 07 	lds	r24, 0x0725	; 0x800725 <uxPendedTicks>
    145e:	81 11       	cpse	r24, r1
    1460:	f2 cf       	rjmp	.-28     	; 0x1446 <xTaskResumeAll+0xbe>
    1462:	80 91 24 07 	lds	r24, 0x0724	; 0x800724 <xYieldPending>
    1466:	81 30       	cpi	r24, 0x01	; 1
    1468:	31 f4       	brne	.+12     	; 0x1476 <xTaskResumeAll+0xee>
    146a:	0e 94 49 03 	call	0x692	; 0x692 <vPortYield>
    146e:	81 e0       	ldi	r24, 0x01	; 1
    1470:	03 c0       	rjmp	.+6      	; 0x1478 <xTaskResumeAll+0xf0>
    1472:	80 e0       	ldi	r24, 0x00	; 0
    1474:	01 c0       	rjmp	.+2      	; 0x1478 <xTaskResumeAll+0xf0>
    1476:	80 e0       	ldi	r24, 0x00	; 0
    1478:	0f 90       	pop	r0
    147a:	0f be       	out	0x3f, r0	; 63
    147c:	df 91       	pop	r29
    147e:	cf 91       	pop	r28
    1480:	1f 91       	pop	r17
    1482:	0f 91       	pop	r16
    1484:	ff 90       	pop	r15
    1486:	ef 90       	pop	r14
    1488:	df 90       	pop	r13
    148a:	08 95       	ret

0000148c <vTaskDelay>:
    148c:	cf 93       	push	r28
    148e:	df 93       	push	r29
    1490:	ec 01       	movw	r28, r24
    1492:	89 2b       	or	r24, r25
    1494:	b1 f0       	breq	.+44     	; 0x14c2 <vTaskDelay+0x36>
    1496:	0e 94 01 09 	call	0x1202	; 0x1202 <vTaskSuspendAll>
    149a:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <xTickCount>
    149e:	90 91 29 07 	lds	r25, 0x0729	; 0x800729 <xTickCount+0x1>
    14a2:	c8 0f       	add	r28, r24
    14a4:	d9 1f       	adc	r29, r25
    14a6:	80 91 83 07 	lds	r24, 0x0783	; 0x800783 <pxCurrentTCB>
    14aa:	90 91 84 07 	lds	r25, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    14ae:	02 96       	adiw	r24, 0x02	; 2
    14b0:	0e 94 7d 02 	call	0x4fa	; 0x4fa <uxListRemove>
    14b4:	ce 01       	movw	r24, r28
    14b6:	0e 94 88 07 	call	0xf10	; 0xf10 <prvAddCurrentTaskToDelayedList>
    14ba:	0e 94 c4 09 	call	0x1388	; 0x1388 <xTaskResumeAll>
    14be:	81 11       	cpse	r24, r1
    14c0:	02 c0       	rjmp	.+4      	; 0x14c6 <vTaskDelay+0x3a>
    14c2:	0e 94 49 03 	call	0x692	; 0x692 <vPortYield>
    14c6:	df 91       	pop	r29
    14c8:	cf 91       	pop	r28
    14ca:	08 95       	ret

000014cc <prvIdleTask>:
    14cc:	07 e3       	ldi	r16, 0x37	; 55
    14ce:	17 e0       	ldi	r17, 0x07	; 7
    14d0:	0f 2e       	mov	r0, r31
    14d2:	ff e5       	ldi	r31, 0x5F	; 95
    14d4:	ef 2e       	mov	r14, r31
    14d6:	f7 e0       	ldi	r31, 0x07	; 7
    14d8:	ff 2e       	mov	r15, r31
    14da:	f0 2d       	mov	r31, r0
    14dc:	29 c0       	rjmp	.+82     	; 0x1530 <prvIdleTask+0x64>
    14de:	0e 94 01 09 	call	0x1202	; 0x1202 <vTaskSuspendAll>
    14e2:	d8 01       	movw	r26, r16
    14e4:	cc 91       	ld	r28, X
    14e6:	0e 94 c4 09 	call	0x1388	; 0x1388 <xTaskResumeAll>
    14ea:	cc 23       	and	r28, r28
    14ec:	09 f1       	breq	.+66     	; 0x1530 <prvIdleTask+0x64>
    14ee:	0f b6       	in	r0, 0x3f	; 63
    14f0:	f8 94       	cli
    14f2:	0f 92       	push	r0
    14f4:	d8 01       	movw	r26, r16
    14f6:	15 96       	adiw	r26, 0x05	; 5
    14f8:	ed 91       	ld	r30, X+
    14fa:	fc 91       	ld	r31, X
    14fc:	16 97       	sbiw	r26, 0x06	; 6
    14fe:	c6 81       	ldd	r28, Z+6	; 0x06
    1500:	d7 81       	ldd	r29, Z+7	; 0x07
    1502:	ce 01       	movw	r24, r28
    1504:	02 96       	adiw	r24, 0x02	; 2
    1506:	0e 94 7d 02 	call	0x4fa	; 0x4fa <uxListRemove>
    150a:	80 91 2a 07 	lds	r24, 0x072A	; 0x80072a <uxCurrentNumberOfTasks>
    150e:	81 50       	subi	r24, 0x01	; 1
    1510:	80 93 2a 07 	sts	0x072A, r24	; 0x80072a <uxCurrentNumberOfTasks>
    1514:	80 91 36 07 	lds	r24, 0x0736	; 0x800736 <uxTasksDeleted>
    1518:	81 50       	subi	r24, 0x01	; 1
    151a:	80 93 36 07 	sts	0x0736, r24	; 0x800736 <uxTasksDeleted>
    151e:	0f 90       	pop	r0
    1520:	0f be       	out	0x3f, r0	; 63
    1522:	8f 89       	ldd	r24, Y+23	; 0x17
    1524:	98 8d       	ldd	r25, Y+24	; 0x18
    1526:	0e 94 9b 04 	call	0x936	; 0x936 <vPortFree>
    152a:	ce 01       	movw	r24, r28
    152c:	0e 94 9b 04 	call	0x936	; 0x936 <vPortFree>
    1530:	80 91 36 07 	lds	r24, 0x0736	; 0x800736 <uxTasksDeleted>
    1534:	81 11       	cpse	r24, r1
    1536:	d3 cf       	rjmp	.-90     	; 0x14de <prvIdleTask+0x12>
    1538:	f7 01       	movw	r30, r14
    153a:	80 81       	ld	r24, Z
    153c:	82 30       	cpi	r24, 0x02	; 2
    153e:	c0 f3       	brcs	.-16     	; 0x1530 <prvIdleTask+0x64>
    1540:	0e 94 49 03 	call	0x692	; 0x692 <vPortYield>
    1544:	f5 cf       	rjmp	.-22     	; 0x1530 <prvIdleTask+0x64>

00001546 <vTaskSwitchContext>:
    1546:	80 91 21 07 	lds	r24, 0x0721	; 0x800721 <uxSchedulerSuspended>
    154a:	88 23       	and	r24, r24
    154c:	21 f0       	breq	.+8      	; 0x1556 <vTaskSwitchContext+0x10>
    154e:	81 e0       	ldi	r24, 0x01	; 1
    1550:	80 93 24 07 	sts	0x0724, r24	; 0x800724 <xYieldPending>
    1554:	08 95       	ret
    1556:	10 92 24 07 	sts	0x0724, r1	; 0x800724 <xYieldPending>
    155a:	80 91 27 07 	lds	r24, 0x0727	; 0x800727 <uxTopReadyPriority>
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	fc 01       	movw	r30, r24
    1562:	ee 0f       	add	r30, r30
    1564:	ff 1f       	adc	r31, r31
    1566:	ee 0f       	add	r30, r30
    1568:	ff 1f       	adc	r31, r31
    156a:	ee 0f       	add	r30, r30
    156c:	ff 1f       	adc	r31, r31
    156e:	8e 0f       	add	r24, r30
    1570:	9f 1f       	adc	r25, r31
    1572:	fc 01       	movw	r30, r24
    1574:	e1 5a       	subi	r30, 0xA1	; 161
    1576:	f8 4f       	sbci	r31, 0xF8	; 248
    1578:	80 81       	ld	r24, Z
    157a:	81 11       	cpse	r24, r1
    157c:	17 c0       	rjmp	.+46     	; 0x15ac <vTaskSwitchContext+0x66>
    157e:	80 91 27 07 	lds	r24, 0x0727	; 0x800727 <uxTopReadyPriority>
    1582:	81 50       	subi	r24, 0x01	; 1
    1584:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <uxTopReadyPriority>
    1588:	80 91 27 07 	lds	r24, 0x0727	; 0x800727 <uxTopReadyPriority>
    158c:	90 e0       	ldi	r25, 0x00	; 0
    158e:	fc 01       	movw	r30, r24
    1590:	ee 0f       	add	r30, r30
    1592:	ff 1f       	adc	r31, r31
    1594:	ee 0f       	add	r30, r30
    1596:	ff 1f       	adc	r31, r31
    1598:	ee 0f       	add	r30, r30
    159a:	ff 1f       	adc	r31, r31
    159c:	8e 0f       	add	r24, r30
    159e:	9f 1f       	adc	r25, r31
    15a0:	fc 01       	movw	r30, r24
    15a2:	e1 5a       	subi	r30, 0xA1	; 161
    15a4:	f8 4f       	sbci	r31, 0xF8	; 248
    15a6:	80 81       	ld	r24, Z
    15a8:	88 23       	and	r24, r24
    15aa:	49 f3       	breq	.-46     	; 0x157e <vTaskSwitchContext+0x38>
    15ac:	80 91 27 07 	lds	r24, 0x0727	; 0x800727 <uxTopReadyPriority>
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	9c 01       	movw	r18, r24
    15b4:	22 0f       	add	r18, r18
    15b6:	33 1f       	adc	r19, r19
    15b8:	22 0f       	add	r18, r18
    15ba:	33 1f       	adc	r19, r19
    15bc:	22 0f       	add	r18, r18
    15be:	33 1f       	adc	r19, r19
    15c0:	28 0f       	add	r18, r24
    15c2:	39 1f       	adc	r19, r25
    15c4:	d9 01       	movw	r26, r18
    15c6:	a1 5a       	subi	r26, 0xA1	; 161
    15c8:	b8 4f       	sbci	r27, 0xF8	; 248
    15ca:	11 96       	adiw	r26, 0x01	; 1
    15cc:	ed 91       	ld	r30, X+
    15ce:	fc 91       	ld	r31, X
    15d0:	12 97       	sbiw	r26, 0x02	; 2
    15d2:	02 80       	ldd	r0, Z+2	; 0x02
    15d4:	f3 81       	ldd	r31, Z+3	; 0x03
    15d6:	e0 2d       	mov	r30, r0
    15d8:	12 96       	adiw	r26, 0x02	; 2
    15da:	fc 93       	st	X, r31
    15dc:	ee 93       	st	-X, r30
    15de:	11 97       	sbiw	r26, 0x01	; 1
    15e0:	2e 59       	subi	r18, 0x9E	; 158
    15e2:	38 4f       	sbci	r19, 0xF8	; 248
    15e4:	e2 17       	cp	r30, r18
    15e6:	f3 07       	cpc	r31, r19
    15e8:	29 f4       	brne	.+10     	; 0x15f4 <vTaskSwitchContext+0xae>
    15ea:	22 81       	ldd	r18, Z+2	; 0x02
    15ec:	33 81       	ldd	r19, Z+3	; 0x03
    15ee:	fd 01       	movw	r30, r26
    15f0:	32 83       	std	Z+2, r19	; 0x02
    15f2:	21 83       	std	Z+1, r18	; 0x01
    15f4:	fc 01       	movw	r30, r24
    15f6:	ee 0f       	add	r30, r30
    15f8:	ff 1f       	adc	r31, r31
    15fa:	ee 0f       	add	r30, r30
    15fc:	ff 1f       	adc	r31, r31
    15fe:	ee 0f       	add	r30, r30
    1600:	ff 1f       	adc	r31, r31
    1602:	8e 0f       	add	r24, r30
    1604:	9f 1f       	adc	r25, r31
    1606:	fc 01       	movw	r30, r24
    1608:	e1 5a       	subi	r30, 0xA1	; 161
    160a:	f8 4f       	sbci	r31, 0xF8	; 248
    160c:	01 80       	ldd	r0, Z+1	; 0x01
    160e:	f2 81       	ldd	r31, Z+2	; 0x02
    1610:	e0 2d       	mov	r30, r0
    1612:	86 81       	ldd	r24, Z+6	; 0x06
    1614:	97 81       	ldd	r25, Z+7	; 0x07
    1616:	90 93 84 07 	sts	0x0784, r25	; 0x800784 <pxCurrentTCB+0x1>
    161a:	80 93 83 07 	sts	0x0783, r24	; 0x800783 <pxCurrentTCB>
    161e:	08 95       	ret

00001620 <vTaskPlaceOnEventList>:
    1620:	cf 93       	push	r28
    1622:	df 93       	push	r29
    1624:	eb 01       	movw	r28, r22
    1626:	60 91 83 07 	lds	r22, 0x0783	; 0x800783 <pxCurrentTCB>
    162a:	70 91 84 07 	lds	r23, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    162e:	64 5f       	subi	r22, 0xF4	; 244
    1630:	7f 4f       	sbci	r23, 0xFF	; 255
    1632:	0e 94 4c 02 	call	0x498	; 0x498 <vListInsert>
    1636:	80 91 83 07 	lds	r24, 0x0783	; 0x800783 <pxCurrentTCB>
    163a:	90 91 84 07 	lds	r25, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    163e:	02 96       	adiw	r24, 0x02	; 2
    1640:	0e 94 7d 02 	call	0x4fa	; 0x4fa <uxListRemove>
    1644:	cf 3f       	cpi	r28, 0xFF	; 255
    1646:	8f ef       	ldi	r24, 0xFF	; 255
    1648:	d8 07       	cpc	r29, r24
    164a:	59 f4       	brne	.+22     	; 0x1662 <vTaskPlaceOnEventList+0x42>
    164c:	60 91 83 07 	lds	r22, 0x0783	; 0x800783 <pxCurrentTCB>
    1650:	70 91 84 07 	lds	r23, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    1654:	6e 5f       	subi	r22, 0xFE	; 254
    1656:	7f 4f       	sbci	r23, 0xFF	; 255
    1658:	8d e2       	ldi	r24, 0x2D	; 45
    165a:	97 e0       	ldi	r25, 0x07	; 7
    165c:	0e 94 2b 02 	call	0x456	; 0x456 <vListInsertEnd>
    1660:	08 c0       	rjmp	.+16     	; 0x1672 <vTaskPlaceOnEventList+0x52>
    1662:	80 91 28 07 	lds	r24, 0x0728	; 0x800728 <xTickCount>
    1666:	90 91 29 07 	lds	r25, 0x0729	; 0x800729 <xTickCount+0x1>
    166a:	8c 0f       	add	r24, r28
    166c:	9d 1f       	adc	r25, r29
    166e:	0e 94 88 07 	call	0xf10	; 0xf10 <prvAddCurrentTaskToDelayedList>
    1672:	df 91       	pop	r29
    1674:	cf 91       	pop	r28
    1676:	08 95       	ret

00001678 <xTaskRemoveFromEventList>:
    1678:	0f 93       	push	r16
    167a:	1f 93       	push	r17
    167c:	cf 93       	push	r28
    167e:	df 93       	push	r29
    1680:	dc 01       	movw	r26, r24
    1682:	15 96       	adiw	r26, 0x05	; 5
    1684:	ed 91       	ld	r30, X+
    1686:	fc 91       	ld	r31, X
    1688:	16 97       	sbiw	r26, 0x06	; 6
    168a:	c6 81       	ldd	r28, Z+6	; 0x06
    168c:	d7 81       	ldd	r29, Z+7	; 0x07
    168e:	8e 01       	movw	r16, r28
    1690:	04 5f       	subi	r16, 0xF4	; 244
    1692:	1f 4f       	sbci	r17, 0xFF	; 255
    1694:	c8 01       	movw	r24, r16
    1696:	0e 94 7d 02 	call	0x4fa	; 0x4fa <uxListRemove>
    169a:	80 91 21 07 	lds	r24, 0x0721	; 0x800721 <uxSchedulerSuspended>
    169e:	81 11       	cpse	r24, r1
    16a0:	1c c0       	rjmp	.+56     	; 0x16da <xTaskRemoveFromEventList+0x62>
    16a2:	0a 50       	subi	r16, 0x0A	; 10
    16a4:	11 09       	sbc	r17, r1
    16a6:	c8 01       	movw	r24, r16
    16a8:	0e 94 7d 02 	call	0x4fa	; 0x4fa <uxListRemove>
    16ac:	8e 89       	ldd	r24, Y+22	; 0x16
    16ae:	90 91 27 07 	lds	r25, 0x0727	; 0x800727 <uxTopReadyPriority>
    16b2:	98 17       	cp	r25, r24
    16b4:	10 f4       	brcc	.+4      	; 0x16ba <xTaskRemoveFromEventList+0x42>
    16b6:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <uxTopReadyPriority>
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	9c 01       	movw	r18, r24
    16be:	22 0f       	add	r18, r18
    16c0:	33 1f       	adc	r19, r19
    16c2:	22 0f       	add	r18, r18
    16c4:	33 1f       	adc	r19, r19
    16c6:	22 0f       	add	r18, r18
    16c8:	33 1f       	adc	r19, r19
    16ca:	82 0f       	add	r24, r18
    16cc:	93 1f       	adc	r25, r19
    16ce:	b8 01       	movw	r22, r16
    16d0:	81 5a       	subi	r24, 0xA1	; 161
    16d2:	98 4f       	sbci	r25, 0xF8	; 248
    16d4:	0e 94 2b 02 	call	0x456	; 0x456 <vListInsertEnd>
    16d8:	05 c0       	rjmp	.+10     	; 0x16e4 <xTaskRemoveFromEventList+0x6c>
    16da:	b8 01       	movw	r22, r16
    16dc:	80 e4       	ldi	r24, 0x40	; 64
    16de:	97 e0       	ldi	r25, 0x07	; 7
    16e0:	0e 94 2b 02 	call	0x456	; 0x456 <vListInsertEnd>
    16e4:	e0 91 83 07 	lds	r30, 0x0783	; 0x800783 <pxCurrentTCB>
    16e8:	f0 91 84 07 	lds	r31, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    16ec:	9e 89       	ldd	r25, Y+22	; 0x16
    16ee:	86 89       	ldd	r24, Z+22	; 0x16
    16f0:	89 17       	cp	r24, r25
    16f2:	20 f4       	brcc	.+8      	; 0x16fc <xTaskRemoveFromEventList+0x84>
    16f4:	81 e0       	ldi	r24, 0x01	; 1
    16f6:	80 93 24 07 	sts	0x0724, r24	; 0x800724 <xYieldPending>
    16fa:	01 c0       	rjmp	.+2      	; 0x16fe <xTaskRemoveFromEventList+0x86>
    16fc:	80 e0       	ldi	r24, 0x00	; 0
    16fe:	df 91       	pop	r29
    1700:	cf 91       	pop	r28
    1702:	1f 91       	pop	r17
    1704:	0f 91       	pop	r16
    1706:	08 95       	ret

00001708 <vTaskSetTimeOutState>:
    1708:	20 91 23 07 	lds	r18, 0x0723	; 0x800723 <xNumOfOverflows>
    170c:	fc 01       	movw	r30, r24
    170e:	20 83       	st	Z, r18
    1710:	20 91 28 07 	lds	r18, 0x0728	; 0x800728 <xTickCount>
    1714:	30 91 29 07 	lds	r19, 0x0729	; 0x800729 <xTickCount+0x1>
    1718:	32 83       	std	Z+2, r19	; 0x02
    171a:	21 83       	std	Z+1, r18	; 0x01
    171c:	08 95       	ret

0000171e <xTaskCheckForTimeOut>:
    171e:	0f b6       	in	r0, 0x3f	; 63
    1720:	f8 94       	cli
    1722:	0f 92       	push	r0
    1724:	40 91 28 07 	lds	r20, 0x0728	; 0x800728 <xTickCount>
    1728:	50 91 29 07 	lds	r21, 0x0729	; 0x800729 <xTickCount+0x1>
    172c:	db 01       	movw	r26, r22
    172e:	2d 91       	ld	r18, X+
    1730:	3c 91       	ld	r19, X
    1732:	2f 3f       	cpi	r18, 0xFF	; 255
    1734:	bf ef       	ldi	r27, 0xFF	; 255
    1736:	3b 07       	cpc	r19, r27
    1738:	19 f1       	breq	.+70     	; 0x1780 <xTaskCheckForTimeOut+0x62>
    173a:	e0 91 23 07 	lds	r30, 0x0723	; 0x800723 <xNumOfOverflows>
    173e:	dc 01       	movw	r26, r24
    1740:	fc 91       	ld	r31, X
    1742:	fe 17       	cp	r31, r30
    1744:	39 f0       	breq	.+14     	; 0x1754 <xTaskCheckForTimeOut+0x36>
    1746:	11 96       	adiw	r26, 0x01	; 1
    1748:	ed 91       	ld	r30, X+
    174a:	fc 91       	ld	r31, X
    174c:	12 97       	sbiw	r26, 0x02	; 2
    174e:	4e 17       	cp	r20, r30
    1750:	5f 07       	cpc	r21, r31
    1752:	c0 f4       	brcc	.+48     	; 0x1784 <xTaskCheckForTimeOut+0x66>
    1754:	dc 01       	movw	r26, r24
    1756:	11 96       	adiw	r26, 0x01	; 1
    1758:	ed 91       	ld	r30, X+
    175a:	fc 91       	ld	r31, X
    175c:	12 97       	sbiw	r26, 0x02	; 2
    175e:	da 01       	movw	r26, r20
    1760:	ae 1b       	sub	r26, r30
    1762:	bf 0b       	sbc	r27, r31
    1764:	a2 17       	cp	r26, r18
    1766:	b3 07       	cpc	r27, r19
    1768:	78 f4       	brcc	.+30     	; 0x1788 <xTaskCheckForTimeOut+0x6a>
    176a:	db 01       	movw	r26, r22
    176c:	e4 1b       	sub	r30, r20
    176e:	f5 0b       	sbc	r31, r21
    1770:	2e 0f       	add	r18, r30
    1772:	3f 1f       	adc	r19, r31
    1774:	2d 93       	st	X+, r18
    1776:	3c 93       	st	X, r19
    1778:	0e 94 84 0b 	call	0x1708	; 0x1708 <vTaskSetTimeOutState>
    177c:	80 e0       	ldi	r24, 0x00	; 0
    177e:	05 c0       	rjmp	.+10     	; 0x178a <xTaskCheckForTimeOut+0x6c>
    1780:	80 e0       	ldi	r24, 0x00	; 0
    1782:	03 c0       	rjmp	.+6      	; 0x178a <xTaskCheckForTimeOut+0x6c>
    1784:	81 e0       	ldi	r24, 0x01	; 1
    1786:	01 c0       	rjmp	.+2      	; 0x178a <xTaskCheckForTimeOut+0x6c>
    1788:	81 e0       	ldi	r24, 0x01	; 1
    178a:	0f 90       	pop	r0
    178c:	0f be       	out	0x3f, r0	; 63
    178e:	08 95       	ret

00001790 <vTaskMissedYield>:
    1790:	81 e0       	ldi	r24, 0x01	; 1
    1792:	80 93 24 07 	sts	0x0724, r24	; 0x800724 <xYieldPending>
    1796:	08 95       	ret

00001798 <vTaskPriorityInherit>:
    1798:	0f 93       	push	r16
    179a:	1f 93       	push	r17
    179c:	cf 93       	push	r28
    179e:	df 93       	push	r29
    17a0:	fc 01       	movw	r30, r24
    17a2:	89 2b       	or	r24, r25
    17a4:	09 f4       	brne	.+2      	; 0x17a8 <vTaskPriorityInherit+0x10>
    17a6:	55 c0       	rjmp	.+170    	; 0x1852 <vTaskPriorityInherit+0xba>
    17a8:	26 89       	ldd	r18, Z+22	; 0x16
    17aa:	a0 91 83 07 	lds	r26, 0x0783	; 0x800783 <pxCurrentTCB>
    17ae:	b0 91 84 07 	lds	r27, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    17b2:	56 96       	adiw	r26, 0x16	; 22
    17b4:	8c 91       	ld	r24, X
    17b6:	28 17       	cp	r18, r24
    17b8:	08 f0       	brcs	.+2      	; 0x17bc <vTaskPriorityInherit+0x24>
    17ba:	4b c0       	rjmp	.+150    	; 0x1852 <vTaskPriorityInherit+0xba>
    17bc:	84 85       	ldd	r24, Z+12	; 0x0c
    17be:	95 85       	ldd	r25, Z+13	; 0x0d
    17c0:	99 23       	and	r25, r25
    17c2:	64 f0       	brlt	.+24     	; 0x17dc <vTaskPriorityInherit+0x44>
    17c4:	a0 91 83 07 	lds	r26, 0x0783	; 0x800783 <pxCurrentTCB>
    17c8:	b0 91 84 07 	lds	r27, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    17cc:	56 96       	adiw	r26, 0x16	; 22
    17ce:	3c 91       	ld	r19, X
    17d0:	84 e0       	ldi	r24, 0x04	; 4
    17d2:	90 e0       	ldi	r25, 0x00	; 0
    17d4:	83 1b       	sub	r24, r19
    17d6:	91 09       	sbc	r25, r1
    17d8:	95 87       	std	Z+13, r25	; 0x0d
    17da:	84 87       	std	Z+12, r24	; 0x0c
    17dc:	30 e0       	ldi	r19, 0x00	; 0
    17de:	c9 01       	movw	r24, r18
    17e0:	88 0f       	add	r24, r24
    17e2:	99 1f       	adc	r25, r25
    17e4:	88 0f       	add	r24, r24
    17e6:	99 1f       	adc	r25, r25
    17e8:	88 0f       	add	r24, r24
    17ea:	99 1f       	adc	r25, r25
    17ec:	28 0f       	add	r18, r24
    17ee:	39 1f       	adc	r19, r25
    17f0:	21 5a       	subi	r18, 0xA1	; 161
    17f2:	38 4f       	sbci	r19, 0xF8	; 248
    17f4:	82 85       	ldd	r24, Z+10	; 0x0a
    17f6:	93 85       	ldd	r25, Z+11	; 0x0b
    17f8:	82 17       	cp	r24, r18
    17fa:	93 07       	cpc	r25, r19
    17fc:	19 f5       	brne	.+70     	; 0x1844 <vTaskPriorityInherit+0xac>
    17fe:	8f 01       	movw	r16, r30
    1800:	ef 01       	movw	r28, r30
    1802:	22 96       	adiw	r28, 0x02	; 2
    1804:	ce 01       	movw	r24, r28
    1806:	0e 94 7d 02 	call	0x4fa	; 0x4fa <uxListRemove>
    180a:	e0 91 83 07 	lds	r30, 0x0783	; 0x800783 <pxCurrentTCB>
    180e:	f0 91 84 07 	lds	r31, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    1812:	86 89       	ldd	r24, Z+22	; 0x16
    1814:	f8 01       	movw	r30, r16
    1816:	86 8b       	std	Z+22, r24	; 0x16
    1818:	90 91 27 07 	lds	r25, 0x0727	; 0x800727 <uxTopReadyPriority>
    181c:	98 17       	cp	r25, r24
    181e:	10 f4       	brcc	.+4      	; 0x1824 <vTaskPriorityInherit+0x8c>
    1820:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <uxTopReadyPriority>
    1824:	90 e0       	ldi	r25, 0x00	; 0
    1826:	9c 01       	movw	r18, r24
    1828:	22 0f       	add	r18, r18
    182a:	33 1f       	adc	r19, r19
    182c:	22 0f       	add	r18, r18
    182e:	33 1f       	adc	r19, r19
    1830:	22 0f       	add	r18, r18
    1832:	33 1f       	adc	r19, r19
    1834:	82 0f       	add	r24, r18
    1836:	93 1f       	adc	r25, r19
    1838:	be 01       	movw	r22, r28
    183a:	81 5a       	subi	r24, 0xA1	; 161
    183c:	98 4f       	sbci	r25, 0xF8	; 248
    183e:	0e 94 2b 02 	call	0x456	; 0x456 <vListInsertEnd>
    1842:	07 c0       	rjmp	.+14     	; 0x1852 <vTaskPriorityInherit+0xba>
    1844:	a0 91 83 07 	lds	r26, 0x0783	; 0x800783 <pxCurrentTCB>
    1848:	b0 91 84 07 	lds	r27, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    184c:	56 96       	adiw	r26, 0x16	; 22
    184e:	8c 91       	ld	r24, X
    1850:	86 8b       	std	Z+22, r24	; 0x16
    1852:	df 91       	pop	r29
    1854:	cf 91       	pop	r28
    1856:	1f 91       	pop	r17
    1858:	0f 91       	pop	r16
    185a:	08 95       	ret

0000185c <xTaskPriorityDisinherit>:
    185c:	0f 93       	push	r16
    185e:	1f 93       	push	r17
    1860:	cf 93       	push	r28
    1862:	df 93       	push	r29
    1864:	fc 01       	movw	r30, r24
    1866:	89 2b       	or	r24, r25
    1868:	79 f1       	breq	.+94     	; 0x18c8 <xTaskPriorityDisinherit+0x6c>
    186a:	82 a1       	ldd	r24, Z+34	; 0x22
    186c:	81 50       	subi	r24, 0x01	; 1
    186e:	82 a3       	std	Z+34, r24	; 0x22
    1870:	26 89       	ldd	r18, Z+22	; 0x16
    1872:	91 a1       	ldd	r25, Z+33	; 0x21
    1874:	29 17       	cp	r18, r25
    1876:	51 f1       	breq	.+84     	; 0x18cc <xTaskPriorityDisinherit+0x70>
    1878:	81 11       	cpse	r24, r1
    187a:	2a c0       	rjmp	.+84     	; 0x18d0 <xTaskPriorityDisinherit+0x74>
    187c:	ef 01       	movw	r28, r30
    187e:	8f 01       	movw	r16, r30
    1880:	0e 5f       	subi	r16, 0xFE	; 254
    1882:	1f 4f       	sbci	r17, 0xFF	; 255
    1884:	c8 01       	movw	r24, r16
    1886:	0e 94 7d 02 	call	0x4fa	; 0x4fa <uxListRemove>
    188a:	89 a1       	ldd	r24, Y+33	; 0x21
    188c:	8e 8b       	std	Y+22, r24	; 0x16
    188e:	24 e0       	ldi	r18, 0x04	; 4
    1890:	30 e0       	ldi	r19, 0x00	; 0
    1892:	28 1b       	sub	r18, r24
    1894:	31 09       	sbc	r19, r1
    1896:	3d 87       	std	Y+13, r19	; 0x0d
    1898:	2c 87       	std	Y+12, r18	; 0x0c
    189a:	90 91 27 07 	lds	r25, 0x0727	; 0x800727 <uxTopReadyPriority>
    189e:	98 17       	cp	r25, r24
    18a0:	10 f4       	brcc	.+4      	; 0x18a6 <xTaskPriorityDisinherit+0x4a>
    18a2:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <uxTopReadyPriority>
    18a6:	90 e0       	ldi	r25, 0x00	; 0
    18a8:	9c 01       	movw	r18, r24
    18aa:	22 0f       	add	r18, r18
    18ac:	33 1f       	adc	r19, r19
    18ae:	22 0f       	add	r18, r18
    18b0:	33 1f       	adc	r19, r19
    18b2:	22 0f       	add	r18, r18
    18b4:	33 1f       	adc	r19, r19
    18b6:	82 0f       	add	r24, r18
    18b8:	93 1f       	adc	r25, r19
    18ba:	b8 01       	movw	r22, r16
    18bc:	81 5a       	subi	r24, 0xA1	; 161
    18be:	98 4f       	sbci	r25, 0xF8	; 248
    18c0:	0e 94 2b 02 	call	0x456	; 0x456 <vListInsertEnd>
    18c4:	81 e0       	ldi	r24, 0x01	; 1
    18c6:	05 c0       	rjmp	.+10     	; 0x18d2 <xTaskPriorityDisinherit+0x76>
    18c8:	80 e0       	ldi	r24, 0x00	; 0
    18ca:	03 c0       	rjmp	.+6      	; 0x18d2 <xTaskPriorityDisinherit+0x76>
    18cc:	80 e0       	ldi	r24, 0x00	; 0
    18ce:	01 c0       	rjmp	.+2      	; 0x18d2 <xTaskPriorityDisinherit+0x76>
    18d0:	80 e0       	ldi	r24, 0x00	; 0
    18d2:	df 91       	pop	r29
    18d4:	cf 91       	pop	r28
    18d6:	1f 91       	pop	r17
    18d8:	0f 91       	pop	r16
    18da:	08 95       	ret

000018dc <pvTaskIncrementMutexHeldCount>:
    18dc:	80 91 83 07 	lds	r24, 0x0783	; 0x800783 <pxCurrentTCB>
    18e0:	90 91 84 07 	lds	r25, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    18e4:	89 2b       	or	r24, r25
    18e6:	39 f0       	breq	.+14     	; 0x18f6 <pvTaskIncrementMutexHeldCount+0x1a>
    18e8:	e0 91 83 07 	lds	r30, 0x0783	; 0x800783 <pxCurrentTCB>
    18ec:	f0 91 84 07 	lds	r31, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    18f0:	82 a1       	ldd	r24, Z+34	; 0x22
    18f2:	8f 5f       	subi	r24, 0xFF	; 255
    18f4:	82 a3       	std	Z+34, r24	; 0x22
    18f6:	80 91 83 07 	lds	r24, 0x0783	; 0x800783 <pxCurrentTCB>
    18fa:	90 91 84 07 	lds	r25, 0x0784	; 0x800784 <pxCurrentTCB+0x1>
    18fe:	08 95       	ret

00001900 <__vector_1>:
    1900:	1f 92       	push	r1
    1902:	0f 92       	push	r0
    1904:	0f b6       	in	r0, 0x3f	; 63
    1906:	0f 92       	push	r0
    1908:	11 24       	eor	r1, r1
    190a:	2f 93       	push	r18
    190c:	3f 93       	push	r19
    190e:	4f 93       	push	r20
    1910:	5f 93       	push	r21
    1912:	6f 93       	push	r22
    1914:	7f 93       	push	r23
    1916:	8f 93       	push	r24
    1918:	9f 93       	push	r25
    191a:	af 93       	push	r26
    191c:	bf 93       	push	r27
    191e:	ef 93       	push	r30
    1920:	ff 93       	push	r31
    1922:	80 91 85 07 	lds	r24, 0x0785	; 0x800785 <intFunc>
    1926:	90 91 86 07 	lds	r25, 0x0786	; 0x800786 <intFunc+0x1>
    192a:	89 2b       	or	r24, r25
    192c:	29 f0       	breq	.+10     	; 0x1938 <__vector_1+0x38>
    192e:	e0 91 85 07 	lds	r30, 0x0785	; 0x800785 <intFunc>
    1932:	f0 91 86 07 	lds	r31, 0x0786	; 0x800786 <intFunc+0x1>
    1936:	09 95       	icall
    1938:	ff 91       	pop	r31
    193a:	ef 91       	pop	r30
    193c:	bf 91       	pop	r27
    193e:	af 91       	pop	r26
    1940:	9f 91       	pop	r25
    1942:	8f 91       	pop	r24
    1944:	7f 91       	pop	r23
    1946:	6f 91       	pop	r22
    1948:	5f 91       	pop	r21
    194a:	4f 91       	pop	r20
    194c:	3f 91       	pop	r19
    194e:	2f 91       	pop	r18
    1950:	0f 90       	pop	r0
    1952:	0f be       	out	0x3f, r0	; 63
    1954:	0f 90       	pop	r0
    1956:	1f 90       	pop	r1
    1958:	18 95       	reti

0000195a <__vector_2>:
    195a:	1f 92       	push	r1
    195c:	0f 92       	push	r0
    195e:	0f b6       	in	r0, 0x3f	; 63
    1960:	0f 92       	push	r0
    1962:	11 24       	eor	r1, r1
    1964:	2f 93       	push	r18
    1966:	3f 93       	push	r19
    1968:	4f 93       	push	r20
    196a:	5f 93       	push	r21
    196c:	6f 93       	push	r22
    196e:	7f 93       	push	r23
    1970:	8f 93       	push	r24
    1972:	9f 93       	push	r25
    1974:	af 93       	push	r26
    1976:	bf 93       	push	r27
    1978:	ef 93       	push	r30
    197a:	ff 93       	push	r31
    197c:	80 91 87 07 	lds	r24, 0x0787	; 0x800787 <intFunc+0x2>
    1980:	90 91 88 07 	lds	r25, 0x0788	; 0x800788 <intFunc+0x3>
    1984:	89 2b       	or	r24, r25
    1986:	29 f0       	breq	.+10     	; 0x1992 <__vector_2+0x38>
    1988:	e0 91 87 07 	lds	r30, 0x0787	; 0x800787 <intFunc+0x2>
    198c:	f0 91 88 07 	lds	r31, 0x0788	; 0x800788 <intFunc+0x3>
    1990:	09 95       	icall
    1992:	ff 91       	pop	r31
    1994:	ef 91       	pop	r30
    1996:	bf 91       	pop	r27
    1998:	af 91       	pop	r26
    199a:	9f 91       	pop	r25
    199c:	8f 91       	pop	r24
    199e:	7f 91       	pop	r23
    19a0:	6f 91       	pop	r22
    19a2:	5f 91       	pop	r21
    19a4:	4f 91       	pop	r20
    19a6:	3f 91       	pop	r19
    19a8:	2f 91       	pop	r18
    19aa:	0f 90       	pop	r0
    19ac:	0f be       	out	0x3f, r0	; 63
    19ae:	0f 90       	pop	r0
    19b0:	1f 90       	pop	r1
    19b2:	18 95       	reti

000019b4 <memcpy>:
    19b4:	fb 01       	movw	r30, r22
    19b6:	dc 01       	movw	r26, r24
    19b8:	02 c0       	rjmp	.+4      	; 0x19be <memcpy+0xa>
    19ba:	01 90       	ld	r0, Z+
    19bc:	0d 92       	st	X+, r0
    19be:	41 50       	subi	r20, 0x01	; 1
    19c0:	50 40       	sbci	r21, 0x00	; 0
    19c2:	d8 f7       	brcc	.-10     	; 0x19ba <memcpy+0x6>
    19c4:	08 95       	ret

000019c6 <itoa>:
    19c6:	45 32       	cpi	r20, 0x25	; 37
    19c8:	51 05       	cpc	r21, r1
    19ca:	20 f4       	brcc	.+8      	; 0x19d4 <itoa+0xe>
    19cc:	42 30       	cpi	r20, 0x02	; 2
    19ce:	10 f0       	brcs	.+4      	; 0x19d4 <itoa+0xe>
    19d0:	0c 94 ee 0c 	jmp	0x19dc	; 0x19dc <__itoa_ncheck>
    19d4:	fb 01       	movw	r30, r22
    19d6:	10 82       	st	Z, r1
    19d8:	cb 01       	movw	r24, r22
    19da:	08 95       	ret

000019dc <__itoa_ncheck>:
    19dc:	bb 27       	eor	r27, r27
    19de:	4a 30       	cpi	r20, 0x0A	; 10
    19e0:	31 f4       	brne	.+12     	; 0x19ee <__itoa_ncheck+0x12>
    19e2:	99 23       	and	r25, r25
    19e4:	22 f4       	brpl	.+8      	; 0x19ee <__itoa_ncheck+0x12>
    19e6:	bd e2       	ldi	r27, 0x2D	; 45
    19e8:	90 95       	com	r25
    19ea:	81 95       	neg	r24
    19ec:	9f 4f       	sbci	r25, 0xFF	; 255
    19ee:	0c 94 fa 0c 	jmp	0x19f4	; 0x19f4 <__utoa_common>

000019f2 <__utoa_ncheck>:
    19f2:	bb 27       	eor	r27, r27

000019f4 <__utoa_common>:
    19f4:	fb 01       	movw	r30, r22
    19f6:	55 27       	eor	r21, r21
    19f8:	aa 27       	eor	r26, r26
    19fa:	88 0f       	add	r24, r24
    19fc:	99 1f       	adc	r25, r25
    19fe:	aa 1f       	adc	r26, r26
    1a00:	a4 17       	cp	r26, r20
    1a02:	10 f0       	brcs	.+4      	; 0x1a08 <__utoa_common+0x14>
    1a04:	a4 1b       	sub	r26, r20
    1a06:	83 95       	inc	r24
    1a08:	50 51       	subi	r21, 0x10	; 16
    1a0a:	b9 f7       	brne	.-18     	; 0x19fa <__utoa_common+0x6>
    1a0c:	a0 5d       	subi	r26, 0xD0	; 208
    1a0e:	aa 33       	cpi	r26, 0x3A	; 58
    1a10:	08 f0       	brcs	.+2      	; 0x1a14 <__utoa_common+0x20>
    1a12:	a9 5d       	subi	r26, 0xD9	; 217
    1a14:	a1 93       	st	Z+, r26
    1a16:	00 97       	sbiw	r24, 0x00	; 0
    1a18:	79 f7       	brne	.-34     	; 0x19f8 <__utoa_common+0x4>
    1a1a:	b1 11       	cpse	r27, r1
    1a1c:	b1 93       	st	Z+, r27
    1a1e:	11 92       	st	Z+, r1
    1a20:	cb 01       	movw	r24, r22
    1a22:	0c 94 13 0d 	jmp	0x1a26	; 0x1a26 <strrev>

00001a26 <strrev>:
    1a26:	dc 01       	movw	r26, r24
    1a28:	fc 01       	movw	r30, r24
    1a2a:	67 2f       	mov	r22, r23
    1a2c:	71 91       	ld	r23, Z+
    1a2e:	77 23       	and	r23, r23
    1a30:	e1 f7       	brne	.-8      	; 0x1a2a <strrev+0x4>
    1a32:	32 97       	sbiw	r30, 0x02	; 2
    1a34:	04 c0       	rjmp	.+8      	; 0x1a3e <strrev+0x18>
    1a36:	7c 91       	ld	r23, X
    1a38:	6d 93       	st	X+, r22
    1a3a:	70 83       	st	Z, r23
    1a3c:	62 91       	ld	r22, -Z
    1a3e:	ae 17       	cp	r26, r30
    1a40:	bf 07       	cpc	r27, r31
    1a42:	c8 f3       	brcs	.-14     	; 0x1a36 <strrev+0x10>
    1a44:	08 95       	ret

00001a46 <_exit>:
    1a46:	f8 94       	cli

00001a48 <__stop_program>:
    1a48:	ff cf       	rjmp	.-2      	; 0x1a48 <__stop_program>
